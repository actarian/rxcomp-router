{"version":3,"sources":["src/rxcomp-router.ts","../../src/core/view.ts","../../src/location/location.strategy.ts","../../src/route/route-activators.ts","../../src/route/route-segment.ts","../../src/route/route.ts","../../src/route/route-path.ts","../../src/route/route-snapshot.ts","../../src/router/router-events.ts","../../src/router/router.service.ts","../../src/router/router-link.directive.ts","../../src/router/router-link-active.directive.ts","../../src/router/router-outlet.structure.ts","../../src/router.module.ts","../../src/router.types.ts","../../src/transition/transition.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","rxcomp","router","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","toString","call","slice","name","from","test","_unsupportedIterableToArray","done","TypeError","next","bind","View","_Component","_proto","onEnter","node","of","onExit","Component","LocationStrategy","serializeLink","routerLink","_this","url","map","x","encodeParams","join","serializeUrl","serialize","routePath","prefix","path","search","hash","resolve","segments","params","_step","query","_iterator","matchAll","match","g1","g2","g3","substring","split","resolveParams","routeSegments","_this2","segment","index","decodeParams","encoded","Serializer","encode","encodeJson","encodeBase64","encodeParam","decoded","indexOf","decode","decodeParam","decodeBase64","decodeJson","error","Number","encodeSegment","encodeString","replace","decodeSegment","decodeString","encodeURIComponent","decodeURIComponent","getPath","getUrl","setHistory","popped","isPlatformBrowser","history","pushState","title","document","replaceState","undefined","LocationStrategyPath","_LocationStrategy","_proto2","_step2","_iterator2","LocationStrategyHash","_LocationStrategy2","_proto3","_this3","_step3","_iterator3","isPromise","Promise","makeObserver$_","callback","Observable","observer","subscription","result","isObservable","subscribe","complete","then","Error","unsubscribe","RouteSegment","Route","options","pathMatch","relative","canDeactivate","canLoad","canActivate","canActivateChild","assign","activator","component","currentRoute","route","childRoute","children","iRoute","parent","matcher","RegExp","matchers","param","regexp","RoutePath","snapshot","locationStrategy","get","url_","set","routeSegments_","RouteSnapshot","data$","ReplaySubject","params$","queryParams$","data","queryParams","RouterEvent","NavigationStart","_RouterEvent","RoutesRecognized","_RouterEvent2","GuardsCheckStart","_RouterEvent3","ChildActivationStart","_RouterEvent4","ActivationStart","_RouterEvent5","GuardsCheckEnd","_RouterEvent6","ResolveStart","_RouterEvent7","ResolveEnd","_RouterEvent8","ActivationEnd","_RouterEvent9","ChildActivationEnd","_RouterEvent10","RouteConfigLoadStart","_RouterEvent11","RouteConfigLoadEnd","_RouterEvent12","NavigationEnd","_RouterEvent13","NavigationCancel","_RouterEvent14","NavigationError","_RouterEvent15","RouterService","setRoutes","routes","observe$","makeObserve$_","route$","events$","setRouterLink","extras","trigger","navigate","findRoute","initialUrl","findRouteByUrl","getFlatRoutes_","resolvedRoute","lastMatcbesLength","NEGATIVE_INFINITY","matches","urlAfterRedirects","redirectTo","lastPath","r","unshift","extractedUrl","useLocationStrategy","locationStrategyType","locationStrategy_","reduceRoutes","reduce","p","c","resolveRoutes_","childRoutes","resolvedSnapshot","resolveRoute_","remainUrl","_route$children","childSnapshot","makeActivatorResponse$_","event","activators","combineLatest","pipe","values","cancelEvent","reason","stateEvents$","isPlatformServer","EMPTY","merge","fromEvent","WINDOW","location","pathname","shareReplay","switchMap","instance","getContextByNode","element","makeCanDeactivateResponse$_","nextEvent","makeCanLoadResponse$_","routeActivators","reduceChildRouteActivators_","makeCanActivateChildResponse$_","makeCanActivateResponse$_","tap","_currentRoute$childre","_source$extractedUrl","_source$remainUrl","currentSnapshot","snapshots","getFlatSnapshots_","clearRoutes_","console","log","catchError","RouterLinkDirective","_Directive","getSegments","item","components","onInit","getContext","takeUntil","unsubscribe$","navigationExtras","skipLocationChange","replaceUrl","state","preventDefault","onChanges","routerLink_","setAttribute","Directive","selector","inputs","RouterLinkActiveDirective","classList","remove","isActive","routerLinkActive","add","_path$route","host","hosts","RouterOutletStructure","_Structure","route$_","_this$host$route","factory$","_this$host$route2","route_","snapshot_","_this4","_getContext","factory","factory_","onExit$_","parentNode","removeChild","meta","template","createElement","innerHTML","firstElementChild","appendChild","makeInstance","compile","onEnter$_","asObservable","Structure","args","RouteLocationStrategy","factories","pipes","RouterModule","_Module","_this$instances","instances","pushChanges","forRoot","useStrategy","Module","declarations","concat","transition$"],"mappings":";;;;;CAMC,SAASA,EAAEC,GAAoB,iBAAVC,SAAoC,oBAATC,OAAqBF,EAAEC,QAAQE,QAAQ,UAAUA,QAAQ,QAAQA,QAAQ,mBAAmC,mBAATC,QAAqBA,OAAOC,IAAID,OAAO,CAAC,UAAU,SAAS,OAAO,kBAAkBJ,GAAyDA,IAArDD,EAAsB,oBAAbO,WAAyBA,WAAWP,GAAGQ,MAAUC,OAAOT,EAAES,QAAQ,GAAGT,EAAES,OAAOC,OAAO,IAAIV,EAAES,OAAOT,EAAEW,KAAKX,EAAEW,KAAKC,WAArW,CAAmXC,MAAK,SAAUX,EAASO,EAAQE,EAAMC,GAAW,aAAa,SAASE,EAAkBC,EAAQC,GACld,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAaC,EAAaC,EAAYC,GAG7C,OAFID,GAAYd,EAAkBa,EAAYG,UAAWF,GACrDC,GAAaf,EAAkBa,EAAaE,GACzCF,EAGT,SAASI,EAAgBC,EAAKP,EAAKQ,GAYjC,OAXIR,KAAOO,EACTT,OAAOC,eAAeQ,EAAKP,EAAK,CAC9BQ,MAAOA,EACPb,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZU,EAAIP,GAAOQ,EAGND,EAGT,SAASE,EAAQC,EAAQC,GACvB,IAAIC,EAAOd,OAAOc,KAAKF,GAEvB,GAAIZ,OAAOe,sBAAuB,CAChC,IAAIC,EAAUhB,OAAOe,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOlB,OAAOmB,yBAAyBP,EAAQM,GAAKrB,eAEtDiB,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGT,SAASQ,EAAe9B,GACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI6B,UAAU5B,OAAQD,IAAK,CACzC,IAAI8B,EAAyB,MAAhBD,UAAU7B,GAAa6B,UAAU7B,GAAK,GAE/CA,EAAI,EACNiB,EAAQX,OAAOwB,IAAS,GAAMC,SAAQ,SAAUvB,GAC9CM,EAAgBhB,EAAQU,EAAKsB,EAAOtB,OAE7BF,OAAO0B,0BAChB1B,OAAO2B,iBAAiBnC,EAAQQ,OAAO0B,0BAA0BF,IAEjEb,EAAQX,OAAOwB,IAASC,SAAQ,SAAUvB,GACxCF,OAAOC,eAAeT,EAAQU,EAAKF,OAAOmB,yBAAyBK,EAAQtB,OAKjF,OAAOV,EAGT,SAASoC,EAAeC,EAAUC,GAChCD,EAAStB,UAAYP,OAAO+B,OAAOD,EAAWvB,WAC9CsB,EAAStB,UAAUyB,YAAcH,EACjCA,EAASI,UAAYH,EAYvB,SAASI,EAAkBC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIxC,UAAQyC,EAAMD,EAAIxC,QAE/C,IAAK,IAAID,EAAI,EAAG2C,EAAO,IAAIC,MAAMF,GAAM1C,EAAI0C,EAAK1C,IAAK2C,EAAK3C,GAAKyC,EAAIzC,GAEnE,OAAO2C,EAGT,SAASE,EAAgCC,EAAGC,GAC1C,IAAIC,EAEJ,GAAsB,oBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIN,MAAMO,QAAQL,KAAOE,EArB7B,SAAqCF,EAAGM,GACtC,GAAKN,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAON,EAAkBM,EAAGM,GACvD,IAAIC,EAAI/C,OAAOO,UAAUyC,SAASC,KAAKT,GAAGU,MAAM,GAAI,GAEpD,MADU,WAANH,GAAkBP,EAAER,cAAae,EAAIP,EAAER,YAAYmB,MAC7C,QAANJ,GAAqB,QAANA,EAAoBT,MAAMc,KAAKZ,GACxC,cAANO,GAAqB,2CAA2CM,KAAKN,GAAWb,EAAkBM,EAAGM,QAAzG,GAegCQ,CAA4Bd,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAE7C,OAAqB,CAChH+C,IAAIF,EAAIE,GACZ,IAAIhD,EAAI,EACR,OAAO,WACL,OAAIA,GAAK8C,EAAE7C,OAAe,CACxB4D,MAAM,GAED,CACLA,MAAM,EACN7C,MAAO8B,EAAE9C,OAKf,MAAM,IAAI8D,UAAU,yIAItB,OADAd,EAAKF,EAAEG,OAAOC,aACJa,KAAKC,KAAKhB,GACrB,IChHoBiB,EAAAA,SAAAA,GDmHnB,SAASA,IACP,OAAOC,EAAWvC,MAAM/B,KAAMiC,YAAcjC,KAH9CsC,EAAe+B,EAAMC,GAMrB,IAAIC,EAASF,EAAKpD,UAUlB,OARAsD,ECvHDC,QAAA,SAAQC,GAAsF,OAAOC,EAAAA,IAAG,ID2HvGH,EC1HDI,OAAA,SAAOF,GAAsF,OAAOC,EAAAA,IAAG,ID8H/FL,ECjIYA,CAAaO,EAAAA,WCgBrBC,EAAb,WAAA,SAAAA,KAAA,IAAAN,EAAAM,EAAA5D,UAAA,OAAAsD,EACCO,cAAA,SAAcC,GFuHX,IAAIC,EAAQhF,KEtHRiF,GAAejC,MAAMO,QAAQwB,GAAcA,EAAa,CAACA,IAAaG,KAAI,SAAAC,GAC/E,MAAoB,iBAANA,EAAiBA,EAAIH,EAAKI,aAAaD,MACnDE,KAAK,KACR,OAAOrF,KAAKsF,aAAaL,IAL3BV,EAOCe,aAAA,SAAaL,GACZ,OAAOA,GARTV,EAUCgB,UAAA,SAAUC,GACT,MAAA,GAAUA,EAAUC,OAASD,EAAUE,KAAOF,EAAUG,OAASH,EAAUI,MAX7ErB,EAaCsB,QAAA,SAAQZ,EAAa/E,QAAAA,IAAAA,IAAAA,EAAqB,IAUzC,IATA,IAGIyF,EAEAG,EACAC,EAGJC,EATIP,EAAiB,GACjBC,EAAe,GACfO,EAAgB,GAEhBL,EAAe,GAKnBM,EAAAjD,EADgBgC,EAAIkB,SADG,8CAEvBH,EAAAE,KAAAjC,MAA2B,CAAA,IAAlBmC,EAAkBJ,EAAA5E,MACpBiF,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACXG,EAAKH,EAAM,GACbC,IACHX,EAAOW,GAEJC,IACHL,EAAQK,GAELC,IACHX,EAAOW,GAkBT,OAfAd,EAASA,EACTC,EAAOA,EACPO,EAAQA,EACRL,EAAOA,EAAKY,UAAU,EAAGZ,EAAKvF,QAC9BsF,EAASM,EAAMO,UAAU,EAAGP,EAAM5F,QAClCyF,EAAWJ,EAAKe,MAAM,KAAK9E,QAAO,SAAAwD,GAAC,MAAU,KAANA,KACvCY,EAAS,GACT7F,EAAOuF,OAASA,EAChBvF,EAAOwF,KAAOA,EACdxF,EAAO+F,MAAQA,EACf/F,EAAO0F,KAAOA,EACd1F,EAAOyF,OAASA,EAChBzF,EAAO4F,SAAWA,EAClB5F,EAAO6F,OAASA,EAET7F,GApDTqE,EAsDCmC,cAAA,SAAchB,EAAciB,GFyIzB,IAAIC,EAAS5G,KExIT8F,EAAqBJ,EAAKe,MAAM,KAAK9E,QAAO,SAAAwD,GAAC,MAAU,KAANA,KACjDY,EAAyB,GAQ/B,OAPAY,EAAcxE,SAAQ,SAAC0E,EAAuBC,GAE7C,IAAMtF,EAAiBd,OAAOc,KAAKqF,EAAQd,QACvCvE,EAAKnB,SACR0F,EAAOvE,EAAK,IAAMoF,EAAKG,aAAajB,EAASgB,QAGxCf,GAhETxB,EAkECa,aAAA,SAAahE,GACZ,IAAI4F,EAMJ,MALqB,iBAAV5F,EACV4F,EAAUC,EAAAA,WAAWC,OAAe9F,EAAO,CAAC+F,EAAAA,WAAYC,EAAAA,aAAcC,IAC3C,iBAAVjG,IACjB4F,EAAU5F,EAAMsC,YAEVsD,GAzETzC,EA2ECwC,aAAA,SAAa3F,GACZ,IAAIkG,EAAelG,EACnB,GAA2B,IAAvBA,EAAMmG,QAAQ,KACjB,IACCD,EAAUL,EAAAA,WAAWO,OAAepG,EAAO,CAACqG,EAAaC,EAAAA,aAAcC,EAAAA,aACtE,MAAOC,GACRN,EAAUlG,OAEDyG,OAAOzG,GAAOsC,aAAetC,IACvCkG,EAAUO,OAAOzG,IAElB,OAAOkG,GAtFT/C,EAwFCuD,cAAA,SAAc1G,GACb,OAAOpB,KAAK+H,aAAa3G,GAAO4G,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,QAAS,MAzF/FzD,EA2FC0D,cAAA,SAAc7G,GACb,OAAOpB,KAAKkI,aAAa9G,EAAM4G,QAAQ,OAAQ,KAAKA,QAAQ,OAAQ,KAAKA,QAAQ,OAAQ,SA5F3FzD,EA8FCwD,aAAA,SAAa3G,GACZ,OAAO+G,mBAAmB/G,GAAO4G,QAAQ,OAAQ,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,OAAQ,KAAKA,QAAQ,QAAS,MA/FpHzD,EAiGC2D,aAAA,SAAa9G,GACZ,OAAOgH,mBAAmBhH,EAAM4G,QAAQ,MAAO,OAAOA,QAAQ,OAAQ,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,OAAQ,SAlGrHzD,EAoGC8D,QAAA,SAAQpD,GACP,OAAOA,GArGTV,EAuGC+D,OAAA,SAAOrD,EAAac,GACnB,OAAUd,GAAMc,EAAS,IAAMA,EAAOrC,WAAa,KAxGrDa,EA0GCgE,WAAA,SAAWtD,EAAac,EAA0ByC,GACjD,GAAIC,EAAAA,mBAAwC,oBAAZC,SAA2BA,QAAQC,UAAW,CAC7E,IAAMC,EAAQC,SAASD,MACvB3D,EAAMjF,KAAKsI,OAAOrD,EAAKc,GAInByC,EACHE,QAAQI,kBAAaC,EAAWH,EAAO3D,GAEvCyD,QAAQC,eAAUI,EAAWH,EAAO3D,KApHxCJ,EAAA,GFqRA,SE5JgBwC,EAAYjG,GAC3B,MAAA,IAAWA,EF8JZ,SE5JgBqG,EAAYrG,GAC3B,OAAOA,EAAMoF,UAAU,EAAGpF,EAAMf,QF8JjC,IE5Ja2I,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAlH,MAAA/B,KAAAiC,YAAAjC,KAAAsC,EAAA0G,EAAAC,GAAA,IAAAC,EAAAF,EAAA/H,UAAA,OAAAiI,EACC3D,UAAA,SAAUC,GACT,MAAA,GAAUA,EAAUC,OAASD,EAAUE,KAAOF,EAAUG,OAASH,EAAUI,MAF7EsD,EAICrD,QAAA,SAAQZ,EAAa/E,QAAAA,IAAAA,IAAAA,EAAqB,IAUzC,IATA,IAGIyF,EAEAG,EACAC,EAGJoD,EATI1D,EAAiB,GACjBC,EAAe,GACfO,EAAgB,GAEhBL,EAAe,GAKnBwD,EAAAnG,EADgBgC,EAAIkB,SADG,8CAEvBgD,EAAAC,KAAAnF,MAA2B,CAAA,IAAlBmC,EAAkB+C,EAAA/H,MACpBiF,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACXG,EAAKH,EAAM,GACbC,IACHX,EAAOW,GAEJC,IACHL,EAAQK,GAELC,IACHX,EAAOW,GAkBT,OAfAd,EAASA,EACTC,EAAOA,EACPO,EAAQA,EACRL,EAAOA,EAAKY,UAAU,EAAGZ,EAAKvF,QAC9BsF,EAASM,EAAMO,UAAU,EAAGP,EAAM5F,QAClCyF,EAAWJ,EAAKe,MAAM,KAAK9E,QAAO,SAAAwD,GAAC,MAAU,KAANA,KACvCY,EAAS,GACT7F,EAAOuF,OAASA,EAChBvF,EAAOwF,KAAOA,EACdxF,EAAO+F,MAAQA,EACf/F,EAAO0F,KAAOA,EACd1F,EAAOyF,OAASA,EAChBzF,EAAO4F,SAAWA,EAClB5F,EAAO6F,OAASA,EAET7F,GA3CT8I,EAAA,CAA0CnE,GA8C7BwE,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAvH,MAAA/B,KAAAiC,YAAAjC,KAAAsC,EAAA+G,EAAAC,GAAA,IAAAC,EAAAF,EAAApI,UAAA,OAAAsI,EACCzE,cAAA,SAAcC,GF4LX,IAAIyE,EAASxJ,KE3LTiF,GAAejC,MAAMO,QAAQwB,GAAcA,EAAa,CAACA,IAAaG,KAAI,SAAAC,GAC/E,MAAoB,iBAANA,EAAiBA,EAAIqE,EAAKpE,aAAaD,MACnDE,KAAK,KACR,OAAOrF,KAAKsF,aAAaL,IAL3BsE,EAOCjE,aAAA,SAAaL,GACZ,IAAMS,EAAmB1F,KAAK6F,QAAQZ,EAAK,IAC3C,OAAOjF,KAAKuF,UAAUG,IATxB6D,EAWChE,UAAA,SAAUC,GACT,MAAA,GAAUA,EAAUC,OAASD,EAAUG,OAASH,EAAUI,KAAOJ,EAAUE,MAZ7E6D,EAcC1D,QAAA,SAAQZ,EAAa/E,QAAAA,IAAAA,IAAAA,EAAqB,IAUzC,IATA,IAGIyF,EAEAG,EACAC,EAGJ0D,EATIhE,EAAiB,GACjBC,EAAe,GACfO,EAAgB,GAEhBL,EAAe,IAKnB8D,EAAAzG,EADgBgC,EAAIkB,SADG,wCAEvBsD,EAAAC,KAAAzF,MAA2B,CAAA,IAAlBmC,EAAkBqD,EAAArI,MACpBiF,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACXG,EAAKH,EAAM,GACbC,IACHZ,EAASY,GAENC,IACHL,EAAQK,GAELC,IACHb,EAAOa,GAiBT,OAdAd,EAASA,EACTC,EAAOA,EAAKc,UAAU,EAAGd,EAAKrF,QAC9BuF,EAAOA,EACPD,EAASM,EAAMO,UAAU,EAAGP,EAAM5F,QAClCyF,EAAWJ,EAAKe,MAAM,KAAK9E,QAAO,SAAAwD,GAAC,MAAU,KAANA,KACvCY,EAAS,GACT7F,EAAOuF,OAASA,EAChBvF,EAAOwF,KAAOA,EACdxF,EAAO+F,MAAQA,EACf/F,EAAO0F,KAAOA,EACd1F,EAAOyF,OAASA,EAChBzF,EAAO4F,SAAWA,EAClB5F,EAAO6F,OAASA,EAET7F,GApDTqJ,EAsDClB,QAAA,SAAQpD,GACP,OAA2B,IAAvBA,EAAIsC,QAAJ,MACH,KAAYtC,EAELA,GA1DVsE,EA6DCjB,OAAA,SAAOrD,EAAac,GACnB,OAAUA,EAAS,IAAMA,EAAOrC,WAAa,IAAK1D,KAAKqI,QAAQpD,IA9DjEoE,EAAA,CAA0CxE,GF4S1C,SGrcgB8E,EAAarI,GAC5B,OAAOA,aAAkBsI,SAA8B,iBAAXtI,GAAuB,SAAUA,GAAoC,mBAAnBA,EAAM,KAGrG,SAASuI,EAAeC,GACvB,OAAOC,EAAAA,WAAWtH,QAAO,SAAUuH,GAClC,IAAIC,EACJ,IACC,IAAIC,EAAgCJ,IAChCK,EAAAA,aAAaD,GAChBD,EAAeC,EAAOE,WAAU,SAAAF,GAC/BF,EAAS7F,KAAK+F,GACdF,EAASK,cAEAV,EAAsCO,GAC/CA,EAA+CI,MAAK,SAAAJ,GACpDF,EAAS7F,KAAK+F,GACdF,EAASK,cAEkB,kBAAXH,GAAwBlH,MAAMO,QAAQ2G,IACvDF,EAAS7F,KAAK+F,GACdF,EAASK,YAETL,EAASpC,MAAM,IAAI2C,MAAM,kBAEzB,MAAO3C,GACRoC,EAASpC,MAAMA,GAEhB,OAAO,WACFqC,GACHA,EAAaO,kBAIhB,ICzEYC,EAGZ,SAAY/E,EAAcK,QAAAA,IAAAA,IAAAA,EAAyB,IAClD/F,KAAK0F,KAAOA,EACZ1F,KAAK+F,OAASA,GC4CH2E,EAeZ,SAAAA,EAAYC,GLydX,IAAI3F,EAAQhF,KKtebA,KAAA4K,UAA+B,SAK/B5K,KAAA6K,UAAoB,EAIpB7K,KAAA8K,cAAiH,GACjH9K,KAAA+K,QAA0G,GAC1G/K,KAAAgL,YAAoF,GACpFhL,KAAAiL,iBAA8F,GAEzFN,IACHjK,OAAOwK,OAAOlL,KAAM2K,GACpB3K,KAAK8K,cAAgBH,EAAQG,cAAgBH,EAAQG,cAAc5F,KAAI,SAAAC,GAAC,OFhDrCgG,EEgDuEhG,EF/CrG,SAAwBiG,EAAcC,GAC5C,OAAOxB,GAAe,WAAA,OAAMsB,EAAUL,cAAcM,EAAWC,OD2KjE,IC7KsCF,KEgD6E,GAChHnL,KAAK+K,QAAUJ,EAAQI,QAAUJ,EAAQI,QAAQ7F,KAAI,SAAAC,GAAC,OF5C5BgG,EE4C6ChG,EF3ClE,SAAmBmG,EAAsBxF,GAC/C,OAAO+D,GAAe,WAAA,OAAMsB,EAAUJ,QAAQO,EAAOxF,OH6bvD,IG/b6BqF,KE4CmD,GAC7EnL,KAAKgL,YAAcL,EAAQK,YAAcL,EAAQK,YAAY9F,KAAI,SAAAC,GAAC,OFxCpCgG,EEwCyDhG,EFvClF,SAAsBmG,GAC5B,OAAOzB,GAAe,WAAA,OAAMsB,EAAUH,YAAYM,OH+bpD,IGjciCH,KEwC+D,GAC7FnL,KAAKiL,iBAAmBN,EAAQM,iBAAmBN,EAAQM,iBAAiB/F,KAAI,SAAAC,GAAC,OFpC9CgG,EEoCwEhG,EFnCtG,SAA2BoG,GACjC,OAAO1B,GAAe,WAAA,OAAMsB,EAAUF,iBAAiBM,OHiczD,IGncsCJ,KEoC8E,IAE9GnL,KAAKwL,WACRxL,KAAKwL,SAAWxL,KAAKwL,SAAStG,KAAI,SAACuG,GAClC,IAAMH,EAAQ,IAAIZ,EAAMe,GAExB,OADAH,EAAMI,OAAS1G,EACRsG,MAGT,IAAMxF,EAA2B,GACjC,GAAkB,OAAd9F,KAAK0F,KACRI,EAAShE,KAAK,IAAI2I,EAAazK,KAAK0F,OACpC1F,KAAK2L,QAAU,IAAIC,OAAO,YACpB,CAIN,IAHA,IAGA5F,EAHM6F,EAAqB,CAAA,mBAG3B3F,EAAAjD,EADgBjD,KAAK0F,KAAKS,SADH,0DAEvBH,EAAAE,KAAAjC,MAA2B,CAAA,IAAlBmC,EAAkBJ,EAAA5E,MACpBiF,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACXG,EAAKH,EAAM,GACjB,GAAIC,EACHrG,KAAK6K,WAAoB,OAAPxE,GAAsB,MAAPA,QAC3B,GAAIC,EACVuF,EAAS/J,KAAKwE,GACdR,EAAShE,KAAK,IAAI2I,EAAanE,SACzB,GAAIC,EAAI,CACdsF,EAAS/J,KAAK,YACd,IAAMgK,EAAgC,GACtCA,EAAMvF,GAAM,KACZT,EAAShE,KAAK,IAAI2I,EAAa,GAAIqB,KAGd,SAAnB9L,KAAK4K,WACRiB,EAAS/J,KAAK,KAEf,IAAMiK,EAAiBF,EAASxG,KAAK,IACrCrF,KAAK2L,QAAU,IAAIC,OAAOG,GAE3B/L,KAAK8F,SAAWA,GChGLkG,EAAb,WAiCC,SAAAA,EAAY/G,EAAkB0B,EAAoCsF,EAAkBC,QAAxEjH,IAAAA,IAAAA,EAAc,SAAI0B,IAAAA,IAAAA,EAAgC,IAT9D3G,KAAAyF,OAAiB,GACjBzF,KAAA0F,KAAe,GACf1F,KAAAiG,MAAgB,GAChBjG,KAAA2F,OAAiB,GACjB3F,KAAA4F,KAAe,GAMd5F,KAAKkM,iBAAmBA,GAAoB,IAAIrH,EAChD7E,KAAKiF,IAAMA,EACXjF,KAAK2G,cAAgBA,EACrB3G,KAAKsL,MAAQW,EArCf,OAAApL,EAAAmL,EAAA,CAAA,CAAApL,IAAA,MAAAuL,IAAA,WAGE,OAAOnM,KAAKoM,MAHdC,IAAA,SAKSpH,GACHjF,KAAKoM,OAASnH,IACjBjF,KAAKkM,iBAAiBrG,QAAQZ,EAAKjF,MACnCA,KAAKoM,KAAOpM,KAAKkM,iBAAiB3G,UAAUvF,SAR/C,CAAAY,IAAA,gBAAAuL,IAAA,WAaE,OAAOnM,KAAKsM,gBAbdD,IAAA,SAemB1F,GACb3G,KAAKsM,iBAAmB3F,IAC3B3G,KAAKsM,eAAiB3F,EACtB3G,KAAK+F,OAAS/F,KAAKkM,iBAAiBxF,cAAc1G,KAAK0F,KAAMiB,MAlBhE,CAAA/F,IAAA,YAAAuL,IAAA,WAsBE,OAAOnM,KAAKiG,MAAQjG,KAAK4F,SAtB3BoG,EAAA,GCTaO,EAAb,WAyBC,SAAAA,EAAY5B,GAvBZ3K,KAAA4K,UAA+B,SAI/B5K,KAAA6K,UAAoB,EAWpB7K,KAAAwM,MAAuC,IAAIC,EAAAA,cAA8B,GACzEzM,KAAA0M,QAAyC,IAAID,EAAAA,cAA8B,GAC3EzM,KAAA2M,aAA8C,IAAIF,EAAAA,cAA8B,GAChFzM,KAAA8K,cAAiH,GACjH9K,KAAA+K,QAA0G,GAC1G/K,KAAAgL,YAAoF,GACpFhL,KAAAiL,iBAA8F,GAGzFN,GACHjK,OAAOwK,OAAOlL,KAAM2K,GAErB3K,KAAKwM,MAAMrI,KAAKnE,KAAK4M,MACrB5M,KAAK0M,QAAQvI,KAAKnE,KAAK+F,QACvB/F,KAAK2M,aAAaxI,KAAKnE,KAAK6M,aA/B9B,OAAAN,EAAAtL,UAiCCkD,KAAA,SAAK8H,GACJjM,KAAKuL,WAAaU,EAASV,WACvBU,EAASV,aACZU,EAASV,WAAWG,OAAS1L,MAE9B,IAAM4M,EAAO5M,KAAK4M,KAAOlM,OAAOwK,OAAO,GAAIe,EAASW,MACpD5M,KAAKwM,MAAMrI,KAAKyI,GAChB,IAAM7G,EAAS/F,KAAK+F,OAASrF,OAAOwK,OAAO,GAAIe,EAASlG,QACxD/F,KAAK0M,QAAQvI,KAAK4B,GAClB,IAAM8G,EAAc7M,KAAK6M,YAAcnM,OAAOwK,OAAO,GAAIe,EAASY,aAClE7M,KAAK2M,aAAaxI,KAAK0I,IA3CzBN,EAAA,GCeaO,EAIZ,SAAYnC,GACPA,GACHjK,OAAOwK,OAAOlL,KAAM2K,GAEjB3K,KAAK+E,aACR/E,KAAKiF,IAAMjC,MAAMO,QAAQvD,KAAK+E,YAAc/E,KAAK+E,WAAWM,KAAK,IAAMrF,KAAK+E,aAKlEgI,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAjL,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAyK,EAAAC,GAAAD,EAAA,CAAqCD,GAKxBG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAnL,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA2K,EAAAC,GAAAD,EAAA,CAAsCH,GAKzBK,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAArL,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA6K,EAAAC,GAAAD,EAAA,CAAsCL,GAIzBO,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAvL,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA+K,EAAAC,GAAAD,EAAA,CAA0CP,GAI7BS,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAzL,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAiL,EAAAC,GAAAD,EAAA,CAAqCT,GAIxBW,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA3L,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAmL,EAAAC,GAAAD,EAAA,CAAoCX,GAIvBa,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA7L,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAqL,EAAAC,GAAAD,EAAA,CAAkCb,GAIrBe,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA/L,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAuL,EAAAC,GAAAD,EAAA,CAAgCf,GAInBiB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAjM,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAyL,EAAAC,GAAAD,EAAA,CAAmCjB,GAItBmB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAnM,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA2L,EAAAC,GAAAD,EAAA,CAAwCnB,GAI3BqB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAArM,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA6L,EAAAC,GAAAD,EAAA,CAA0CrB,GAK7BuB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAvM,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAA+L,EAAAC,GAAAD,EAAA,CAAwCvB,GAI3ByB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAzM,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAiM,EAAAC,GAAAD,EAAA,CAAmCzB,GAKtB2B,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA3M,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAmM,EAAAC,GAAAD,EAAA,CAAsC3B,GAKzB6B,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA7M,MAAA/B,KAAAiC,YAAAjC,KAAA,OAAAsC,EAAAqM,EAAAC,GAAAD,EAAA,CAAqC7B,GCrFhB+B,EAAAA,WT81BnB,SAASA,KAwHT,OAtHAA,ESx1BMC,UAAP,SAAiBC,GAGhB,OAFA/O,KAAK+O,OAASA,EAAO7J,KAAI,SAACC,GAAD,OAAe,IAAIuF,EAAMvF,MAClDnF,KAAKgP,SAAWC,EAAcjP,KAAK+O,OAAQ/O,KAAKkP,OAAQlP,KAAKmP,QAASnP,KAAKkM,kBACpElM,MT61BP6O,ES31BMO,cAAP,SAAqBrK,EAAwBsK,GAE5CrP,KAAKmP,QAAQhL,KAAK,IAAI4I,EAAgB,CAAEhI,WAAAA,EAAYuK,QAAS,iBTk2B7DT,ESh2BMU,SAAP,SAAgBxK,EAAwBsK,GAGvCrP,KAAKmP,QAAQhL,KAAK,IAAI4I,EAAgB,CAAEhI,WAAAA,EAAYuK,QAAS,iBTu2B7DT,ESr2BMW,UAAP,SAAiBzK,GAChB,IAAM0K,EAAqBzP,KAAKkM,iBAAiBpH,cAAcC,GAC/D,OAAO/E,KAAK0P,eAAeD,ITw2B3BZ,ESt2BMa,eAAP,SAAsBD,GAIrB,IAHA,IAGAzJ,EAHM+I,EAAiBY,EAAe3P,KAAK+O,QACvCa,EAA8B,KAC9BC,EAAoBhI,OAAOiI,kBAC/B5J,EAAAjD,EAAkB8L,KAAlB/I,EAAAE,KAAAjC,MAA0B,CAAA,IAAjBqH,EAAiBtF,EAAA5E,MACnB2O,EAAmCN,EAAWrJ,MAAMkF,EAAMK,SAC5DoE,KAAaH,GAAiBG,EAAQ,GAAG1P,OAASwP,KACrDA,EAAoBE,EAAQ,GAAG1P,OAC/BuP,EAAgBtE,GAGlB,IAAI0E,EAA4BP,EAQhC,OAPIG,GAAiBA,EAAcK,aAGlCD,EAAoBJ,EAAcK,WAClCL,EAAgB5P,KAAK0P,eAAeM,IAG9BJ,GT+2BPf,ES72BMxG,QAAP,SAAetD,GT82BZ,IAAIC,EAAQhF,US92BA+E,IAAAA,IAAAA,EAAyB,IACvC,IAAMmL,GAAoBlN,MAAMO,QAAQwB,GAAcA,EAAa,CAACA,IAAaG,KAAI,SAAAC,GACpF,MAAoB,iBAANA,EAAiBA,EAAIH,EAAKkH,iBAAiB9G,aAAaD,MACpEE,KAAK,KACFS,EAA2B,GAC3BiJ,EAAoC,GACpCzD,EAAsBtL,KAAK0P,eAAeQ,GAChD,GAAI5E,EAAO,CAEV,IADA,IAAI6E,EAAC,MAA6C7E,OAA7C,EAA6CA,EAAOI,OAClDyE,GACNrK,EAASsK,QAAQrO,MAAM+D,EAAUqK,EAAErK,UACnCiJ,EAAOqB,QAAQD,aAAa5D,EAAgB4D,EAAIA,EAAElE,UAAYkE,GAC9DA,EAAIA,EAAEzE,OAEP5F,EAAShE,KAAKC,MAAM+D,GAAe,MAALwF,OAAA,EAAAA,EAAOxF,WAAY,IACjDiJ,EAAOjN,KAAK,CAAE4D,KAAMwK,IAErB,IAAIT,EAAqBV,EAAO7J,KAAI,SAAAiL,GAAC,OAAIA,aAAa5D,EAAgB4D,EAAEE,aAAeF,EAAEzK,QAAML,KAAK,KAIpG,OAHAoK,EAAazP,KAAKkM,iBAAiB7D,QAAQoH,GAEd,IAAIzD,EAAUyD,EAAY3J,EAAUwF,QAASvC,EAAW/I,KAAKkM,mBT+3B1F2C,ESp3BMyB,oBAAP,SAA2BC,GAC1BvQ,KAAKwQ,kBAAoB,IAAID,GTu3B7B1P,EAAagO,EAAe,KAAM,CAAC,CACjCjO,IAAK,aACLuL,IAAK,WSl8BP,OAAOwD,EAAe3P,KAAK+O,UTq8BxB,CACDnO,IAAK,mBACLuL,IAAK,WSr4BP,OAAInM,KAAKwQ,kBACDxQ,KAAKwQ,kBAELxQ,KAAKwQ,kBAAoB,IAAIxH,MT24B9B6F,ESt9BYA,GAkFrB,SAASc,EAAeZ,GAQvB,OAPmD,SAA7C0B,EAA8C1B,GACnD,OAAOA,EAAO2B,QAAe,SAACC,EAAYC,GAGzC,OAFAD,EAAE7O,KAAK8O,GACPD,EAAE7O,KAAKC,MAAM4O,EAAGF,EAAaG,EAAEpF,UAAY,KACpCmF,IACL,IAEGF,CAAa1B,GAoBrB,SAAS8B,EAAe9B,EAAgB+B,EAAqBrB,GAE5D,IADA,IAAIsB,EACJ5H,EAAAC,EAAAnG,EAAkB6N,KAAlB3H,EAAAC,KAAAnF,MAA+B,CAAA,IACxBgI,EAAsC+E,EAAcjC,EAD5B5F,EAAA/H,MAC2CqO,GACrExD,IAOF8E,EANGA,EAMgB9E,EAASgF,UAAU5Q,OAAS0Q,EAAiBE,UAAU5Q,OAAS4L,EAAW8E,EAE3E9E,GAItB,OAAO8E,EAGR,SAASC,EAAcjC,EAAgBzD,EAAcmE,GTq5BnD,IAAIyB,ESl5BDb,EACAY,EACE7K,EAAiCqJ,EAAWrJ,MAAMkF,EAAMK,SAE9D,GAAKvF,EAAL,CAIA,GAAIkF,EAAM2E,WAGT,OAAOY,EAAe9B,EAAQA,EADDF,EAAcxG,QAAQiD,EAAM2E,YACThL,KAIjDoL,EAAejK,EAAM,GACrB6K,EAAYxB,EAAWjJ,UAAUJ,EAAM,GAAG/F,OAAQoP,EAAWpP,QAC7D,IACI0F,EADyB,IAAIiG,EAAUqE,EAAc/E,EAAMxF,cAAUiD,EAAW8F,EAAc3C,kBAC3DnG,OACjCkG,EAA0B,IAAIM,EAAJvK,EAAAA,EAAA,GAAuBsJ,GAAvB,GAAA,CAA8BmE,WAAAA,EAAYO,kBApBtEA,UAoByFK,aAAAA,EAAcY,UAAAA,EAAWlL,OAAAA,KAEtH,GADAuF,EAAMW,SAAWA,EACbA,GAAYA,EAASgF,UAAU5Q,SAA/B,OAAA6Q,EAAyC5F,EAAME,eAA/C,EAAyC0F,EAAgB7Q,QAAQ,CACpE,IAAM8Q,EAA2CN,EAAe9B,EAAQzD,EAAME,SAAUS,EAASgF,WACjGhF,EAASV,WAAa4F,EAClBA,IACHA,EAAczF,OAASO,EACvBA,EAASgF,UAAYE,EAAcF,WAIrC,OAAOhF,GAER,SAASmF,EAAwBC,EAAoBC,GAEpD,OAAOC,EAAAA,cAAaxP,WAAb,EAAiBuP,GAAYE,KACnCtM,EAAAA,KAAI,SAACuM,GACJ,IAAMzG,EAA0CyG,EAAOf,QAAmC,SAACC,EAA+BC,GACzH,OAAa,IAAND,GAAoB,IAANC,GAAoBA,EAAKD,KAC5C,GACH,IAAoB,IAAhB3F,EACH,OAAOqG,EAEP,IAAMK,EAAW1P,EAAAA,EAAA,GAAsBqP,GAAtB,GAAA,CAA6BM,OAAQ,+DACtD,IAAoB,IAAhB3G,EAAuB,CAC1B,IAAMxF,EAAuBqJ,EAAcxG,QAAQ2C,GACnD0G,EAAYzB,WAAa,CAACzK,EAAUP,KAErC,OAAO,IAAIwJ,EAAiBiD,OAoDhC,SAASzC,EAAcF,EAAgBG,EAAsCC,EAAqCjD,GACjH,IAAIb,EAEEuG,EAAeC,EAAAA,iBAAmBC,EAAAA,MAAQC,EAAAA,MAAMC,EAAAA,UAAyBC,EAAAA,OAAQ,aAAaT,KAUnGtM,EAAAA,KAAI,SAAAmM,GAAK,OAAI,IAAItE,EAAgB,CAAEhI,WAAY8D,SAASqJ,SAASC,SAAU7C,QAAS,gBACpF8C,EAAAA,YAAY,IAEb,OAAOL,EAAAA,MAAMH,EAAczC,GAASqC,KACnCa,EAAAA,WAAU,SAAChB,GACV,OAAIA,aAAiBlE,EAjExB,SAAqCgC,EAAqCkC,EAAyBhG,GAElG,GAAIgG,EAAM/F,MAAMR,eAAiBuG,EAAM/F,MAAMR,cAAczK,OAAQ,CAClE,IAAMiL,EAAuB+F,EAAM/F,MAC7BgH,EAAsBC,EAAAA,iBAAiBlB,EAAM/F,MAAMkH,SAAWF,SACpE,OAAOlB,EAAwBC,EAAO/F,EAAMR,cAAc5F,KAAI,SAAAC,GAAC,OAAIA,EAAEmN,EAAUjH,OAE/E,OAAO3G,EAAAA,GAAG2M,GA2DDoB,CAA4BtD,EAASkC,EAAOhG,GAAcmG,KAChEa,EAAAA,WAAU,SAACK,GACV,OAAIA,aAAqBjE,EACjB/J,EAAAA,GAAGgO,GA3DjB,SAA+BvD,EAAqCkC,GAEnE,GAAIA,EAAM/F,MAAMP,SAAWsG,EAAM/F,MAAMP,QAAQ1K,OAAQ,CACtD,IAAMiL,EAAuB+F,EAAM/F,MACnC,OAAO8F,EAAwBC,EAAO/F,EAAMP,QAAQ7F,KAAI,SAAAC,GAAC,OAAIA,EAAEmG,EAAOA,EAAMxF,cAE5E,OAAOpB,EAAAA,GAAG2M,GAuDEsB,CAAsBxD,EAASkC,GAAOG,KAC5Ca,EAAAA,WAAU,SAACK,GACV,OAAIA,aAAqBjE,EACjB/J,EAAAA,GAAGgO,GAvDpB,SAAwCvD,EAAqCkC,GAE5E,IASMC,EAT8B,SAAChG,EAAsBgG,GAE1D,KAAgB,MAAThG,GAAiBA,EAAML,kBAAoBK,EAAML,iBAAiB5K,QAAUiL,EAAMC,YAAY,CACpG,IAAMqH,EAA4DtH,EAAML,iBAAiB/F,KAAI,SAAAC,GAAC,OAAIA,EAAEmG,EAAMC,eAC1GvI,MAAM/B,UAAUa,KAAKC,MAAMuP,EAAYsB,GACvCtH,EAAQA,EAAMC,WAEf,OAAO+F,EAEqDuB,CAA4BxB,EAAM/F,MAAO,IAEtG,OAAIgG,EAAWjR,OACP+Q,EAAwBC,EAAOC,GAE/B5M,EAAAA,GAAG2M,GAyCKyB,CAA+B3D,EAASkC,WAO3CA,aAAiBhE,EA7C/B,SAAmC8B,EAAqCkC,GAEvE,GAAIA,EAAM/F,MAAMN,aAAeqG,EAAM/F,MAAMN,YAAY3K,OAAQ,CAC9D,IAAMiL,EAAuB+F,EAAM/F,MACnC,OAAO8F,EAAwBC,EAAO/F,EAAMN,YAAY9F,KAAI,SAAAC,GAAC,OAAIA,EAAEmG,OAEnE,OAAO5G,EAAAA,GAAG2M,GAwCD0B,CAA0B5D,EAASkC,GAEnC3M,EAAAA,GAAG2M,MAGZ2B,EAAAA,KAAI,SAAC3B,GACJ,GAAIA,aAAiBtE,EAAiB,CAAA,IAAAkG,EAIjChH,EACAwD,EAHE1K,EAAasM,EAAMtM,WAQ+B,KAFxD0K,EAF6BZ,EAAcxG,QAAQtD,GAE5BE,KAEgBsC,QAAQ,MAC7B8D,IAAd,OAAA4H,EAA8B5H,EAAaG,eAA3C,EAA8ByH,EAAuB5S,SACxD4L,EAAW4E,EAAe9B,EAAQ1D,EAAaG,SAAUiE,MAExDpE,EAAaE,WAAaU,EAC1BA,EAASP,OAASL,EAClBY,EAAWZ,GAIZY,EAAW4E,EAAe9B,EAAQA,EAAQU,GAGvCxD,GAEHZ,EAAeY,EACfkD,EAAQhL,KAAK,IAAI8I,EAAJjL,EAAAA,EAAA,GAA0BqP,GAA1B,GAAA,CAAiC/F,MAAOW,OAErDkD,EAAQhL,KAAK,IAAIwK,EAAJ3M,EAAAA,EAAA,GAAyBqP,GAAzB,GAAA,CAAgCzJ,MAAO,IAAI2C,MAAM,0BAEzD,GAAI8G,aAAiBpE,EAE3BkC,EAAQhL,KAAK,IAAIgJ,EAAJnL,EAAA,GAA0BqP,UACjC,GAAIA,aAAiBlE,EAE3BgC,EAAQhL,KAAK,IAAIkJ,EAAJrL,EAAA,GAA8BqP,UACrC,GAAIA,aAAiBhE,EAE3B8B,EAAQhL,KAAK,IAAIoJ,EAAJvL,EAAA,GAAyBqP,UAChC,GAAIA,aAAiB9D,EAE3B4B,EAAQhL,KAAK,IAAIsJ,EAAJzL,EAAA,GAAwBqP,UAC/B,GAAIA,aAAiB5D,EAE3B0B,EAAQhL,KAAK,IAAIwJ,EAAJ3L,EAAA,GAAsBqP,UAC7B,GAAIA,aAAiB1D,EAE3BwB,EAAQhL,KAAK,IAAI0J,EAAJ7L,EAAA,GAAoBqP,UAC3B,GAAIA,aAAiBxD,EAE3BsB,EAAQhL,KAAK,IAAI4J,EAAJ/L,EAAA,GAAuBqP,UAC9B,GAAIA,aAAiBtD,EAE3BoB,EAAQhL,KAAK,IAAI8J,EAAJjM,EAAA,GAA4BqP,UACnC,GAAIA,aAAiBpD,EAE3BkB,EAAQhL,KAAK,IAAIgK,EAAJnM,EAAA,GAA8BqP,UACrC,GAAIA,aAAiBlD,EAE3BgB,EAAQhL,KAAK,IAAIkK,EAAJrM,EAAA,GAA4BqP,UACnC,GAAIA,aAAiBhD,EAE3Bc,EAAQhL,KAAK,IAAIoK,EAAJvM,EAAA,GAAuBqP,UAC9B,GAAIA,aAAiB9C,EAAe,CAG1C,IAFA,IAAMzI,EAAqB,GACvB5D,EAAoCmP,EAAM/F,MAC7B,MAAVpJ,GAAgB,CAAA,IAAAgR,EAOfC,EAFP,IAHA,OAAAD,EAAIhR,EAAOmO,mBAAX,EAAI6C,EAAqB7S,SACxByF,EAAShE,KAAKI,EAAOmO,cAElBnO,EAAOqJ,WACVrJ,EAASA,EAAOqJ,gBAEhB,OAAA4H,EAAIjR,EAAO+O,gBAAX,EAAIkC,EAAkB9S,UACrByF,EAASA,EAASzF,OAAS,GAAKyF,EAASA,EAASzF,OAAS,GAAK6B,EAAO+O,WAExE/O,OAAS6G,EAGX,IAAMsH,EAAuBvK,EAAST,KAAK,KAAK2C,QAAQ,QAAS,MA9PrE,SAAsB+G,EAAgBqE,GACrC,IAAIC,EAVL,SAA2BD,GAG1B,IAFA,IAAIC,EAA6B,CAACD,GAC9B7H,EAAwC6H,EAAgB7H,WACrDA,GACN8H,EAAUvR,KAAKyJ,GACfA,EAAaA,EAAWA,WAEzB,OAAO8H,EAG0BC,CAAkBF,GACxBzD,EAAeZ,GAC/B5M,SAAQ,SAACmJ,GACfA,EAAMW,WAAmD,IAAvCoH,EAAU9L,QAAQ+D,EAAMW,YAC7CX,EAAMW,cAAWlD,MA2PhBwK,CAAaxE,EAAQsC,EAAM/F,OAC3BY,EAAiB3D,WAAW8H,OAActH,EAA6B,aAAlBsI,EAAM/B,SAE3DJ,EAAO/K,KAAKkN,EAAM/F,YACR+F,aAAiB5C,EAEvB4C,EAAMpB,YAETd,EAAQhL,KAAK,IAAI4I,EAAgB,CAAEhI,WAAYsM,EAAMpB,WAAYX,QAAS,gBAEjE+B,aAAiB1C,GAC3B6E,QAAQC,IAAI,kBAAmBpC,EAAMzJ,UAGvC8L,EAAAA,YAAW,SAAC9L,GAAD,OAAkBlD,EAAAA,GAAG,IAAIiK,EAAJ3M,EAAAA,EAAA,GAAyBqP,OAAzB,GAAA,CAAgCzJ,MAAAA,SAChEwK,EAAAA,YAAY,IAnXNvD,EAAAA,OAAiB,GACjBA,EAAAA,OAAuC,IAAIpC,EAAAA,cAA6B,GACxEoC,EAAAA,QAAsC,IAAIpC,EAAAA,cAA2B,GAmX5E,ICxXoBkH,EAAAA,SAAAA,GVm0CnB,SAASA,IACP,OAAOC,EAAW7R,MAAM/B,KAAMiC,YAAcjC,KAH9CsC,EAAeqR,EAAqBC,GAMpC,IAAIrP,EAASoP,EAAoB1S,UAwEjC,OAtEAsD,EU9zCDsP,YAAA,SAAY9O,GAEX,IAAMe,EAA2B,GAqBjC,OApBAf,EAAW5C,SAAQ,SAAA2R,GAClB,GAAoB,iBAATA,EAIV,IAHA,IAGA9N,EADM+N,EAAa,GACnB7N,EAAAjD,EAFgB6Q,EAAK3N,SADE,0BAGvBH,EAAAE,KAAAjC,MAA2B,CAAA,IAAlBmC,EAAkBJ,EAAA5E,MACpBiF,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACjB,GAAIC,EACH0N,EAAWjS,KAAKuE,QACV,GAAIC,EAAI,CACd,IAAMwF,EAAgC,GACtCA,EAAMxF,GAAM,KACZyN,EAAWjS,KAAKgK,SAIlBhG,EAAShE,KAAK,IAAI2I,EAAa,GAAI,QAG9B3E,GVo0CPvB,EUl0CDyP,OAAA,WVm0CG,IAAIhP,EAAQhF,KUl0CNyE,EAASwP,EAAAA,WAAWjU,MAApByE,KAC0BuN,EAAAA,UAAiBvN,EAAM,SAAS+M,KAAKY,EAAAA,YAAY,IAC5EZ,KACN0C,EAAAA,UAAUlU,KAAKmU,eACd/J,WAAU,SAAAiH,GAGX,IAAM+C,EAAsC,CAC3CC,mBAAoBrP,EAAKqP,mBACzBC,WAAYtP,EAAKsP,WACjBC,MAAOvP,EAAKuP,OAIb,OAFA1F,EAAcO,cAAcpK,EAAKD,WAAYqP,GAC7C/C,EAAMmD,kBACC,MVw0CRjQ,EUr0CDkQ,UAAA,WVs0CG,IUr0CMhQ,EAASwP,EAAAA,WAAWjU,MAApByE,KACFe,EAAuBqJ,EAAcxG,QAAQrI,KAAK0U,aAExDjQ,EAAKkQ,aAAa,OAAQnP,EAAUP,MV00CpCpE,EAAa8S,EAAqB,CAAC,CACjC/S,IAAK,aACLuL,IAAK,WUj4CP,OAAOnM,KAAK0U,aVo4CVrI,IAAK,SUl4COtH,GACd/E,KAAK0U,YAAc1R,MAAMO,QAAQwB,GAAcA,EAAa,CAACA,GAC7D/E,KAAK8F,SAAW9F,KAAK6T,YAAY7T,KAAK0U,iBVs4C/Bf,EU/4CYA,CAA4BiB,EAAAA,WA4DzCjB,EAAAA,KAAqB,CAC3BkB,SAAU,8BACVC,OAAQ,CAAC,eVk2CT,IWp6CmBC,EAAAA,SAAAA,GAArB,SAAAA,IXw6CI,IAAI/P,EAIJ,OAFAA,EAAQ4O,EAAW7R,MAAM/B,KAAMiC,YAAcjC,MWx6ChDwB,KAAiB,GX06CPwD,EAPT1C,EAAeyS,EAA2BnB,GAU1C,IAAIrP,EAASwQ,EAA0B9T,UAwCvC,OAtCAsD,EW96CDkQ,UAAA,WXg7CG,IW96CMhQ,EAASwP,EAAAA,WAAWjU,MAApByE,KACRA,EAAKuQ,UAAUC,OAAOlT,MAAM0C,EAAKuQ,UAAWhV,KAAKwB,MACjD,IAAIA,EAAiB,GAErB,GADexB,KAAKkV,WACR,CACX,IAAM5T,EAAStB,KAAKmV,iBACpB,GAAsB,iBAAX7T,EACV,IAAK,IAAIV,KAAOU,EACXA,EAAOV,IACVY,EAAKM,KAAKlB,OAGgB,iBAAXU,IACjBE,EAAOF,EAAOmF,MAAM,KAAK9E,QAAO,SAAAwD,GAAC,OAAIA,EAAE9E,WAGzCoE,EAAKuQ,UAAUI,IAAIrT,MAAM0C,EAAKuQ,UAAWxT,GACzCxB,KAAKwB,KAAOA,GXw7CZ+C,EWr7CD2Q,SAAA,WXs7CG,IAAIG,EWp7CAH,EAA4C,OAAxB,OAAAG,EADFxG,EAAcxG,QAAQrI,KAAKsV,KAAKvQ,YACzBuG,YAAL,EAAA+J,EAAYpJ,UAEtC,OAAOiJ,GX07CAH,EWv9CYA,CAAkCH,EAAAA,WA+B/CG,EAAAA,KAAqB,CAC3BF,SAAU,0CACVU,MAAO,CAAED,KAAM3B,GACfmB,OAAQ,CAAC,qBAHH,IC5BaU,EAAAA,SAAAA,GAArB,SAAAA,IZg+CI,IAAIxQ,EAIJ,OAFAA,EAAQyQ,EAAW1T,MAAM/B,KAAMiC,YAAcjC,MYj+CxC0V,QAAoD,IAAIjJ,EAAAA,cAAyC,GZm+C/FzH,EAPT1C,EAAekT,EAAuBC,GAUtC,IAAIlR,EAASiR,EAAsBvU,UAgHnC,OA9GAsD,EY99CDyP,OAAA,WZ+9CG,IYx9Ca2B,EZw9CT/O,EAAS5G,MY99CfA,KAAKkP,SAASsC,KACba,EAAAA,WAAU,SAAApG,GAAQ,OAAIrF,EAAKgP,SAAS3J,MACpCiI,EAAAA,UAAUlU,KAAKmU,eACd/J,WAAU,eAGRpK,KAAKsV,OACRtV,KAAK0V,QAAQvR,KAAb,OAAAwR,EAAkB3V,KAAKsV,KAAKhK,YAA5B,EAAkBqK,EAAiBpK,aZq+CpChH,EYl+CDkQ,UAAA,WACgB,IAAAoB,EAAX7V,KAAKsV,MACRtV,KAAK0V,QAAQvR,KAAb,OAAA0R,EAAkB7V,KAAKsV,KAAKhK,YAA5B,EAAkBuK,EAAiBtK,aZw+CpChH,EYr+CD2K,OAAA,WZs+CG,IAAI1F,EAASxJ,KYp+Cf,OADsDA,KAAKsV,KAAOtV,KAAK0V,QAAU7G,EAAcK,QACjFsC,KACb7P,EAAAA,QAAO,SAACsK,GAEP,OADAzC,EAAKsM,OAAS7J,EACVzC,EAAKuM,WAAa9J,GAAYzC,EAAKuM,UAAU3K,YAAca,EAASb,WACvE5B,EAAKuM,UAAU5R,KAAK8H,IACb,IAEPzC,EAAKuM,UAAY9J,GACV,QZ6+CV1H,EYx+CDqR,SAAA,SAAS3J,GZy+CN,IAAI+J,EAAShW,KAETiW,EY1+CmBhC,EAAAA,WAAWjU,MAA5BV,EAAAA,EAAAA,OAAQmF,EAAAA,EAAAA,KACVyR,EAAO,MAAiCjK,OAAjC,EAAiCA,EAAUb,UACxD,OAAIpL,KAAKmW,WAAaD,GACrBlW,KAAKmW,SAAWD,EACTlW,KAAKoW,SAASpW,KAAKwS,QAASxS,KAAKsS,UAAUd,KACjDwB,EAAAA,KAAI,WACCgD,EAAKxD,UACRwD,EAAKxD,QAAQ6D,WAAYC,YAAYN,EAAKxD,SAC1ClT,EAAO2V,OAAOe,EAAKxD,QAASwD,GAC5BA,EAAKxD,aAAUzJ,EACfiN,EAAK1D,cAAWvJ,MAGlBsJ,EAAAA,WAAU,WACT,GAAIpG,GAAYiK,GAAWA,EAAQK,KAAKC,SAAU,CACjD,IAAIhE,EAAoB3J,SAAS4N,cAAc,OAC/CjE,EAAQkE,UAAYR,EAAQK,KAAKC,SACD,IAA5BhE,EAAQhH,SAASnL,SACpBmS,EAAUA,EAAQmE,mBAEnBlS,EAAKmS,YAAYpE,GACjB,IAAMF,EAAgChT,EAAOuX,aAAarE,EAAS0D,EAASA,EAAQK,KAAK1B,SAAWmB,OAAMjN,EAAW,CAAEuC,MAAOW,IAK9H,OAJA3M,EAAOwX,QAAQtE,EAASF,GACxB0D,EAAK1D,SAAWA,EAChB0D,EAAKxD,QAAUA,EACfvG,EAASuG,QAAUA,EACZwD,EAAKe,UAAUvE,EAASF,GAE/B,OAAO5N,EAAAA,IAAG,QAKNA,EAAAA,IAAG,IZo/CXH,EYj/COwS,UAAA,SAAUvE,EAAoBF,GACrC,OAAIE,GAAWF,GAAYA,aAAoBjO,EACvC2S,EAAa,CAACxE,GAAUF,EAAS9N,SAEjCE,EAAAA,IAAG,IZq/CXH,EYl/CO6R,SAAA,SAAS5D,EAAoBF,GACpC,OAAIE,GAAWF,GAAYA,aAAoBjO,EACvC2S,EAAa,CAACxE,GAAUF,EAAS3N,QAEjCD,EAAAA,IAAG,IZs/CX7D,EAAa2U,EAAuB,CAAC,CACnC5U,IAAK,QACLuL,IAAK,WY7kDP,OAAOnM,KAAK8V,WZklDLN,EYvlDYA,CAA8ByB,EAAAA,WZ+lDnD,SY7/CgBD,EAAgBE,EAAapN,GAC5C,OAAOC,EAAAA,WAAWtH,QAAO,SAAUuH,GAClC,IAAIC,EACJ,IACC,IAAIC,EAAqDJ,EAAQ/H,WAAR,EAAYmV,GACjE/M,EAAAA,aAAaD,GAChBD,EAAeC,EAAOE,WAAU,SAAAF,GAC/BF,EAAS7F,KAAK+F,GACdF,EAASK,cAEAV,EAAaO,GACtBA,EAAsBI,MAAK,SAAAJ,GAC3BF,EAAS7F,KAAK+F,GACdF,EAASK,cAEkB,mBAAXH,GACjBF,EAAS7F,KAAM+F,KACfF,EAASK,aAETL,EAAS7F,KAAK+F,GACdF,EAASK,YAET,MAAOzC,GACRoC,EAASpC,MAAMA,GAEhB,OAAO,WACFqC,GACHA,EAAaO,kBAhCTgL,EAAAA,KAAqB,CAC3BX,SAAU,gCACVU,MAAO,CAAED,KAAME,IC7FjB,ICRY2B,EDQNC,EAA8B,CACnC5B,EACA7B,EACAoB,GAEKsC,EAAuB,GAsBRC,EAAAA,SAAAA,GACpB,SAAAA,Ib8nDG,IAAItS,EAeJ,Oa5oDFA,EAAAuS,EAAA5T,KAAA3D,OAAAA,KAEA6O,EAAcG,SAASwC,KACtBwB,EAAAA,KAAI,SAAC3B,GAGkC,IAAAmG,GAFlCnG,aAAiB9C,GACjB8C,aAAiB5C,GACjB4C,aAAiB1C,MACpB,OAAA6I,EAAIxS,EAAKyS,gBAAT,EAAID,EAAgBnX,SACN2E,EAAKyS,UAAU,GACvBC,kBAIRxD,EAAAA,UAAUlP,EAAKmP,eACd/J,YACFyE,EAAcU,SAAd,IAAgD,KAAtB2C,SAASC,SAAkB,IAAMD,SAASC,UAAWD,SAASvM,OAASuM,SAAStM,Mb6nDjGZ,EAaT,OA/BA1C,EAAegV,EAAcC,GAqB7BD,EapnDMK,QAAP,SAAe5I,GAEd,OADAF,EAAcC,UAAUC,GACjB/O,MbunDPsX,EarnDMM,YAAP,SAAmBrH,GAElB,OADA1B,EAAcyB,oBAAoBC,GAC3BvQ,MbwnDAsX,Ea3pDYA,CAAqBO,EAAAA,QAmBlCP,EAAAA,KAAoB,CAC1BQ,aAAY,GAAAC,OACRX,EACAC,GAEJhY,QAAO,GAAA0Y,OACHX,EACAC,KC7DMF,EAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAChCA,KAAA,OACAA,EAAAA,KAAA,OCuBA9X,EAAA0O,cAAAA,EAAA1O,EAAAkO,gBAAAA,EAAAlO,EAAA4O,mBAAAA,EAAA5O,EAAAgO,qBAAAA,EAAAhO,EAAAoO,eAAAA,EAAApO,EAAA8N,iBAAAA,EAAA9N,EAAAwF,iBAAAA,EAAAxF,EAAAgK,qBAAAA,EAAAhK,EAAA2J,qBAAAA,EAAA3J,EAAAoP,iBAAAA,EAAApP,EAAAkP,cAAAA,EAAAlP,EAAAsP,gBAAAA,EAAAtP,EAAA0N,gBAAAA,EAAA1N,EAAAwO,WAAAA,EAAAxO,EAAAsO,aAAAA,EAAAtO,EAAAqL,MAAAA,EAAArL,EAAAgP,mBAAAA,EAAAhP,EAAA8O,qBAAAA,EAAA9O,EAAA2M,UAAAA,EAAA3M,EAAAoL,aAAAA,EAAApL,EAAAkN,cAAAA,EAAAlN,EAAAyN,YAAAA,EAAAzN,EAAA0V,0BAAAA,EAAA1V,EAAAsU,oBAAAA,EAAAtU,EAAAiY,aAAAA,EAAAjY,EAAAmW,sBAAAA,EAAAnW,EAAA4N,iBAAAA,EAAA5N,EAAAgF,KAAAA,EAAAhF,EAAA2X,aAAAA,EAAA3X,EAAA2Y,YDzBD,SCC4BlO,GAC3B,OAAOC,EAAAA,WAAWtH,QAAO,SAAUuH,GAElC,IACKvB,EAAAA,kBACHqB,GAAS,SAACI,GACTF,EAAS7F,KAAK+F,GACdF,EAASK,eAGVL,EAAS7F,MAAK,GACd6F,EAASK,YAET,MAAOzC,GACRoC,EAASpC,MAAMA,QAUjBlH,OAAAC,eAAAtB,EAAA,aAAA,CAAA+B,OAAA","file":"dist/umd/rxcomp-router.min.js","sourcesContent":[null,"\nimport { Component, IElement } from 'rxcomp';\nimport { Observable, of } from 'rxjs';\nimport { RouteSnapshot } from '../route/route-snapshot';\n\nexport default class View extends Component {\n\troute!: RouteSnapshot;\n\tonEnter(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n\tonExit(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n}\n","import { decodeBase64, decodeJson, encodeBase64, encodeJson, isPlatformBrowser, Serializer } from 'rxcomp';\nimport { IRoutePath } from '../route/route-path';\nimport { RouterKeyValue, RouterLink } from '../router.types';\nimport { RouteSegment } from '../rxcomp-router';\n\nexport interface ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string;\n\tserializeUrl(url: string): string;\n\tserialize(routePath: IRoutePath): string;\n\tresolve(url: string, target: IRoutePath): IRoutePath;\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any };\n\tencodeParams(value: any): string;\n\tdecodeParams(encoded: string): any;\n\tencodeSegment(s: string): string;\n\tdecodeSegment(s: string): string;\n\tencodeString(s: string): string;\n\tdecodeString(s: string): string;\n\tgetPath(url: string): string;\n\tgetUrl(url: string, params?: URLSearchParams): string;\n\tsetHistory(url: string, params?: URLSearchParams, popped?: boolean): void;\n}\nexport class LocationStrategy implements ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\treturn url;\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any } {\n\t\tconst segments: string[] = path.split('/').filter(x => x !== '');\n\t\tconst params: RouterKeyValue = {};\n\t\trouteSegments.forEach((segment: RouteSegment, index: number) => {\n\t\t\t// console.log('segment.params', segment.params);\n\t\t\tconst keys: string[] = Object.keys(segment.params);\n\t\t\tif (keys.length) {\n\t\t\t\tparams[keys[0]] = this.decodeParams(segments[index]);\n\t\t\t}\n\t\t});\n\t\treturn params;\n\t}\n\tencodeParams(value: any): string {\n\t\tlet encoded!: string;\n\t\tif (typeof value === 'object') {\n\t\t\tencoded = Serializer.encode<string>(value, [encodeJson, encodeBase64, encodeParam]);\n\t\t} else if (typeof value === 'number') {\n\t\t\tencoded = value.toString();\n\t\t}\n\t\treturn encoded;\n\t}\n\tdecodeParams(value: string): any {\n\t\tlet decoded: any = value;\n\t\tif (value.indexOf(';') === 0) {\n\t\t\ttry {\n\t\t\t\tdecoded = Serializer.decode<string>(value, [decodeParam, decodeBase64, decodeJson])\n\t\t\t} catch (error) {\n\t\t\t\tdecoded = value;\n\t\t\t}\n\t\t} else if (Number(value).toString() === value) {\n\t\t\tdecoded = Number(value);\n\t\t}\n\t\treturn decoded;\n\t}\n\tencodeSegment(value: string): string {\n\t\treturn this.encodeString(value).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n\t}\n\tdecodeSegment(value: string): string {\n\t\treturn this.decodeString(value.replace(/%28/g, '(').replace(/%29/g, ')').replace(/\\&/gi, '%26'));\n\t}\n\tencodeString(value: string): string {\n\t\treturn encodeURIComponent(value).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n\t}\n\tdecodeString(value: string): string {\n\t\treturn decodeURIComponent(value.replace(/\\@/g, '%40').replace(/\\:/gi, '%3A').replace(/\\$/g, '%24').replace(/\\,/gi, '%2C'));\n\t}\n\tgetPath(url: string): string {\n\t\treturn url;\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${url}${params ? '?' + params.toString() : ''}`;\n\t}\n\tsetHistory(url: string, params?: URLSearchParams, popped?: boolean): void {\n\t\tif (isPlatformBrowser && typeof history !== 'undefined' && history.pushState) {\n\t\t\tconst title = document.title;\n\t\t\turl = this.getUrl(url, params);\n\t\t\t// !!!\n\t\t\t// const state = params ? params.toString() : '';\n\t\t\t// console.log(state);\n\t\t\tif (popped) {\n\t\t\t\thistory.replaceState(undefined, title, url);\n\t\t\t} else {\n\t\t\t\thistory.pushState(undefined, title, url);\n\t\t\t}\n\t\t}\n\t}\n}\nexport function encodeParam(value: string): string {\n\treturn `;${value}`;\n}\nexport function decodeParam(value: string): string {\n\treturn value.substring(1, value.length);\n}\nexport class LocationStrategyPath extends LocationStrategy implements ILocationStrategy {\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n}\nexport class LocationStrategyHash extends LocationStrategy implements ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\tconst path: IRoutePath = this.resolve(url, {});\n\t\treturn this.serialize(path);\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.search}${routePath.hash}${routePath.path}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '#';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#.*)$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tprefix = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\tpath = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path.substring(1, path.length);\n\t\thash = hash;\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tgetPath(url: string): string {\n\t\tif (url.indexOf(`/#`) === -1) {\n\t\t\treturn `/#${url}`;\n\t\t} else {\n\t\t\treturn url;\n\t\t}\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${params ? '?' + params.toString() : ''}${this.getPath(url)}`;\n\t}\n}\n","import { isObservable, Observable, Observer, Subscription } from 'rxjs';\nimport { RouteComponent, RouterActivatorResult } from '../router.types';\nimport { RouteSegment } from './route-segment';\nimport { RouteSnapshot } from './route-snapshot';\n\nexport interface ICanDeactivate<T> {\n\tcanDeactivate(component: T, currentRoute: RouteSnapshot): RouterActivatorResult\n}\n\nexport interface ICanLoad {\n\tcanLoad(route: RouteSnapshot, segments: RouteSegment[]): RouterActivatorResult\n}\n\nexport interface ICanActivate {\n\tcanActivate(route: RouteSnapshot): RouterActivatorResult\n}\n\nexport interface ICanActivateChild {\n\tcanActivateChild(childRoute: RouteSnapshot): RouterActivatorResult\n}\n\nexport function mapCanDeactivate$_<T>(activator: ICanDeactivate<T>): (component: T, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canDeactivate$(component: T, currentRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canDeactivate(component, currentRoute));\n\t};\n}\nexport function mapCanLoad$_(activator: ICanLoad): (route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]> {\n\treturn function canLoad$$(route: RouteSnapshot, segments: RouteSegment[]): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canLoad(route, segments));\n\t};\n}\nexport function mapCanActivate$_(activator: ICanActivate): (route: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canActivate$(route: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canActivate(route));\n\t};\n}\nexport function mapCanActivateChild$_(activator: ICanActivateChild): (childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canActivateChild$(childRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canActivateChild(childRoute));\n\t};\n}\nexport function isPromise<T>(object: any): object is Promise<T> {\n\treturn object instanceof Promise || (typeof object === 'object' && 'then' in object && typeof object['then'] === 'function');\n}\n\nfunction makeObserver$_(callback: () => RouterActivatorResult) {\n\treturn Observable.create(function (observer: Observer<boolean | RouteComponent[]>) {\n\t\tlet subscription: Subscription;\n\t\ttry {\n\t\t\tlet result: RouterActivatorResult = callback();\n\t\t\tif (isObservable(result)) {\n\t\t\t\tsubscription = result.subscribe(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (isPromise<boolean | RouteComponent[]>(result)) {\n\t\t\t\t(result as Promise<boolean | RouteComponent[]>).then(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (typeof result === 'boolean' || Array.isArray(result)) {\n\t\t\t\tobserver.next(result);\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tobserver.error(new Error('invalid value'));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n\t\treturn () => {\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t}\n\t\t}\n\t});\n}\n\n","import { RouterKeyValue } from '../router.types';\n\nexport class RouteSegment {\n\tpath: string;\n\tparams: any;\n\tconstructor(path: string, params: RouterKeyValue = {}) {\n\t\tthis.path = path;\n\t\tthis.params = params;\n\t}\n}\n","import { Component, Factory } from 'rxcomp';\nimport { Observable } from 'rxjs';\nimport { Data, RouteComponent, RouterKeyValue } from '../router.types';\nimport { ICanActivate, ICanActivateChild, ICanDeactivate, ICanLoad, mapCanActivate$_, mapCanActivateChild$_, mapCanDeactivate$_, mapCanLoad$_ } from './route-activators';\nimport { RouteSegment } from './route-segment';\nimport { RouteSnapshot } from './route-snapshot';\n\nexport type IRoutes = IRoute[];\nexport type Routes = Route[];\n\nexport interface INavigationExtras {\n\trelativeTo?: RouteSnapshot | null;\n\tqueryParams?: RouterKeyValue; // Params | null;\n\tfragment?: string;\n\tpreserveQueryParams?: boolean;\n\tqueryParamsHandling?: any; // QueryParamsHandling | null;\n\tpreserveFragment?: boolean;\n\tskipLocationChange?: boolean;\n\treplaceUrl?: boolean;\n\tstate?: { [key: string]: any };\n}\n\nexport interface IBaseRoute {\n\tpath?: string;\n\tpathMatch?: 'prefix' | 'full';\n\tcomponent?: typeof Component;\n\t// matcher?: UrlMatcher;\n\tmatcher?: RegExp;\n\tredirectTo?: string;\n\toutlet?: string;\n\tchildren?: IRoutes | Routes;\n\t// children?: IRoute[];\n\tinitialUrl?: string;\n\turlAfterRedirects?: string;\n\textractedUrl?: string;\n\tremainUrl?: string;\n\t// resolve?: ResolveData;\n\t// loadChildren?: LoadChildren;\n\t// runGuardsAndResolvers?: RunGuardsAndResolvers;\n\tdata?: Data;\n\tparams?: RouterKeyValue;\n\tqueryParams?: RouterKeyValue;\n}\n\nexport interface IRoute extends IBaseRoute {\n\tcanActivate?: ICanActivate[];\n\tcanActivateChild?: ICanActivateChild[];\n\tcanDeactivate?: ICanDeactivate<Component>[];\n\tcanLoad?: ICanLoad[];\n}\n\nexport class Route implements IBaseRoute {\n\tpath!: string;\n\tpathMatch: 'prefix' | 'full' = 'prefix';\n\tcomponent!: typeof Component; // import !!!\n\tmatcher: RegExp;\n\tredirectTo?: string;\n\tsegments: RouteSegment[];\n\trelative: boolean = true;\n\tchildren?: Routes;\n\tparent?: Route;\n\tsnapshot?: RouteSnapshot;\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tconstructor(options?: IRoute) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.canDeactivate = options.canDeactivate ? options.canDeactivate.map(x => mapCanDeactivate$_<Component>(x)) : [];\n\t\t\tthis.canLoad = options.canLoad ? options.canLoad.map(x => mapCanLoad$_(x)) : [];\n\t\t\tthis.canActivate = options.canActivate ? options.canActivate.map(x => mapCanActivate$_(x)) : [];\n\t\t\tthis.canActivateChild = options.canActivateChild ? options.canActivateChild.map(x => mapCanActivateChild$_(x)) : [];\n\t\t}\n\t\tif (this.children) {\n\t\t\tthis.children = this.children.map((iRoute: IBaseRoute) => {\n\t\t\t\tconst route = new Route(iRoute);\n\t\t\t\troute.parent = this;\n\t\t\t\treturn route;\n\t\t\t});\n\t\t}\n\t\tconst segments: RouteSegment[] = [];\n\t\tif (this.path === '**') {\n\t\t\tsegments.push(new RouteSegment(this.path));\n\t\t\tthis.matcher = new RegExp('^.*$');\n\t\t} else {\n\t\t\tconst matchers: string[] = [`^(\\.\\.\\/|\\.\\/|\\/\\/|\\/)?`];\n\t\t\tconst regExp: RegExp = /(^\\.\\.\\/|\\.\\/|\\/\\/|\\/)|([^:|\\/]+)\\/?|\\:([^\\/]+)\\/?/g;\n\t\t\tconst matches = this.path.matchAll(regExp);\n\t\t\tfor (let match of matches) {\n\t\t\t\tconst g1 = match[1];\n\t\t\t\tconst g2 = match[2];\n\t\t\t\tconst g3 = match[3];\n\t\t\t\tif (g1) {\n\t\t\t\t\tthis.relative = !(g1 === '//' || g1 === '/');\n\t\t\t\t} else if (g2) {\n\t\t\t\t\tmatchers.push(g2);\n\t\t\t\t\tsegments.push(new RouteSegment(g2));\n\t\t\t\t} else if (g3) {\n\t\t\t\t\tmatchers.push('(\\/[^\\/]+)');\n\t\t\t\t\tconst param: { [key: string]: any } = {};\n\t\t\t\t\tparam[g3] = null;\n\t\t\t\t\tsegments.push(new RouteSegment('', param));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.pathMatch === 'full') {\n\t\t\t\tmatchers.push('$');\n\t\t\t}\n\t\t\tconst regexp: string = matchers.join('');\n\t\t\tthis.matcher = new RegExp(regexp);\n\t\t}\n\t\tthis.segments = segments;\n\t}\n}\n","import { ILocationStrategy, LocationStrategy } from '../location/location.strategy';\nimport { Route } from './route';\nimport { RouteSegment } from './route-segment';\n\nexport interface IRoutePath {\n\turl?: string;\n\tprefix?: string;\n\tpath?: string;\n\tquery?: string;\n\tsearch?: any;\n\thash?: any;\n\tparams?: { [key: string]: any };\n\tsegments?: string[];\n}\n\nexport class RoutePath implements IRoutePath {\n\tprivate url_!: string;\n\tget url(): string {\n\t\treturn this.url_;\n\t}\n\tset url(url: string) {\n\t\tif (this.url_ !== url) {\n\t\t\tthis.locationStrategy.resolve(url, this);\n\t\t\tthis.url_ = this.locationStrategy.serialize(this);\n\t\t}\n\t}\n\tprivate routeSegments_!: RouteSegment[];\n\tget routeSegments(): RouteSegment[] {\n\t\treturn this.routeSegments_;\n\t}\n\tset routeSegments(routeSegments: RouteSegment[]) {\n\t\tif (this.routeSegments_ !== routeSegments) {\n\t\t\tthis.routeSegments_ = routeSegments;\n\t\t\tthis.params = this.locationStrategy.resolveParams(this.path, routeSegments);\n\t\t}\n\t}\n\tget remainUrl(): string {\n\t\treturn this.query + this.hash;\n\t}\n\tprefix: string = '';\n\tpath: string = '';\n\tquery: string = '';\n\tsearch: string = '';\n\thash: string = '';\n\tparams!: { [key: string]: any };\n\tsegments!: string[];\n\troute?: Route;\n\tlocationStrategy: ILocationStrategy;\n\tconstructor(url: string = '', routeSegments: RouteSegment[] = [], snapshot?: Route, locationStrategy?: ILocationStrategy) {\n\t\tthis.locationStrategy = locationStrategy || new LocationStrategy();\n\t\tthis.url = url;\n\t\tthis.routeSegments = routeSegments;\n\t\tthis.route = snapshot;\n\t}\n}\n","import { Component, Factory, IElement } from 'rxcomp';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { RouteComponent, RouterKeyValue } from '../router.types';\nimport { IBaseRoute, Route } from './route';\nimport { RouteSegment } from './route-segment';\n\nexport class RouteSnapshot implements IBaseRoute {\n\tpath!: string;\n\tpathMatch: 'prefix' | 'full' = 'prefix';\n\tcomponent!: typeof Component; // import !!!\n\tredirectTo?: string;\n\tsegments!: RouteSegment[];\n\trelative: boolean = true;\n\tchildren?: Route[];\n\tchildRoute?: RouteSnapshot;\n\tparent?: RouteSnapshot | undefined;\n\tinitialUrl?: string;\n\turlAfterRedirects?: string;\n\textractedUrl?: string;\n\tremainUrl!: string;\n\tdata!: RouterKeyValue;\n\tparams!: RouterKeyValue;\n\tqueryParams!: RouterKeyValue;\n\tdata$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tparams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tqueryParams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\telement?: IElement;\n\tconstructor(options?: IBaseRoute) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tthis.data$.next(this.data);\n\t\tthis.params$.next(this.params);\n\t\tthis.queryParams$.next(this.queryParams);\n\t}\n\tnext(snapshot: RouteSnapshot): void {\n\t\tthis.childRoute = snapshot.childRoute;\n\t\tif (snapshot.childRoute) {\n\t\t\tsnapshot.childRoute.parent = this;\n\t\t}\n\t\tconst data = this.data = Object.assign({}, snapshot.data);\n\t\tthis.data$.next(data);\n\t\tconst params = this.params = Object.assign({}, snapshot.params);\n\t\tthis.params$.next(params);\n\t\tconst queryParams = this.queryParams = Object.assign({}, snapshot.queryParams);\n\t\tthis.queryParams$.next(queryParams);\n\t}\n}\n","import { Route } from '../route/route';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouteComponent, RouterLink } from '../router.types';\n\nexport interface IRouterEvent {\n\tid?: number;\n\trouterLink?: RouterLink;\n\turl?: string; // The target URL passed into the `Router#navigateByUrl()` call before navigation. This is the value before the router has parsed or applied redirects to it.\n\tinitialUrl?: any; // string | UrlTree; // The initial target URL after being parsed with `UrlSerializer.extract()`.\n\turlAfterRedirects?: string;\n\textractedUrl?: any; // UrlTree; // The extracted URL after redirects have been applied.\n\tremainUrl?: string;\n\tfinalUrl?: any; // UrlTree;\n\ttrigger?: 'imperative' | 'popstate' | 'hashchange';\n\textras?: any; // NavigationExtras;\n\tpreviousNavigation?: IRouterEvent | null;\n\troute?: Route | RouteSnapshot;\n\treason?: string;\n\tredirectTo?: RouteComponent[];\n\terror?: any;\n}\nexport class RouterEvent implements IRouterEvent {\n\turl!: string;\n\trouterLink!: RouterLink;\n\ttrigger!: 'imperative' | 'popstate' | 'hashchange';\n\tconstructor(options?: IRouterEvent) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tif (this.routerLink) {\n\t\t\tthis.url = Array.isArray(this.routerLink) ? this.routerLink.join('') : this.routerLink;\n\t\t}\n\t}\n}\n// An event triggered when navigation starts.\nexport class NavigationStart extends RouterEvent {\n\tnavigationTrigger!: 'imperative' | 'popstate' | 'hashchange';\n\trestoredState?: { [key: string]: any };\n}\n// An event triggered when the Router parses the URL and the routes are recognized.\nexport class RoutesRecognized extends RouterEvent {\n\troute!: RouteSnapshot; // ???\n\t// state!: RouterStateSnapshot;\n}\n// An event triggered at the start of the Guard phase of routing.\nexport class GuardsCheckStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the start of the child-activation part of the Resolve phase of routing.\nexport class ChildActivationStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the start of the activation part of the Resolve phase of routing.\nexport class ActivationStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the Guard phase of routing.\nexport class GuardsCheckEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the the start of the Resolve phase of routing.\nexport class ResolveStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the Resolve phase of routing.\nexport class ResolveEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the activation part of the Resolve phase of routing.\nexport class ActivationEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the child-activation part of the Resolve phase of routing.\nexport class ChildActivationEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered before the Router lazy loads a route configuration.\nexport class RouteConfigLoadStart extends RouterEvent {\n\troute!: RouteSnapshot;\n\turlAfterRedirects!: string;\n}\n// An event triggered after a route has been lazy loaded.\nexport class RouteConfigLoadEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered when navigation ends successfully.\nexport class NavigationEnd extends RouterEvent {\n\turlAfterRedirects!: string;\n\troute!: RouteSnapshot;\n}\n// An event triggered when navigation is canceled. This is due to a Route Guard returning false during navigation.\nexport class NavigationCancel extends RouterEvent {\n\treason!: string;\n\tredirectTo?: RouteComponent[];\n}\n// An event triggered when navigation fails due to an unexpected error.\nexport class NavigationError extends RouterEvent {\n\terror!: any;\n}\n\n/*\nNavigationStart {id: 1, url: '/test-a', navigationTrigger: 'imperative', restoredState: null, constructor: Object}\nRoutesRecognized {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nGuardsCheckStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nChildActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\nActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\nGuardsCheckEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, shouldActivate: true…}\nResolveStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nResolveEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\nChildActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\nNavigationEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', constructor: Object}\nScroll {routerEvent: NavigationEnd, position: null, anchor: null, constructor: Object}\n*/\n","import { Component, getContextByNode, isPlatformServer, WINDOW } from 'rxcomp';\nimport { combineLatest, EMPTY, fromEvent, merge, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { ILocationStrategy, LocationStrategy, LocationStrategyPath } from '../location/location.strategy';\nimport { INavigationExtras, IRoute, IRoutes, Route, Routes } from '../route/route';\nimport { RoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouteComponent, RouterKeyValue, RouterLink } from '../router.types';\nimport { ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, IRouterEvent, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized } from './router-events';\n\nexport default class RouterService {\n\tstatic routes: Routes = [];\n\tstatic route$: ReplaySubject<RouteSnapshot> = new ReplaySubject<RouteSnapshot>(1);\n\tstatic events$: ReplaySubject<RouterEvent> = new ReplaySubject<RouterEvent>(1);\n\tstatic observe$: Observable<RouterEvent>;\n\tstatic get flatRoutes(): Routes {\n\t\treturn getFlatRoutes_(this.routes);\n\t}\n\tstatic setRoutes(routes: IRoutes): RouterService {\n\t\tthis.routes = routes.map((x: IRoute) => new Route(x));\n\t\tthis.observe$ = makeObserve$_(this.routes, this.route$, this.events$, this.locationStrategy);\n\t\treturn this;\n\t}\n\tstatic setRouterLink(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// ['/hero', hero.id];\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic navigate(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// navigate(['items'], { relativeTo: this.route });\n\t\t// navigate(['/heroes', { id: heroId }]);\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic findRoute(routerLink: RouterLink): Route | null {\n\t\tconst initialUrl: string = this.locationStrategy.serializeLink(routerLink);\n\t\treturn this.findRouteByUrl(initialUrl);\n\t}\n\tstatic findRouteByUrl(initialUrl: string): Route | null {\n\t\tconst routes: Routes = getFlatRoutes_(this.routes);\n\t\tlet resolvedRoute: Route | null = null;\n\t\tlet lastMatcbesLength = Number.NEGATIVE_INFINITY;\n\t\tfor (let route of routes) {\n\t\t\tconst matches: RegExpMatchArray | null = initialUrl.match(route.matcher);\n\t\t\tif (matches && (!resolvedRoute || matches[0].length > lastMatcbesLength)) {\n\t\t\t\tlastMatcbesLength = matches[0].length;\n\t\t\t\tresolvedRoute = route;\n\t\t\t}\n\t\t}\n\t\tlet urlAfterRedirects: string = initialUrl;\n\t\tif (resolvedRoute && resolvedRoute.redirectTo) {\n\t\t\t// const routePath: RoutePath = RouterService.getPath(resolvedRoute.redirectTo);\n\t\t\t// urlAfterRedirects = routePath.url;\n\t\t\turlAfterRedirects = resolvedRoute.redirectTo;\n\t\t\tresolvedRoute = this.findRouteByUrl(urlAfterRedirects);\n\t\t}\n\t\t// console.log('RouterService.findRouteByUrl', resolvedRoute);\n\t\treturn resolvedRoute;\n\t}\n\tstatic getPath(routerLink: RouterLink = []): RoutePath {\n\t\tconst lastPath: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.locationStrategy.encodeParams(x);\n\t\t}).join('/');\n\t\tconst segments: RouteSegment[] = [];\n\t\tconst routes: (Route | RouteSnapshot)[] = [];\n\t\tconst route: Route | null = this.findRouteByUrl(lastPath);\n\t\tif (route) {\n\t\t\tlet r: Route | RouteSnapshot | undefined | null = route?.parent;\n\t\t\twhile (r) {\n\t\t\t\tsegments.unshift.apply(segments, r.segments);\n\t\t\t\troutes.unshift(r instanceof RouteSnapshot ? r : r.snapshot || r);\n\t\t\t\tr = r.parent;\n\t\t\t}\n\t\t\tsegments.push.apply(segments, route?.segments || []);\n\t\t\troutes.push({ path: lastPath } as any);\n\t\t}\n\t\tlet initialUrl: string = routes.map(r => r instanceof RouteSnapshot ? r.extractedUrl : r.path).join('/');\n\t\tinitialUrl = this.locationStrategy.getPath(initialUrl);\n\t\t// console.log('RouterService.getPath', initialUrl);\n\t\tconst routePath: RoutePath = new RoutePath(initialUrl, segments, route || undefined, this.locationStrategy);\n\t\treturn routePath;\n\t}\n\tprivate static locationStrategy_: ILocationStrategy;\n\tstatic get locationStrategy(): ILocationStrategy {\n\t\tif (this.locationStrategy_) {\n\t\t\treturn this.locationStrategy_;\n\t\t} else {\n\t\t\treturn this.locationStrategy_ = new LocationStrategyPath();\n\t\t}\n\t}\n\tstatic useLocationStrategy(locationStrategyType: typeof LocationStrategy): void {\n\t\tthis.locationStrategy_ = new locationStrategyType();\n\t}\n}\nfunction getFlatRoutes_(routes: Routes): Routes {\n\tconst reduceRoutes: (routes: Route[]) => Route[] = (routes: Route[]): Route[] => {\n\t\treturn routes.reduce<Routes>((p: Route[], c: Route) => {\n\t\t\tp.push(c);\n\t\t\tp.push.apply(p, reduceRoutes(c.children || []));\n\t\t\treturn p;\n\t\t}, []);\n\t}\n\treturn reduceRoutes(routes);\n}\nfunction getFlatSnapshots_(currentSnapshot: RouteSnapshot): RouteSnapshot[] {\n\tlet snapshots: RouteSnapshot[] = [currentSnapshot];\n\tlet childRoute: RouteSnapshot | undefined = currentSnapshot.childRoute;\n\twhile (childRoute) {\n\t\tsnapshots.push(childRoute)\n\t\tchildRoute = childRoute.childRoute;\n\t}\n\treturn snapshots;\n}\nfunction clearRoutes_(routes: Routes, currentSnapshot: RouteSnapshot): void {\n\tlet snapshots: RouteSnapshot[] = getFlatSnapshots_(currentSnapshot);\n\tconst flatRoutes: Routes = getFlatRoutes_(routes);\n\tflatRoutes.forEach((route: Route) => {\n\t\tif (route.snapshot && snapshots.indexOf(route.snapshot) === -1) {\n\t\t\troute.snapshot = undefined;\n\t\t}\n\t});\n}\nfunction resolveRoutes_(routes: Routes, childRoutes: Routes, initialUrl: string): RouteSnapshot | undefined {\n\tlet resolvedSnapshot: RouteSnapshot | undefined;\n\tfor (let route of childRoutes) {\n\t\tconst snapshot: RouteSnapshot | undefined = resolveRoute_(routes, route, initialUrl);\n\t\tif (snapshot) {\n\t\t\tif (resolvedSnapshot) {\n\t\t\t\t/*\n\t\t\t\tif (snapshot.remainUrl.length < resolvedSnapshot.remainUrl.length) {\n\t\t\t\t\t// console.log('RouterService.resolveRoutes_', snapshot.remainUrl.length, '<', resolvedSnapshot.remainUrl.length, snapshot.path, snapshot.remainUrl);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tresolvedSnapshot = snapshot.remainUrl.length < resolvedSnapshot.remainUrl.length ? snapshot : resolvedSnapshot;\n\t\t\t} else {\n\t\t\t\tresolvedSnapshot = snapshot;\n\t\t\t}\n\t\t}\n\t}\n\treturn resolvedSnapshot;\n\t// return childRoutes.reduce<RouteSnapshot | undefined>((p, route) => p || resolveRoute_(routes, route, initialUrl), undefined);\n}\nfunction resolveRoute_(routes: Routes, route: Route, initialUrl: string): RouteSnapshot | undefined {\n\t// console.log('resolveRoute_', initialUrl);\n\tlet urlAfterRedirects!: string;\n\tlet extractedUrl: string = '';\n\tlet remainUrl: string = initialUrl;\n\tconst match: RegExpMatchArray | null = initialUrl.match(route.matcher);\n\t// console.log('RouterService.resolveRoute_', route.matcher, match?.length, initialUrl, '=>', route.path);\n\tif (!match) {\n\t\t// console.log('RouterService.resolveRoute_', initialUrl, '=>', route.path);\n\t\treturn undefined;\n\t}\n\tif (route.redirectTo) {\n\t\t// console.log('RouterService.resolveRoute_', 'match', initialUrl, '=>', route.redirectTo, match);\n\t\tconst routePath: RoutePath = RouterService.getPath(route.redirectTo);\n\t\treturn resolveRoutes_(routes, routes, routePath.url);\n\t}/* else {\n\t\t// console.log('RouterService.resolveRoute_', 'match', initialUrl, '=>', route.path, match);\n\t}*/\n\textractedUrl = match[0];\n\tremainUrl = initialUrl.substring(match[0].length, initialUrl.length);\n\tconst routePath: RoutePath = new RoutePath(extractedUrl, route.segments, undefined, RouterService.locationStrategy);\n\tlet params: RouterKeyValue = routePath.params;\n\tconst snapshot: RouteSnapshot = new RouteSnapshot({ ...route, initialUrl, urlAfterRedirects, extractedUrl, remainUrl, params });\n\troute.snapshot = snapshot;\n\tif (snapshot && snapshot.remainUrl.length && route.children?.length) {\n\t\tconst childSnapshot: RouteSnapshot | undefined = resolveRoutes_(routes, route.children, snapshot.remainUrl);\n\t\tsnapshot.childRoute = childSnapshot;\n\t\tif (childSnapshot) {\n\t\t\tchildSnapshot.parent = snapshot;\n\t\t\tsnapshot.remainUrl = childSnapshot.remainUrl;\n\t\t}\n\t}\n\t// console.log('RouterService.resolveRoute_', snapshot.path, snapshot.extractedUrl, snapshot.remainUrl);\n\treturn snapshot;\n}\nfunction makeActivatorResponse$_(event: RouterEvent, activators: Observable<boolean | RouteComponent[]>[]): Observable<RouterEvent> {\n\t// console.log('makeActivatorResponse$_', event);\n\treturn combineLatest(...activators).pipe(\n\t\tmap((values: (boolean | RouteComponent[])[]) => {\n\t\t\tconst canActivate: boolean | RouteComponent[] = values.reduce<boolean | RouteComponent[]>((p: boolean | RouteComponent[], c: boolean | RouteComponent[]) => {\n\t\t\t\treturn p === true ? (c === true ? true : c) : p;\n\t\t\t}, true);\n\t\t\tif (canActivate === true) {\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tconst cancelEvent: IRouterEvent = { ...event, reason: 'An activation guard has dismissed navigation to the route.' };\n\t\t\t\tif (canActivate !== false) {\n\t\t\t\t\tconst routePath: RoutePath = RouterService.getPath(canActivate);\n\t\t\t\t\tcancelEvent.redirectTo = [routePath.url];\n\t\t\t\t}\n\t\t\t\treturn new NavigationCancel(cancelEvent);\n\t\t\t}\n\t\t})\n\t);\n}\nfunction makeCanDeactivateResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart, currentRoute?: RouteSnapshot): Observable<RouterEvent> {\n\t// console.log('makeCanDeactivateResponse$_', event);\n\tif (event.route.canDeactivate && event.route.canDeactivate.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\tconst instance: Component = getContextByNode(event.route.element!)!.instance;\n\t\treturn makeActivatorResponse$_(event, route.canDeactivate.map(x => x(instance, currentRoute!)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanLoadResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanLoadResponse$_', event);\n\tif (event.route.canLoad && event.route.canLoad.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canLoad.map(x => x(route, route.segments)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateChildResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateChildResponse$_', event, event.route.childRoute);\n\tconst reduceChildRouteActivators_ = (route: RouteSnapshot, activators: Observable<boolean | RouteComponent[]>[]): Observable<boolean | RouteComponent[]>[] => {\n\t\t// console.log('reduceChildRouteActivators_', route.canActivateChild, route.childRoute);\n\t\twhile (route != null && route.canActivateChild && route.canActivateChild.length && route.childRoute) {\n\t\t\tconst routeActivators: Observable<boolean | RouteComponent[]>[] = route.canActivateChild.map(x => x(route.childRoute!));\n\t\t\tArray.prototype.push.apply(activators, routeActivators);\n\t\t\troute = route.childRoute;\n\t\t}\n\t\treturn activators;\n\t}\n\tconst activators: Observable<boolean | RouteComponent[]>[] = reduceChildRouteActivators_(event.route, []);\n\t// console.log('makeCanActivateChildResponse$_', activators);\n\tif (activators.length) {\n\t\treturn makeActivatorResponse$_(event, activators);\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateResponse$_(events$: ReplaySubject<RouterEvent>, event: ChildActivationStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateResponse$_', event);\n\tif (event.route.canActivate && event.route.canActivate.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canActivate.map(x => x(route)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeObserve$_(routes: Routes, route$: ReplaySubject<RouteSnapshot>, events$: ReplaySubject<RouterEvent>, locationStrategy: ILocationStrategy): Observable<RouterEvent> {\n\tlet currentRoute: RouteSnapshot | undefined;\n\t// console.log('RouterService.WINDOW', WINDOW!!);\n\tconst stateEvents$ = isPlatformServer ? EMPTY : merge(fromEvent<PopStateEvent>(WINDOW, 'popstate')).pipe(\n\t\t/*\n\t\ttap((event: PopStateEvent) => {\n\t\t\t// detect rxcomp !!!\n\t\t\t// event.preventDefault();\n\t\t\t// event.stopImmediatePropagation(); // !!!\n\t\t\t// history.go(1);\n\t\t\t// console.log('RouterService.onPopState', `location: \"${document.location.pathname}\"`, `state: \"${event.state}\"`);\n\t\t}),\n\t\t*/\n\t\tmap(event => new NavigationStart({ routerLink: document.location.pathname, trigger: 'popstate' })),\n\t\tshareReplay(1),\n\t);\n\treturn merge(stateEvents$, events$).pipe(\n\t\tswitchMap((event: RouterEvent) => {\n\t\t\tif (event instanceof GuardsCheckStart) {\n\t\t\t\treturn makeCanDeactivateResponse$_(events$, event, currentRoute).pipe(\n\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn makeCanLoadResponse$_(events$, event).pipe(\n\t\t\t\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn makeCanActivateChildResponse$_(events$, event);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\treturn makeCanActivateResponse$_(events$, event);\n\t\t\t} else {\n\t\t\t\treturn of(event);\n\t\t\t}\n\t\t}),\n\t\ttap((event: RouterEvent) => {\n\t\t\tif (event instanceof NavigationStart) {\n\t\t\t\t// console.log('NavigationStart', event.routerLink);\n\t\t\t\tconst routerLink = event.routerLink;\n\t\t\t\t// console.log('routerLink', routerLink);\n\t\t\t\tlet snapshot: RouteSnapshot | undefined;\n\t\t\t\tlet initialUrl: string;\n\t\t\t\tconst routePath: RoutePath = RouterService.getPath(routerLink);\n\t\t\t\t// console.log(routePath, routePath.url);\n\t\t\t\tinitialUrl = routePath.url;\n\t\t\t\t// console.log('initialUrl', initialUrl);\n\t\t\t\tconst isRelative: boolean = initialUrl.indexOf('/') !== 0;\n\t\t\t\tif (isRelative && currentRoute && currentRoute.children?.length) {\n\t\t\t\t\tsnapshot = resolveRoutes_(routes, currentRoute.children, initialUrl);\n\t\t\t\t\tif (snapshot) {\n\t\t\t\t\t\tcurrentRoute.childRoute = snapshot;\n\t\t\t\t\t\tsnapshot.parent = currentRoute;\n\t\t\t\t\t\tsnapshot = currentRoute;\n\t\t\t\t\t}\n\t\t\t\t\t// console.log('relative', currentRoute, snapshot, initialUrl);\n\t\t\t\t} else {\n\t\t\t\t\tsnapshot = resolveRoutes_(routes, routes, initialUrl);\n\t\t\t\t\t// console.log('absolute');\n\t\t\t\t}\n\t\t\t\tif (snapshot) {\n\t\t\t\t\t// console.log('RouterService.makeObserve$_', 'NavigationStart', snapshot);\n\t\t\t\t\tcurrentRoute = snapshot;\n\t\t\t\t\tevents$.next(new RoutesRecognized({ ...event, route: snapshot }));\n\t\t\t\t} else {\n\t\t\t\t\tevents$.next(new NavigationError({ ...event, error: new Error('unknown route') }));\n\t\t\t\t}\n\t\t\t} else if (event instanceof RoutesRecognized) {\n\t\t\t\t// console.log('RoutesRecognized', event.route.component, event.route.initialUrl, event.route.extractedUrl, event.route.urlAfterRedirects);\n\t\t\t\tevents$.next(new GuardsCheckStart({ ...event }));\n\t\t\t} else if (event instanceof GuardsCheckStart) {\n\t\t\t\t// console.log('GuardsCheckStart', event);\n\t\t\t\tevents$.next(new ChildActivationStart({ ...event }));\n\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\t// console.log('ChildActivationStart', event);\n\t\t\t\tevents$.next(new ActivationStart({ ...event }));\n\t\t\t} else if (event instanceof ActivationStart) {\n\t\t\t\t// console.log('ActivationStart', event);\n\t\t\t\tevents$.next(new GuardsCheckEnd({ ...event }));\n\t\t\t} else if (event instanceof GuardsCheckEnd) {\n\t\t\t\t// console.log('GuardsCheckEnd', event);\n\t\t\t\tevents$.next(new ResolveStart({ ...event }));\n\t\t\t} else if (event instanceof ResolveStart) {\n\t\t\t\t// console.log('ResolveStart', event);\n\t\t\t\tevents$.next(new ResolveEnd({ ...event }));\n\t\t\t} else if (event instanceof ResolveEnd) {\n\t\t\t\t// console.log('ResolveEnd', event);\n\t\t\t\tevents$.next(new ActivationEnd({ ...event }));\n\t\t\t} else if (event instanceof ActivationEnd) {\n\t\t\t\t// console.log('ActivationEnd', event);\n\t\t\t\tevents$.next(new ChildActivationEnd({ ...event }));\n\t\t\t} else if (event instanceof ChildActivationEnd) {\n\t\t\t\t// console.log('ChildActivationEnd', event);\n\t\t\t\tevents$.next(new RouteConfigLoadStart({ ...event }));\n\t\t\t} else if (event instanceof RouteConfigLoadStart) {\n\t\t\t\t// console.log('RouteConfigLoadStart', event);\n\t\t\t\tevents$.next(new RouteConfigLoadEnd({ ...event }));\n\t\t\t} else if (event instanceof RouteConfigLoadEnd) {\n\t\t\t\t// console.log('RouteConfigLoadEnd', event);\n\t\t\t\tevents$.next(new NavigationEnd({ ...event }));\n\t\t\t} else if (event instanceof NavigationEnd) {\n\t\t\t\tconst segments: string[] = [];\n\t\t\t\tlet source: RouteSnapshot | undefined = event.route;\n\t\t\t\twhile (source != null) {\n\t\t\t\t\t// console.log(source.params, source.data);\n\t\t\t\t\tif (source.extractedUrl?.length) {\n\t\t\t\t\t\tsegments.push(source.extractedUrl);\n\t\t\t\t\t}\n\t\t\t\t\tif (source.childRoute) {\n\t\t\t\t\t\tsource = source.childRoute;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (source.remainUrl?.length) {\n\t\t\t\t\t\t\tsegments[segments.length - 1] = segments[segments.length - 1] + source.remainUrl;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsource = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst extractedUrl: string = segments.join('/').replace(/\\/\\//g, '/');\n\t\t\t\t// console.log('NavigationEnd', event.route.extractedUrl, event.route);\n\t\t\t\tclearRoutes_(routes, event.route);\n\t\t\t\tlocationStrategy.setHistory(extractedUrl, undefined, event.trigger === 'popstate');\n\t\t\t\t// setHistory_(locationStrategy, extractedUrl, undefined, event.trigger === 'popstate');\n\t\t\t\troute$.next(event.route);\n\t\t\t} else if (event instanceof NavigationCancel) {\n\t\t\t\t// console.log('NavigationCancel', event.reason, event.redirectTo);\n\t\t\t\tif (event.redirectTo) {\n\t\t\t\t\t// const routePath: RoutePath = RouterService.getPath(event.redirectTo);\n\t\t\t\t\tevents$.next(new NavigationStart({ routerLink: event.redirectTo, trigger: 'imperative' }));\n\t\t\t\t}\n\t\t\t} else if (event instanceof NavigationError) {\n\t\t\t\tconsole.log('NavigationError', event.error);\n\t\t\t}\n\t\t}),\n\t\tcatchError((error: Error) => of(new NavigationError({ ...event, error }))),\n\t\tshareReplay(1),\n\t);\n}\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\nimport { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport { INavigationExtras } from '../route/route';\nimport { RoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteComponent, RouterLink } from '../router.types';\nimport RouterService from './router.service';\n\nexport default class RouterLinkDirective extends Directive {\n\tpath!: RoutePath;\n\tsegments!: RouteSegment[];\n\tprivate routerLink_!: RouteComponent[];\n\tget routerLink(): RouterLink {\n\t\treturn this.routerLink_;\n\t}\n\tset routerLink(routerLink: RouterLink) {\n\t\tthis.routerLink_ = Array.isArray(routerLink) ? routerLink : [routerLink];\n\t\tthis.segments = this.getSegments(this.routerLink_);\n\t}\n\tgetSegments(routerLink: RouteComponent[]): RouteSegment[] {\n\t\t// console.log('RouterLinkDirective.getSegments', routerLink);\n\t\tconst segments: RouteSegment[] = [];\n\t\trouterLink.forEach(item => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\tconst regExp: RegExp = /([^:]+)|\\:([^\\/]+)/g;\n\t\t\t\tconst matches = item.matchAll(regExp);\n\t\t\t\tconst components = [];\n\t\t\t\tfor (let match of matches) {\n\t\t\t\t\tconst g1 = match[1];\n\t\t\t\t\tconst g2 = match[2];\n\t\t\t\t\tif (g1) {\n\t\t\t\t\t\tcomponents.push(g1);\n\t\t\t\t\t} else if (g2) {\n\t\t\t\t\t\tconst param: { [key: string]: any } = {};\n\t\t\t\t\t\tparam[g2] = null;\n\t\t\t\t\t\tcomponents.push(param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegments.push(new RouteSegment('', {}));\n\t\t\t}\n\t\t});\n\t\treturn segments;\n\t}\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, 'click').pipe(shareReplay(1));\n\t\tevent$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(event => {\n\t\t\t// console.log('RouterLinkDirective', event, this.routerLink);\n\t\t\t// !!! skipLocationChange\n\t\t\tconst navigationExtras: INavigationExtras = {\n\t\t\t\tskipLocationChange: this.skipLocationChange,\n\t\t\t\treplaceUrl: this.replaceUrl,\n\t\t\t\tstate: this.state,\n\t\t\t};\n\t\t\tRouterService.setRouterLink(this.routerLink, navigationExtras);\n\t\t\tevent.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst routePath: RoutePath = RouterService.getPath(this.routerLink_);\n\t\t// console.log('RouterLinkDirective.routePath', routePath);\n\t\tnode.setAttribute('href', routePath.url);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[routerLink],[[routerLink]]',\n\t\tinputs: ['routerLink'],\n\t};\n}\n\n/*\nget urlTree(): UrlTree {\n    return RouterService.createUrlTree(this.routerLink, {\n        relativeTo: this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        preserveQueryParams: this.preserve,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment,\n    });\n}\n*/\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\nimport { RoutePath } from '../route/route-path';\nimport RouterLinkDirective from './router-link.directive';\nimport RouterService from './router.service';\n\nexport default class RouterLinkActiveDirective extends Directive {\n\trouterLinkActive!: { [key: string]: string } | string;\n\tkeys: string[] = [];\n\tonChanges() {\n\t\t// console.log('RouterLinkActive.onChanges');\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.remove.apply(node.classList, this.keys);\n\t\tlet keys: string[] = [];\n\t\tconst active = this.isActive();\n\t\tif (active) {\n\t\t\tconst object = this.routerLinkActive;\n\t\t\tif (typeof object === 'object') {\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tif (object[key]) {\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof object === 'string') {\n\t\t\t\tkeys = object.split(' ').filter(x => x.length);\n\t\t\t}\n\t\t}\n\t\tnode.classList.add.apply(node.classList, keys);\n\t\tthis.keys = keys;\n\t\t// console.log('RouterLinkActive.onChanges', active, keys);\n\t}\n\tisActive(): boolean {\n\t\tconst path: RoutePath = RouterService.getPath(this.host.routerLink);\n\t\tconst isActive: boolean = path.route?.snapshot != null;\n\t\t// console.log('RouterLinkActive.isActive', isActive);\n\t\treturn isActive;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[routerLinkActive],[[routerLinkActive]]',\n\t\thosts: { host: RouterLinkDirective },\n\t\tinputs: ['routerLinkActive'],\n\t};\n}\n","import { Component, Factory, getContext, IComment, IElement, IFactoryMeta, Structure } from 'rxcomp';\nimport { isObservable, Observable, Observer, of, ReplaySubject, Subscription } from 'rxjs';\nimport { filter, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport View from '../core/view';\nimport { isPromise } from '../route/route-activators';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport RouterService from './router.service';\n\nexport default class RouterOutletStructure extends Structure {\n\tprivate route$_: ReplaySubject<RouteSnapshot | undefined> = new ReplaySubject<RouteSnapshot | undefined>(1);\n\tprivate route_?: RouteSnapshot;\n\tprivate factory_?: typeof Component;\n\tget route(): RouteSnapshot | undefined {\n\t\treturn this.route_;\n\t}\n\thost?: RouterOutletStructure;\n\toutlet!: IComment;\n\telement?: IElement;\n\tinstance?: Component;\n\tonInit() {\n\t\tthis.route$().pipe(\n\t\t\tswitchMap(snapshot => this.factory$(snapshot)),\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(() => {\n\t\t\t// console.log(`RouterOutletStructure ActivatedRoutes: [\"${RouterService.flatRoutes.filter(x => x.snapshot).map(x => x.snapshot?.extractedUrl).join('\", \"')}\"]`);\n\t\t});\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\tonChanges() {\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\troute$(): Observable<RouteSnapshot | undefined> {\n\t\tconst source: Observable<RouteSnapshot | undefined> = this.host ? this.route$_ : RouterService.route$;\n\t\treturn source.pipe(\n\t\t\tfilter((snapshot: RouteSnapshot | undefined) => {\n\t\t\t\tthis.route_ = snapshot; // !!!\n\t\t\t\tif (this.snapshot_ && snapshot && this.snapshot_.component === snapshot.component) {\n\t\t\t\t\tthis.snapshot_.next(snapshot);\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapshot_ = snapshot;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tfactory$(snapshot: RouteSnapshot | undefined): Observable<boolean> {\n\t\tconst { module, node } = getContext(this);\n\t\tconst factory: typeof Component | undefined = snapshot?.component;\n\t\tif (this.factory_ !== factory) {\n\t\t\tthis.factory_ = factory;\n\t\t\treturn this.onExit$_(this.element, this.instance).pipe(\n\t\t\t\ttap(() => {\n\t\t\t\t\tif (this.element) {\n\t\t\t\t\t\tthis.element.parentNode!.removeChild(this.element);\n\t\t\t\t\t\tmodule.remove(this.element, this);\n\t\t\t\t\t\tthis.element = undefined;\n\t\t\t\t\t\tthis.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\tif (snapshot && factory && factory.meta.template) {\n\t\t\t\t\t\tlet element: IElement = document.createElement('div');\n\t\t\t\t\t\telement.innerHTML = factory.meta.template;\n\t\t\t\t\t\tif (element.children.length === 1) {\n\t\t\t\t\t\t\telement = element.firstElementChild as IElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.appendChild(element);\n\t\t\t\t\t\tconst instance: Factory | undefined = module.makeInstance(element, factory, factory.meta.selector!, this, undefined, { route: snapshot });\n\t\t\t\t\t\tmodule.compile(element, instance);\n\t\t\t\t\t\tthis.instance = instance;\n\t\t\t\t\t\tthis.element = element;\n\t\t\t\t\t\tsnapshot.element = element;\n\t\t\t\t\t\treturn this.onEnter$_(element, instance);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(false);\n\t\t}\n\t}\n\tprivate onEnter$_(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (element && instance && instance instanceof View) {\n\t\t\treturn asObservable([element], instance.onEnter);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\tprivate onExit$_(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (element && instance && instance instanceof View) {\n\t\t\treturn asObservable([element], instance.onExit);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'router-outlet,[router-outlet]',\n\t\thosts: { host: RouterOutletStructure },\n\t};\n}\nexport function asObservable<T>(args: any[], callback: (...args: any[]) => Observable<T> | Promise<T> | (() => T) | T): Observable<T> {\n\treturn Observable.create(function (observer: Observer<T>) {\n\t\tlet subscription: Subscription;\n\t\ttry {\n\t\t\tlet result: Observable<T> | Promise<T> | (() => T) | T = callback(...args);\n\t\t\tif (isObservable(result)) {\n\t\t\t\tsubscription = result.subscribe(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (isPromise<T>(result)) {\n\t\t\t\t(result as Promise<T>).then(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (typeof result === 'function') {\n\t\t\t\tobserver.next((result as (() => T))() as T);\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tobserver.next(result);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n\t\treturn () => {\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t}\n\t\t}\n\t});\n}\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { LocationStrategy } from './location/location.strategy';\nimport { IRoute } from './route/route';\nimport { NavigationCancel, NavigationEnd, NavigationError, RouterEvent } from './router/router-events';\nimport RouterLinkActiveDirective from './router/router-link-active.directive';\nimport RouterLinkDirective from './router/router-link.directive';\nimport RouterOutletStructure from './router/router-outlet.structure';\nimport RouterService from './router/router.service';\n\nconst factories: typeof Factory[] = [\n\tRouterOutletStructure,\n\tRouterLinkDirective,\n\tRouterLinkActiveDirective,\n];\nconst pipes: typeof Pipe[] = [\n];\n/**\n *  RouterModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *   RouterModule.forRoot([\n *    { path: '', redirectTo: '/index', pathMatch: 'full' },\n *    { path: 'index', component: IndexComponent, data: { title: 'Index' } }\n *   ])\n *  ],\n *  declarations: [\n *   IndexComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class RouterModule extends Module {\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log('RouterModule');\n\t\tRouterService.observe$.pipe(\n\t\t\ttap((event: RouterEvent) => {\n\t\t\t\tif (event instanceof NavigationEnd\n\t\t\t\t\t|| event instanceof NavigationCancel\n\t\t\t\t\t|| event instanceof NavigationError) {\n\t\t\t\t\tif (this.instances?.length) {\n\t\t\t\t\t\tconst root = this.instances[0];\n\t\t\t\t\t\troot.pushChanges();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe();\n\t\tRouterService.navigate(`${location.pathname === '' ? '/' : location.pathname}${location.search}${location.hash}`);\n\t}\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\tstatic forRoot(routes: IRoute[]): typeof RouterModule {\n\t\tRouterService.setRoutes(routes);\n\t\treturn this;\n\t}\n\tstatic useStrategy(locationStrategyType: typeof LocationStrategy): typeof RouterModule {\n\t\tRouterService.useLocationStrategy(locationStrategyType);\n\t\treturn this;\n\t}\n}\n","import { Observable } from 'rxjs';\n\nexport enum RouteLocationStrategy {\n\tPath = 'path',\n\tHash = 'hash',\n}\nexport type RouteComponent = string | number | { [key: string]: any; };\nexport type RouterLink = string | RouteComponent[];\nexport type RouterActivator = Observable<boolean> | (() => boolean) | boolean;\nexport type RouterActivatorResult = Observable<boolean | RouteComponent[]> | Promise<boolean | RouteComponent[]> | boolean | RouteComponent[];\nexport type RouterKeyValue = { [key: string]: RouterKeyValue | string | null };\nexport type Params = { [key: string]: any; };\nexport type Data = { [key: string]: any; };\n","import { isPlatformBrowser } from 'rxcomp';\nimport { Observable, Observer } from 'rxjs';\n\nexport function transition$(callback: (complete: (result: boolean) => void) => void) {\n\treturn Observable.create(function (observer: Observer<boolean>) {\n\t\t// let subscription: Subscription;\n\t\ttry {\n\t\t\tif (isPlatformBrowser) {\n\t\t\t\tcallback((result: boolean) => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tobserver.next(true);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n        /*\n        return () => {\n            if (subscription) {\n                subscription.unsubscribe();\n            }\n        }\n        */\n\t});\n}\n"]}