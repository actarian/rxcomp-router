{"version":3,"sources":["web/client/src/main.browser.ts","../../src/core/view.ts","../../src/route/route-snapshot.ts","../../src/location/location.strategy.ts","../../src/observable/observable.ts","../../src/route/route-activators.ts","../../src/route/route-segment.ts","../../src/route/route.ts","../../src/route/route-path.ts","../../src/router/router-events.ts","../../src/router/router.service.ts","../../src/router/router-link.directive.ts","../../src/router/router-link-active.directive.ts","../../src/transition/transition.ts","../../src/router/router-outlet.structure.ts","../../src/router.module.ts","../../src/router.types.ts","../../web/client/src/app.component.ts","../../web/client/src/custom-activator/custom-activator.ts","../../web/client/src/pages/contacts.component.ts","../../web/client/src/pages/data.component.ts","../../web/client/src/pages/detail.component.ts","../../web/client/src/pages/index.component.ts","../../web/client/src/pages/not-found.component.ts","../../web/client/src/pages/sub.component.ts","../../web/client/src/app.module.ts","../../web/client/src/main.browser.ts"],"names":["rxcomp","rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","toString","call","slice","name","from","test","_unsupportedIterableToArray","done","TypeError","next","bind","Transition","callback","path","this","matcher","OnceTransition","_Transition","EnterTransition","_Transition2","LeaveTransition","_Transition3","View","_Component","get","transitions","transitions_","meta","matches","exec","Component","RouteSnapshot","options","pathMatch","relative","data$","ReplaySubject","params$","queryParams$","canDeactivate","canLoad","canActivate","canActivateChild","assign","data","params","queryParams","snapshot","childRoute","parent","LocationStrategy","_proto","serializeLink","routerLink","_this","url","map","x","encodeParams","join","serializeUrl","serialize","routePath","prefix","search","hash","resolve","segments","_step","query","_iterator","matchAll","match","g1","g2","g3","substring","split","resolveParams","routeSegments","_this2","segment","index","decodeParams","encoded","Serializer","encode","encodeJson","encodeBase64","encodeParam","decoded","indexOf","decode","decodeParam","decodeBase64","decodeJson","error","Number","encodeSegment","encodeString","replace","decodeSegment","decodeString","encodeURIComponent","decodeURIComponent","getPath","getUrl","pushState","popped","historySupported","state","snapshotToState","title","document","history","console","log","historyRequired","Error","location","pool","undefined","initialUrl","urlAfterRedirects","extractedUrl","remainUrl","previousRoute","stateToSnapshot","routes","route","find","r","redirectTo","isPlatformBrowser","LocationStrategyPath","_LocationStrategy","LocationStrategyHash","_LocationStrategy2","_proto2","_this3","_step2","_iterator2","asObservable","args","Observable","observer","subscription","result","isObservable","subscribe","complete","isPromise","then","unsubscribe","Promise","makeObserver$_","RouteSegment","Route","activator","component","currentRoute","children","iRoute","RegExp","matchers","param","regexp","RoutePath","locationStrategy","url_","set","routeSegments_","RouterEvent","NavigationStart","_RouterEvent","RoutesRecognized","_RouterEvent2","GuardsCheckStart","_RouterEvent3","ChildActivationStart","_RouterEvent4","ActivationStart","_RouterEvent5","GuardsCheckEnd","_RouterEvent6","ResolveStart","_RouterEvent7","ResolveEnd","_RouterEvent8","ActivationEnd","_RouterEvent9","ChildActivationEnd","_RouterEvent10","RouteConfigLoadStart","_RouterEvent11","RouteConfigLoadEnd","_RouterEvent12","NavigationEnd","_RouterEvent13","NavigationCancel","_RouterEvent14","NavigationError","_RouterEvent15","RouterService","setRoutes","observe$","makeObserve$","currentEvent","route$","events$","stateEvents$","isPlatformServer","EMPTY","fromEvent","WINDOW","pipe","event","pathname","trigger","shareReplay","merge","switchMap","instance","getContextByNode","element","makeActivatorResponse$_","of","makeCanDeactivateResponse$_","nextEvent","makeCanLoadResponse$_","activators","routeActivators","reduceChildRouteActivators_","makeCanActivateChildResponse$_","makeCanActivateResponse$_","tap","_currentRoute$childre","resolveRoutes_","_source$extractedUrl","_source$remainUrl","currentSnapshot","snapshots","getFlatSnapshots_","getFlatRoutes_","clearRoutes_","warn","catchError","setRouterLink","extras","navigate","findRoute","findRouteByUrl","resolvedRoute","lastMatcbesLength","NEGATIVE_INFINITY","lastPath","unshift","useLocationStrategy","locationStrategyFactory","locationStrategy_","reduceRoutes","reduce","p","c","childRoutes","resolvedSnapshot","resolveRoute_","_route$children","childSnapshot","combineLatest","values","cancelEvent","reason","RouterLinkDirective","_Directive","getSegments","item","components","onInit","routerLink$","takeUntil","unsubscribe$","node","getContext","navigationExtras","skipLocationChange","replaceUrl","preventDefault","onChanges","routerLink_","setAttribute","Directive","selector","inputs","RouterLinkActiveDirective","classList","remove","isActive","routerLinkActive","add","_path$route","host","transition$","transitionOnce","sessionStorage","setItem","MEMORY","sessionStorageSet_","transitionOnced","getItem","sessionStorageGet_","hosts","RouterOutletStructure","_Structure","route$_","_this$host$route","factory$","_this$host$route2","route_","snapshot_","_this4","_getContext","module","factory","factory_","onLeave$_","parentNode","removeChild","template","createElement","innerHTML","firstElementChild","appendChild","makeInstance","compile","onOnce$_","onEnter$_","transition","_snapshot$previousRou","_snapshot$previousRou2","Structure","RouteLocationStrategy","factories","pipes","RouterModule","_Module","_this$instances","instances","pushChanges","forRoot","useStrategy","locationStrategyType","Module","declarations","concat","exports","AppComponent","errors$","customActivator","CustomActivator","ContactsComponent","DataComponent","datas","DetailComponent","_View","detailId","once:","gsap","opacity","scale","to","duration","ease","Power3","easeInOut","onComplete","from:dashboard","rotate","enter:","leave:","IndexComponent","NotFoundComponent","SubComponent","AppModule","imports","CoreModule","bootstrap","Browser"],"mappings":"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","file":"docs\\js\\main.min.js","sourcesContent":[null,"\nimport { Component, IElement, IFactoryMeta } from 'rxcomp';\nimport { Observable } from 'rxjs';\nimport { RouteSnapshot } from '../route/route-snapshot';\n\nexport type TransitionCallback = (node: IElement) => Observable<void> | Promise<void> | (() => void) | void;\nexport interface ITransitionKey extends String { }\nexport interface ITransition {\n\t[key: string]: (node: IElement) => Observable<void> | Promise<void> | (() => void) | void;\n}\nexport class Transition {\n\tcallback: TransitionCallback;\n\tpath: string;\n\tconstructor(callback: TransitionCallback, path?: string) {\n\t\tthis.callback = callback;\n\t\tthis.path = path || '**';\n\t}\n\tmatcher(path?: string): boolean {\n\t\treturn this.path === '**' ? true : this.path === path;\n\t}\n}\nexport class OnceTransition extends Transition { }\nexport class EnterTransition extends Transition { }\nexport class LeaveTransition extends Transition { }\nexport interface IViewMeta extends IFactoryMeta {\n\t/**\n\t * example:\n\t * transition: {\n\t * \t'from:dashboard': (node:IElement, previousRoute?:RouteSnapshot) => {\n\t *  }\n\t *\t'to:detail/:detailId': (node:IElement, nextRoute:RouteSnapshot) => {\n\t *  }\n\t * \t'enter:': (node:IElement, previousRoute?:RouteSnapshot) => {\n\t *  }\n\t *\t'leave:': (node:IElement, nextRoute:RouteSnapshot) => {\n\t *  }\n\t *\t'once:': (node:IElement) => {\n\t *  }\n\t */\n\ttransitions?: ITransition;\n}\nexport default class View extends Component {\n\troute!: RouteSnapshot;\n\t/*\n\tonEnter(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n\tonLeave(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n\t*/\n\tstatic meta: IViewMeta;\n\tstatic transitions_?: Transition[];\n\tstatic get transitions(): Transition[] {\n\t\tlet transitions!: Transition[];\n\t\tif (this.transitions_) {\n\t\t\ttransitions = this.transitions_;\n\t\t} else {\n\t\t\ttransitions = this.transitions_ = [];\n\t\t\tconst source = this.meta.transitions || {};\n\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\tconst matches = /^(once|from|enter|to|leave):\\s?(.+)?\\s?$/.exec(key);\n\t\t\t\t// return /([^\\s]+)\\s?=>\\s?([^\\s]+)/.test(key);\n\t\t\t\tif ((matches != null && matches.length > 1)) {\n\t\t\t\t\tswitch (matches[1]) {\n\t\t\t\t\t\tcase 'once':\n\t\t\t\t\t\t\ttransitions.push(new OnceTransition(source[key], matches[2]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'to':\n\t\t\t\t\t\tcase 'from':\n\t\t\t\t\t\tcase 'enter':\n\t\t\t\t\t\t\ttransitions.push(new EnterTransition(source[key], matches[2]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'to':\n\t\t\t\t\t\tcase 'leave':\n\t\t\t\t\t\t\ttransitions.push(new LeaveTransition(source[key], matches[2]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn transitions;\n\t}\n}\n","import { Component, Factory, IElement } from 'rxcomp';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { RouteComponent, RouterKeyValue } from '../router.types';\r\nimport { IBaseRoute, Route } from './route';\r\nimport { RouteSegment } from './route-segment';\r\n\r\nexport class RouteSnapshot implements IBaseRoute {\r\n\tpath!: string;\r\n\tpathMatch: 'prefix' | 'full' = 'prefix';\r\n\tcomponent!: typeof Component; // import !!!\r\n\tsegments!: RouteSegment[];\r\n\trelative: boolean = true;\r\n\tchildren?: Route[];\r\n\tchildRoute?: RouteSnapshot;\r\n\tparent?: RouteSnapshot | undefined;\r\n\tinitialUrl?: string;\r\n\turlAfterRedirects?: string;\r\n\textractedUrl?: string;\r\n\tremainUrl!: string;\r\n\tredirectTo?: string;\r\n\tdata!: RouterKeyValue;\r\n\tparams!: RouterKeyValue;\r\n\tqueryParams!: RouterKeyValue;\r\n\tdata$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\r\n\tparams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\r\n\tqueryParams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\r\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\telement?: IElement;\r\n\tpreviousRoute?: RouteSnapshot;\r\n\tconstructor(options?: IBaseRoute) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t\tthis.data$.next(this.data);\r\n\t\tthis.params$.next(this.params);\r\n\t\tthis.queryParams$.next(this.queryParams);\r\n\t}\r\n\tnext(snapshot: RouteSnapshot): void {\r\n\t\tthis.childRoute = snapshot.childRoute;\r\n\t\tif (snapshot.childRoute) {\r\n\t\t\tsnapshot.childRoute.parent = this;\r\n\t\t}\r\n\t\tconst data = this.data = Object.assign({}, snapshot.data);\r\n\t\tthis.data$.next(data);\r\n\t\tconst params = this.params = Object.assign({}, snapshot.params);\r\n\t\tthis.params$.next(params);\r\n\t\tconst queryParams = this.queryParams = Object.assign({}, snapshot.queryParams);\r\n\t\tthis.queryParams$.next(queryParams);\r\n\t}\r\n}\r\n","import { decodeBase64, decodeJson, encodeBase64, encodeJson, isPlatformBrowser, Serializer } from 'rxcomp';\nimport { Routes } from '../route/route';\nimport { IRoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouterKeyValue, RouterLink } from '../router.types';\n\nexport interface ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string;\n\tserializeUrl(url: string): string;\n\tserialize(routePath: IRoutePath): string;\n\tresolve(url: string, target: IRoutePath): IRoutePath;\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any };\n\tencodeParams(value: any): string;\n\tdecodeParams(encoded: string): any;\n\tencodeSegment(s: string): string;\n\tdecodeSegment(s: string): string;\n\tencodeString(s: string): string;\n\tdecodeString(s: string): string;\n\tgetPath(url: string): string;\n\tgetUrl(url: string, params?: URLSearchParams): string;\n\tpushState(url: string, snapshot: RouteSnapshot, popped?: boolean): void;\n\thistoryRequired(): boolean;\n\tsnapshotToState(snapshot: RouteSnapshot, pool: RouteSnapshot[]): { [key: string]: any } | string | undefined;\n\tstateToSnapshot(routes: Routes, state?: any): RouteSnapshot | undefined;\n}\nexport class LocationStrategy implements ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\treturn url;\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any } {\n\t\tconst segments: string[] = path.split('/').filter(x => x !== '');\n\t\tconst params: RouterKeyValue = {};\n\t\trouteSegments.forEach((segment: RouteSegment, index: number) => {\n\t\t\t// console.log('segment.params', segment.params);\n\t\t\tconst keys: string[] = Object.keys(segment.params);\n\t\t\tif (keys.length) {\n\t\t\t\tparams[keys[0]] = this.decodeParams(segments[index]);\n\t\t\t}\n\t\t});\n\t\treturn params;\n\t}\n\tencodeParams(value: any): string {\n\t\tlet encoded!: string;\n\t\tif (typeof value === 'object') {\n\t\t\tencoded = Serializer.encode<string>(value, [encodeJson, encodeBase64, encodeParam]);\n\t\t} else if (typeof value === 'number') {\n\t\t\tencoded = value.toString();\n\t\t}\n\t\treturn encoded;\n\t}\n\tdecodeParams(value: string): any {\n\t\tlet decoded: any = value;\n\t\tif (value.indexOf(';') === 0) {\n\t\t\ttry {\n\t\t\t\tdecoded = Serializer.decode<string>(value, [decodeParam, decodeBase64, decodeJson])\n\t\t\t} catch (error) {\n\t\t\t\tdecoded = value;\n\t\t\t}\n\t\t} else if (Number(value).toString() === value) {\n\t\t\tdecoded = Number(value);\n\t\t}\n\t\treturn decoded;\n\t}\n\tencodeSegment(value: string): string {\n\t\treturn this.encodeString(value).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n\t}\n\tdecodeSegment(value: string): string {\n\t\treturn this.decodeString(value.replace(/%28/g, '(').replace(/%29/g, ')').replace(/\\&/gi, '%26'));\n\t}\n\tencodeString(value: string): string {\n\t\treturn encodeURIComponent(value).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n\t}\n\tdecodeString(value: string): string {\n\t\treturn decodeURIComponent(value.replace(/\\@/g, '%40').replace(/\\:/gi, '%3A').replace(/\\$/g, '%24').replace(/\\,/gi, '%2C'));\n\t}\n\tgetPath(url: string): string {\n\t\treturn url;\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${url}${params ? '?' + params.toString() : ''}`;\n\t}\n\tpushState(url: string, snapshot: RouteSnapshot, popped?: boolean): void {\n\t\tif (LocationStrategy.historySupported()) {\n\t\t\t// url = this.getUrl(url, params);\n\t\t\t// !!!\n\t\t\t// const state = params ? params.toString() : '';\n\t\t\t// console.log(state);\n\t\t\t// if (popped) {\n\t\t\t// history.replaceState(undefined, title, url);\n\t\t\t// } else {\n\t\t\tif (!popped) {\n\t\t\t\ttry {\n\t\t\t\t\tconst state = this.snapshotToState(snapshot);\n\t\t\t\t\t// console.log('LocationStrategy.snapshotToState state', state);\n\t\t\t\t\t// console.log(state);\n\t\t\t\t\tconst title = document.title; // you can pass null as string cause title is a DOMString!\n\t\t\t\t\thistory.pushState(state, title, url);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log('LocationStrategy.pushState.error', error);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.historyRequired()) {\n\t\t\tthrow new Error('LocationStrategyError: history not supported!');\n\t\t} else {\n\t\t\tlocation.hash = url;\n\t\t}\n\t}\n\tsnapshotToState(snapshot?: RouteSnapshot, pool: RouteSnapshot[] = []): { [key: string]: any } | string | undefined {\n\t\tlet state: { [key: string]: any } | string | undefined = undefined;\n\t\tif (snapshot) {\n\t\t\tif (pool.indexOf(snapshot) !== -1) {\n\t\t\t\tstate = snapshot.path;\n\t\t\t} else {\n\t\t\t\tpool.push(snapshot);\n\t\t\t\tstate = {};\n\t\t\t\tstate.path = snapshot.path;\n\t\t\t\tstate.initialUrl = snapshot.initialUrl;\n\t\t\t\tstate.urlAfterRedirects = snapshot.urlAfterRedirects;\n\t\t\t\tstate.extractedUrl = snapshot.extractedUrl;\n\t\t\t\tstate.remainUrl = snapshot.remainUrl;\n\t\t\t\tstate.childRoute = this.snapshotToState(snapshot.childRoute, pool);\n\t\t\t\tstate.previousRoute = this.snapshotToState(snapshot.previousRoute, pool);\n\t\t\t\tstate.data = snapshot.data;\n\t\t\t\tstate.params = snapshot.params;\n\t\t\t\tstate.queryParams = snapshot.queryParams;\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t}\n\tstateToSnapshot(routes: Routes, state?: any, pool: RouteSnapshot[] = []): RouteSnapshot | undefined {\n\t\tlet snapshot: RouteSnapshot | undefined;\n\t\tif (state) {\n\t\t\tconst route = routes.find(r => r.path = state.path);\n\t\t\tif (route) {\n\t\t\t\tif (typeof state === 'string') {\n\t\t\t\t\tsnapshot = pool.find(x => x.path === state);\n\t\t\t\t} else {\n\t\t\t\t\tsnapshot = new RouteSnapshot({\n\t\t\t\t\t\t...route,\n\t\t\t\t\t\tinitialUrl: state.initialUrl,\n\t\t\t\t\t\turlAfterRedirects: state.urlAfterRedirects,\n\t\t\t\t\t\textractedUrl: state.extractedUrl,\n\t\t\t\t\t\tremainUrl: state.remainUrl,\n\t\t\t\t\t\tredirectTo: '',\n\t\t\t\t\t\tdata: state.data,\n\t\t\t\t\t\tparams: state.params,\n\t\t\t\t\t\tqueryParams: state.queryParams,\n\t\t\t\t\t});\n\t\t\t\t\tpool.push(snapshot);\n\t\t\t\t\tsnapshot.childRoute = this.stateToSnapshot(routes, state.childRoute, pool);\n\t\t\t\t\tsnapshot.previousRoute = this.stateToSnapshot(routes, state.previousRoute, pool);\n\t\t\t\t}\n\t\t\t\troute.snapshot = snapshot;\n\t\t\t}\n\t\t}\n\t\treturn snapshot;\n\t}\n\thistoryRequired(): boolean {\n\t\treturn true;\n\t}\n\tstatic historySupported(): boolean {\n\t\treturn isPlatformBrowser && typeof history !== 'undefined' && typeof history.pushState === 'function';\n\t}\n}\nexport class LocationStrategyPath extends LocationStrategy implements ILocationStrategy {\n\t/*\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\t*/\n}\nexport class LocationStrategyHash extends LocationStrategy implements ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\tconst path: IRoutePath = this.resolve(url, {});\n\t\treturn this.serialize(path);\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.search}${routePath.hash}${routePath.path}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '#';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#.*)$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tprefix = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\tpath = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path.substring(1, path.length);\n\t\thash = hash;\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tgetPath(url: string): string {\n\t\tif (url.indexOf(`/#`) === -1) {\n\t\t\treturn `/#${url}`;\n\t\t} else {\n\t\t\treturn url;\n\t\t}\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${params ? '?' + params.toString() : ''}${this.getPath(url)}`;\n\t}\n\thistoryRequired(): boolean {\n\t\treturn false;\n\t}\n}\nexport function encodeParam(value: string): string {\n\treturn `;${value}`;\n}\nexport function decodeParam(value: string): string {\n\treturn value.substring(1, value.length);\n}\n","import { isObservable, Observable, Observer, Subscription } from \"rxjs\";\r\n\r\nexport function asObservable<T>(args: any[], callback: (...args: any[]) => Observable<T> | Promise<T> | (() => T) | T): Observable<T> {\r\n\treturn Observable.create(function (observer: Observer<T>) {\r\n\t\tlet subscription: Subscription;\r\n\t\ttry {\r\n\t\t\tlet result: Observable<T> | Promise<T> | (() => T) | T = callback(...args);\r\n\t\t\tif (isObservable(result)) {\r\n\t\t\t\tsubscription = result.subscribe(result => {\r\n\t\t\t\t\tobserver.next(result);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} else if (isPromise<T>(result)) {\r\n\t\t\t\t(result as Promise<T>).then(result => {\r\n\t\t\t\t\tobserver.next(result);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} else if (typeof result === 'function') {\r\n\t\t\t\tobserver.next((result as (() => T))() as T);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t} else {\r\n\t\t\t\tobserver.next(result);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tobserver.error(error);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tif (subscription) {\r\n\t\t\t\tsubscription.unsubscribe();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\nexport function isPromise<T>(object: any): object is Promise<T> {\r\n\treturn object instanceof Promise || (typeof object === 'object' && 'then' in object && typeof object['then'] === 'function');\r\n}\r\n","import { isObservable, Observable, Observer, Subscription } from 'rxjs';\r\nimport { isPromise } from '../observable/observable';\r\nimport { RouteComponent, RouterActivatorResult } from '../router.types';\r\nimport { RouteSegment } from './route-segment';\r\nimport { RouteSnapshot } from './route-snapshot';\r\n\r\nexport interface ICanDeactivate<T> {\r\n\tcanDeactivate(component: T, currentRoute: RouteSnapshot): RouterActivatorResult\r\n}\r\n\r\nexport interface ICanLoad {\r\n\tcanLoad(route: RouteSnapshot, segments: RouteSegment[]): RouterActivatorResult\r\n}\r\n\r\nexport interface ICanActivate {\r\n\tcanActivate(route: RouteSnapshot): RouterActivatorResult\r\n}\r\n\r\nexport interface ICanActivateChild {\r\n\tcanActivateChild(childRoute: RouteSnapshot): RouterActivatorResult\r\n}\r\n\r\nexport function mapCanDeactivate$_<T>(activator: ICanDeactivate<T>): (component: T, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\r\n\treturn function canDeactivate$(component: T, currentRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\r\n\t\treturn makeObserver$_(() => activator.canDeactivate(component, currentRoute));\r\n\t};\r\n}\r\nexport function mapCanLoad$_(activator: ICanLoad): (route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]> {\r\n\treturn function canLoad$$(route: RouteSnapshot, segments: RouteSegment[]): Observable<boolean | RouteComponent[]> {\r\n\t\treturn makeObserver$_(() => activator.canLoad(route, segments));\r\n\t};\r\n}\r\nexport function mapCanActivate$_(activator: ICanActivate): (route: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\r\n\treturn function canActivate$(route: RouteSnapshot): Observable<boolean | RouteComponent[]> {\r\n\t\treturn makeObserver$_(() => activator.canActivate(route));\r\n\t};\r\n}\r\nexport function mapCanActivateChild$_(activator: ICanActivateChild): (childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\r\n\treturn function canActivateChild$(childRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\r\n\t\treturn makeObserver$_(() => activator.canActivateChild(childRoute));\r\n\t};\r\n}\r\nfunction makeObserver$_(callback: () => RouterActivatorResult) {\r\n\treturn Observable.create(function (observer: Observer<boolean | RouteComponent[]>) {\r\n\t\tlet subscription: Subscription;\r\n\t\ttry {\r\n\t\t\tlet result: RouterActivatorResult = callback();\r\n\t\t\tif (isObservable(result)) {\r\n\t\t\t\tsubscription = result.subscribe(result => {\r\n\t\t\t\t\tobserver.next(result);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} else if (isPromise<boolean | RouteComponent[]>(result)) {\r\n\t\t\t\t(result as Promise<boolean | RouteComponent[]>).then(result => {\r\n\t\t\t\t\tobserver.next(result);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} else if (typeof result === 'boolean' || Array.isArray(result)) {\r\n\t\t\t\tobserver.next(result);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t} else {\r\n\t\t\t\tobserver.error(new Error('invalid value'));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tobserver.error(error);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tif (subscription) {\r\n\t\t\t\tsubscription.unsubscribe();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n","import { RouterKeyValue } from '../router.types';\r\n\r\nexport class RouteSegment {\r\n\tpath: string;\r\n\tparams: any;\r\n\tconstructor(path: string, params: RouterKeyValue = {}) {\r\n\t\tthis.path = path;\r\n\t\tthis.params = params;\r\n\t}\r\n}\r\n","import { Component, Factory } from 'rxcomp';\r\nimport { Observable } from 'rxjs';\r\nimport { Data, RouteComponent, RouterKeyValue } from '../router.types';\r\nimport { ICanActivate, ICanActivateChild, ICanDeactivate, ICanLoad, mapCanActivate$_, mapCanActivateChild$_, mapCanDeactivate$_, mapCanLoad$_ } from './route-activators';\r\nimport { RouteSegment } from './route-segment';\r\nimport { RouteSnapshot } from './route-snapshot';\r\n\r\nexport type IRoutes = IRoute[];\r\nexport type Routes = Route[];\r\nexport interface INavigationExtras {\r\n\trelativeTo?: RouteSnapshot | null;\r\n\tqueryParams?: RouterKeyValue; // Params | null;\r\n\tfragment?: string;\r\n\tpreserveQueryParams?: boolean;\r\n\tqueryParamsHandling?: any; // QueryParamsHandling | null;\r\n\tpreserveFragment?: boolean;\r\n\tskipLocationChange?: boolean;\r\n\treplaceUrl?: boolean;\r\n\tstate?: { [key: string]: any };\r\n}\r\nexport interface IBaseRoute {\r\n\tpath?: string;\r\n\tpathMatch?: 'prefix' | 'full';\r\n\tcomponent?: typeof Component;\r\n\t// matcher?: UrlMatcher;\r\n\tmatcher?: RegExp;\r\n\toutlet?: string;\r\n\tchildren?: IRoutes | Routes;\r\n\t// children?: IRoute[];\r\n\tinitialUrl?: string;\r\n\turlAfterRedirects?: string;\r\n\textractedUrl?: string;\r\n\tremainUrl?: string;\r\n\tredirectTo?: string;\r\n\t// resolve?: ResolveData;\r\n\t// loadChildren?: LoadChildren;\r\n\t// runGuardsAndResolvers?: RunGuardsAndResolvers;\r\n\tdata?: Data;\r\n\tparams?: RouterKeyValue;\r\n\tqueryParams?: RouterKeyValue;\r\n}\r\nexport interface IRoute extends IBaseRoute {\r\n\tcanActivate?: ICanActivate[];\r\n\tcanActivateChild?: ICanActivateChild[];\r\n\tcanDeactivate?: ICanDeactivate<Component>[];\r\n\tcanLoad?: ICanLoad[];\r\n}\r\nexport class Route implements IBaseRoute {\r\n\tpath!: string;\r\n\tpathMatch: 'prefix' | 'full' = 'prefix';\r\n\tcomponent!: typeof Component; // import !!!\r\n\tmatcher: RegExp;\r\n\tredirectTo?: string;\r\n\tsegments: RouteSegment[];\r\n\trelative: boolean = true;\r\n\tchildren?: Routes;\r\n\tparent?: Route;\r\n\tsnapshot?: RouteSnapshot;\r\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\r\n\tconstructor(options?: IRoute) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t\tthis.canDeactivate = options.canDeactivate ? options.canDeactivate.map(x => mapCanDeactivate$_<Component>(x)) : [];\r\n\t\t\tthis.canLoad = options.canLoad ? options.canLoad.map(x => mapCanLoad$_(x)) : [];\r\n\t\t\tthis.canActivate = options.canActivate ? options.canActivate.map(x => mapCanActivate$_(x)) : [];\r\n\t\t\tthis.canActivateChild = options.canActivateChild ? options.canActivateChild.map(x => mapCanActivateChild$_(x)) : [];\r\n\t\t}\r\n\t\tif (this.children) {\r\n\t\t\tthis.children = this.children.map((iRoute: IBaseRoute) => {\r\n\t\t\t\tconst route = new Route(iRoute);\r\n\t\t\t\troute.parent = this;\r\n\t\t\t\treturn route;\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst segments: RouteSegment[] = [];\r\n\t\tif (this.path === '**') {\r\n\t\t\tsegments.push(new RouteSegment(this.path));\r\n\t\t\tthis.matcher = new RegExp('^.*$');\r\n\t\t} else {\r\n\t\t\tconst matchers: string[] = [`^(\\.\\.\\/|\\.\\/|\\/\\/|\\/)?`];\r\n\t\t\tconst regExp: RegExp = /(^\\.\\.\\/|\\.\\/|\\/\\/|\\/)|([^:|\\/]+)\\/?|\\:([^\\/]+)\\/?/g;\r\n\t\t\tconst matches = this.path.matchAll(regExp);\r\n\t\t\tfor (let match of matches) {\r\n\t\t\t\tconst g1 = match[1];\r\n\t\t\t\tconst g2 = match[2];\r\n\t\t\t\tconst g3 = match[3];\r\n\t\t\t\tif (g1) {\r\n\t\t\t\t\tthis.relative = !(g1 === '//' || g1 === '/');\r\n\t\t\t\t} else if (g2) {\r\n\t\t\t\t\tmatchers.push(g2);\r\n\t\t\t\t\tsegments.push(new RouteSegment(g2));\r\n\t\t\t\t} else if (g3) {\r\n\t\t\t\t\tmatchers.push('(\\/[^\\/]+)');\r\n\t\t\t\t\tconst param: { [key: string]: any } = {};\r\n\t\t\t\t\tparam[g3] = null;\r\n\t\t\t\t\tsegments.push(new RouteSegment('', param));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.pathMatch === 'full') {\r\n\t\t\t\tmatchers.push('$');\r\n\t\t\t}\r\n\t\t\tconst regexp: string = matchers.join('');\r\n\t\t\tthis.matcher = new RegExp(regexp);\r\n\t\t}\r\n\t\tthis.segments = segments;\r\n\t}\r\n}\r\n","import { ILocationStrategy, LocationStrategy } from '../location/location.strategy';\r\nimport { Route } from './route';\r\nimport { RouteSegment } from './route-segment';\r\n\r\nexport interface IRoutePath {\r\n\turl?: string;\r\n\tprefix?: string;\r\n\tpath?: string;\r\n\tquery?: string;\r\n\tsearch?: any;\r\n\thash?: any;\r\n\tparams?: { [key: string]: any };\r\n\tsegments?: string[];\r\n}\r\n\r\nexport class RoutePath implements IRoutePath {\r\n\tprivate url_!: string;\r\n\tget url(): string {\r\n\t\treturn this.url_;\r\n\t}\r\n\tset url(url: string) {\r\n\t\tif (this.url_ !== url) {\r\n\t\t\tthis.locationStrategy.resolve(url, this);\r\n\t\t\tthis.url_ = this.locationStrategy.serialize(this);\r\n\t\t}\r\n\t}\r\n\tprivate routeSegments_!: RouteSegment[];\r\n\tget routeSegments(): RouteSegment[] {\r\n\t\treturn this.routeSegments_;\r\n\t}\r\n\tset routeSegments(routeSegments: RouteSegment[]) {\r\n\t\tif (this.routeSegments_ !== routeSegments) {\r\n\t\t\tthis.routeSegments_ = routeSegments;\r\n\t\t\tthis.params = this.locationStrategy.resolveParams(this.path, routeSegments);\r\n\t\t}\r\n\t}\r\n\tget remainUrl(): string {\r\n\t\treturn this.query + this.hash;\r\n\t}\r\n\tprefix: string = '';\r\n\tpath: string = '';\r\n\tquery: string = '';\r\n\tsearch: string = '';\r\n\thash: string = '';\r\n\tparams!: { [key: string]: any };\r\n\tsegments!: string[];\r\n\troute?: Route;\r\n\tlocationStrategy: ILocationStrategy;\r\n\tconstructor(url: string = '', routeSegments: RouteSegment[] = [], snapshot?: Route, locationStrategy?: ILocationStrategy) {\r\n\t\tthis.locationStrategy = locationStrategy || new LocationStrategy();\r\n\t\tthis.url = url;\r\n\t\tthis.routeSegments = routeSegments;\r\n\t\tthis.route = snapshot;\r\n\t}\r\n}\r\n","import { Route } from '../route/route';\r\nimport { RouteSnapshot } from '../route/route-snapshot';\r\nimport { RouteComponent, RouterLink } from '../router.types';\r\n\r\nexport interface IRouterEvent {\r\n\tid?: number;\r\n\trouterLink?: RouterLink;\r\n\turl?: string; // The target URL passed into the `Router#navigateByUrl()` call before navigation. This is the value before the router has parsed or applied redirects to it.\r\n\tinitialUrl?: any; // string | UrlTree; // The initial target URL after being parsed with `UrlSerializer.extract()`.\r\n\turlAfterRedirects?: string;\r\n\textractedUrl?: any; // UrlTree; // The extracted URL after redirects have been applied.\r\n\tremainUrl?: string;\r\n\tfinalUrl?: any; // UrlTree;\r\n\ttrigger?: 'imperative' | 'popstate' | 'hashchange';\r\n\textras?: any; // NavigationExtras;\r\n\tpreviousNavigation?: IRouterEvent | null;\r\n\troute?: Route | RouteSnapshot;\r\n\treason?: string;\r\n\tredirectTo?: RouteComponent[];\r\n\terror?: any;\r\n}\r\nexport class RouterEvent implements IRouterEvent {\r\n\turl!: string;\r\n\trouterLink!: RouterLink;\r\n\ttrigger!: 'imperative' | 'popstate' | 'hashchange';\r\n\tconstructor(options?: IRouterEvent) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t\tif (this.routerLink) {\r\n\t\t\tthis.url = Array.isArray(this.routerLink) ? this.routerLink.join('') : this.routerLink;\r\n\t\t}\r\n\t}\r\n}\r\n// An event triggered when navigation starts.\r\nexport class NavigationStart extends RouterEvent {\r\n\tnavigationTrigger!: 'imperative' | 'popstate' | 'hashchange';\r\n\trestoredState?: { [key: string]: any };\r\n}\r\n// An event triggered when the Router parses the URL and the routes are recognized.\r\nexport class RoutesRecognized extends RouterEvent {\r\n\troute!: RouteSnapshot; // ???\r\n\t// state!: RouterStateSnapshot;\r\n}\r\n// An event triggered at the start of the Guard phase of routing.\r\nexport class GuardsCheckStart extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the start of the child-activation part of the Resolve phase of routing.\r\nexport class ChildActivationStart extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the start of the activation part of the Resolve phase of routing.\r\nexport class ActivationStart extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the end of the Guard phase of routing.\r\nexport class GuardsCheckEnd extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the the start of the Resolve phase of routing.\r\nexport class ResolveStart extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the end of the Resolve phase of routing.\r\nexport class ResolveEnd extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the end of the activation part of the Resolve phase of routing.\r\nexport class ActivationEnd extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered at the end of the child-activation part of the Resolve phase of routing.\r\nexport class ChildActivationEnd extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered before the Router lazy loads a route configuration.\r\nexport class RouteConfigLoadStart extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n\turlAfterRedirects!: string;\r\n}\r\n// An event triggered after a route has been lazy loaded.\r\nexport class RouteConfigLoadEnd extends RouterEvent {\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered when navigation ends successfully.\r\nexport class NavigationEnd extends RouterEvent {\r\n\turlAfterRedirects!: string;\r\n\troute!: RouteSnapshot;\r\n}\r\n// An event triggered when navigation is canceled. This is due to a Route Guard returning false during navigation.\r\nexport class NavigationCancel extends RouterEvent {\r\n\treason!: string;\r\n\tredirectTo?: RouteComponent[];\r\n}\r\n// An event triggered when navigation fails due to an unexpected error.\r\nexport class NavigationError extends RouterEvent {\r\n\terror!: any;\r\n}\r\n/*\r\nNavigationStart {id: 1, url: '/test-a', navigationTrigger: 'imperative', restoredState: null, constructor: Object}\r\nRoutesRecognized {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\r\nGuardsCheckStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\r\nChildActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\r\nActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\r\nGuardsCheckEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, shouldActivate: true…}\r\nResolveStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\r\nResolveEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\r\nActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\r\nChildActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\r\nNavigationEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', constructor: Object}\r\nScroll {routerEvent: NavigationEnd, position: null, anchor: null, constructor: Object}\r\n*/\r\n","import { Component, getContextByNode, isPlatformServer, WINDOW } from 'rxcomp';\nimport { combineLatest, EMPTY, fromEvent, merge, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { ILocationStrategy, LocationStrategy, LocationStrategyPath } from '../location/location.strategy';\nimport { INavigationExtras, IRoute, IRoutes, Route, Routes } from '../route/route';\nimport { RoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouteComponent, RouterKeyValue, RouterLink } from '../router.types';\nimport { ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, IRouterEvent, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized } from './router-events';\n\nexport default class RouterService {\n\tstatic routes: Routes = [];\n\tstatic route$: ReplaySubject<RouteSnapshot> = new ReplaySubject<RouteSnapshot>(1);\n\tstatic events$: ReplaySubject<RouterEvent> = new ReplaySubject<RouterEvent>(1);\n\tstatic observe$: Observable<RouterEvent>;\n\tstatic get flatRoutes(): Routes {\n\t\treturn getFlatRoutes_(this.routes);\n\t}\n\tstatic setRoutes(routes: IRoutes): RouterService {\n\t\tthis.routes = routes.map((x: IRoute) => new Route(x));\n\t\t// this.observe$ = makeObserve$_(this.routes, this.route$, this.events$, this.locationStrategy);\n\t\tthis.observe$ = this.makeObserve$();\n\t\treturn this;\n\t}\n\tstatic makeObserve$(): Observable<RouterEvent> {\n\t\tconst routes: Routes = this.routes;\n\t\tconst route$: ReplaySubject<RouteSnapshot> = this.route$;\n\t\tconst events$: ReplaySubject<RouterEvent> = this.events$;\n\t\tconst locationStrategy: ILocationStrategy = this.locationStrategy;\n\t\tlet currentRoute: RouteSnapshot | undefined;\n\t\tlet currentEvent: PopStateEvent | RouterEvent | undefined;\n\t\t// console.log('RouterService.WINDOW', WINDOW!!);\n\t\tconst stateEvents$ = isPlatformServer ? EMPTY : fromEvent<PopStateEvent>(WINDOW, 'popstate').pipe(\n\t\t\tmap((event: PopStateEvent) => {\n\t\t\t\tcurrentEvent = event;\n\t\t\t\tconst routerLink: string = `${document.location.pathname}${document.location.search}${document.location.hash}`;\n\t\t\t\t/*\n\t\t\t\t// !!! state to snapshot\n\t\t\t\tconst flatRoutes = getFlatRoutes_(routes);\n\t\t\t\tflatRoutes.forEach(r => r.snapshot = undefined);\n\t\t\t\tconst snapshot: RouteSnapshot = locationStrategy.stateToSnapshot(flatRoutes, event.state) as RouteSnapshot;\n\t\t\t\t// console.log('LocationStrategy.stateToSnapshot snapshot', snapshot);\n\t\t\t\t// console.log('RouterService PopStateEvent', 'snapshot', snapshot, 'routes', flatRoutes.map(route => route.snapshot));\n\t\t\t\treturn new NavigationEnd({ route: snapshot, routerLink, url: routerLink, trigger: 'popstate' });\n\t\t\t\t*/\n\t\t\t\treturn new NavigationStart({ routerLink, trigger: 'popstate' });\n\t\t\t}),\n\t\t\tshareReplay(1),\n\t\t);\n\t\treturn merge(stateEvents$, events$).pipe(\n\t\t\tswitchMap((event: RouterEvent) => {\n\t\t\t\tcurrentEvent = event;\n\t\t\t\tif (event instanceof GuardsCheckStart) {\n\t\t\t\t\treturn makeCanDeactivateResponse$_(events$, event, currentRoute).pipe(\n\t\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn makeCanLoadResponse$_(events$, event).pipe(\n\t\t\t\t\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn makeCanActivateChildResponse$_(events$, event);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\t\treturn makeCanActivateResponse$_(events$, event);\n\t\t\t\t} else {\n\t\t\t\t\treturn of(event);\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttap((event: RouterEvent) => {\n\t\t\t\tcurrentEvent = event;\n\t\t\t\t// console.log('RouterEvent', event);\n\t\t\t\tif (event instanceof NavigationStart) {\n\t\t\t\t\t// console.log('NavigationStart', event.routerLink);\n\t\t\t\t\tconst routerLink = event.routerLink;\n\t\t\t\t\t// console.log('routerLink', routerLink);\n\t\t\t\t\tlet snapshot: RouteSnapshot | undefined;\n\t\t\t\t\tlet initialUrl: string;\n\t\t\t\t\tconst routePath: RoutePath = RouterService.getPath(routerLink);\n\t\t\t\t\t// console.log(routePath, routePath.url);\n\t\t\t\t\tinitialUrl = routePath.url;\n\t\t\t\t\t// console.log('initialUrl', initialUrl);\n\t\t\t\t\tconst isRelative: boolean = initialUrl.indexOf('/') !== 0;\n\t\t\t\t\tif (isRelative && currentRoute && currentRoute.children?.length) {\n\t\t\t\t\t\tsnapshot = resolveRoutes_(routes, currentRoute.children, initialUrl, currentRoute);\n\t\t\t\t\t\tif (snapshot) {\n\t\t\t\t\t\t\tcurrentRoute.childRoute = snapshot;\n\t\t\t\t\t\t\tsnapshot.parent = currentRoute;\n\t\t\t\t\t\t\tsnapshot = currentRoute;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log('relative', currentRoute, snapshot, initialUrl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsnapshot = resolveRoutes_(routes, routes, initialUrl, currentRoute);\n\t\t\t\t\t\t// console.log('absolute');\n\t\t\t\t\t}\n\t\t\t\t\tif (snapshot) {\n\t\t\t\t\t\t// console.log('RouterService.makeObserve$_', 'NavigationStart', snapshot);\n\t\t\t\t\t\tcurrentRoute = snapshot;\n\t\t\t\t\t\tevents$.next(new RoutesRecognized({ ...event, route: snapshot }));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevents$.next(new NavigationError({ ...event, error: new Error('unknown route') }));\n\t\t\t\t\t}\n\t\t\t\t} else if (event instanceof RoutesRecognized) {\n\t\t\t\t\t// console.log('RoutesRecognized', event.route.component, event.route.initialUrl, event.route.extractedUrl, event.route.urlAfterRedirects);\n\t\t\t\t\tevents$.next(new GuardsCheckStart({ ...event }));\n\t\t\t\t} else if (event instanceof GuardsCheckStart) {\n\t\t\t\t\t// console.log('GuardsCheckStart', event);\n\t\t\t\t\tevents$.next(new ChildActivationStart({ ...event }));\n\t\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\t\t// console.log('ChildActivationStart', event);\n\t\t\t\t\tevents$.next(new ActivationStart({ ...event }));\n\t\t\t\t} else if (event instanceof ActivationStart) {\n\t\t\t\t\t// console.log('ActivationStart', event);\n\t\t\t\t\tevents$.next(new GuardsCheckEnd({ ...event }));\n\t\t\t\t} else if (event instanceof GuardsCheckEnd) {\n\t\t\t\t\t// console.log('GuardsCheckEnd', event);\n\t\t\t\t\tevents$.next(new ResolveStart({ ...event }));\n\t\t\t\t} else if (event instanceof ResolveStart) {\n\t\t\t\t\t// console.log('ResolveStart', event);\n\t\t\t\t\tevents$.next(new ResolveEnd({ ...event }));\n\t\t\t\t} else if (event instanceof ResolveEnd) {\n\t\t\t\t\t// console.log('ResolveEnd', event);\n\t\t\t\t\tevents$.next(new ActivationEnd({ ...event }));\n\t\t\t\t} else if (event instanceof ActivationEnd) {\n\t\t\t\t\t// console.log('ActivationEnd', event);\n\t\t\t\t\tevents$.next(new ChildActivationEnd({ ...event }));\n\t\t\t\t} else if (event instanceof ChildActivationEnd) {\n\t\t\t\t\t// console.log('ChildActivationEnd', event);\n\t\t\t\t\tevents$.next(new RouteConfigLoadStart({ ...event }));\n\t\t\t\t} else if (event instanceof RouteConfigLoadStart) {\n\t\t\t\t\t// console.log('RouteConfigLoadStart', event);\n\t\t\t\t\tevents$.next(new RouteConfigLoadEnd({ ...event }));\n\t\t\t\t} else if (event instanceof RouteConfigLoadEnd) {\n\t\t\t\t\t// console.log('RouteConfigLoadEnd', event);\n\t\t\t\t\tevents$.next(new NavigationEnd({ ...event }));\n\t\t\t\t} else if (event instanceof NavigationEnd) {\n\t\t\t\t\t// console.log('NavigationEnd', event);\n\t\t\t\t\tconst segments: string[] = [];\n\t\t\t\t\tlet source: RouteSnapshot | undefined = event.route;\n\t\t\t\t\twhile (source != null) {\n\t\t\t\t\t\t// console.log(source.params, source.data);\n\t\t\t\t\t\tif (source.extractedUrl?.length) {\n\t\t\t\t\t\t\tsegments.push(source.extractedUrl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (source.childRoute) {\n\t\t\t\t\t\t\tsource = source.childRoute;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (source.remainUrl?.length) {\n\t\t\t\t\t\t\t\tsegments[segments.length - 1] = segments[segments.length - 1] + source.remainUrl;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst extractedUrl: string = segments.join('/').replace(/\\/\\//g, '/');\n\t\t\t\t\t// console.log('NavigationEnd', event.route.extractedUrl, event.route);\n\t\t\t\t\tclearRoutes_(routes, event.route);\n\t\t\t\t\tlocationStrategy.pushState(extractedUrl, event.route, event.trigger === 'popstate');\n\t\t\t\t\t// pushState_(locationStrategy, extractedUrl, undefined, event.trigger === 'popstate');\n\t\t\t\t\troute$.next(event.route);\n\t\t\t\t} else if (event instanceof NavigationCancel) {\n\t\t\t\t\t// console.log('NavigationCancel', event.reason, event.redirectTo);\n\t\t\t\t\tif (event.redirectTo) {\n\t\t\t\t\t\t// const routePath: RoutePath = RouterService.getPath(event.redirectTo);\n\t\t\t\t\t\tevents$.next(new NavigationStart({ routerLink: event.redirectTo, trigger: 'imperative' }));\n\t\t\t\t\t}\n\t\t\t\t} else if (event instanceof NavigationError) {\n\t\t\t\t\tconsole.warn('RouterService NavigationError', event.error);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcatchError((error: Error) => of(new NavigationError({ ...(currentEvent || {}), error }))),\n\t\t\tshareReplay(1),\n\t\t);\n\t}\n\tstatic setRouterLink(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// ['/hero', hero.id];\n\t\t// console.log('RouterService.setRouterLink', routerLink);\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic navigate(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// navigate(['items'], { relativeTo: this.route });\n\t\t// navigate(['/heroes', { id: heroId }]);\n\t\t// console.log('RouterService.navigate', routerLink);\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic findRoute(routerLink: RouterLink): Route | null {\n\t\tconst initialUrl: string = this.locationStrategy.serializeLink(routerLink);\n\t\treturn this.findRouteByUrl(initialUrl);\n\t}\n\tstatic findRouteByUrl(initialUrl: string): Route | null {\n\t\tconst routes: Routes = getFlatRoutes_(this.routes);\n\t\tlet resolvedRoute: Route | null = null;\n\t\tlet lastMatcbesLength = Number.NEGATIVE_INFINITY;\n\t\tfor (let route of routes) {\n\t\t\tconst matches: RegExpMatchArray | null = initialUrl.match(route.matcher);\n\t\t\tif (matches && (!resolvedRoute || matches[0].length > lastMatcbesLength)) {\n\t\t\t\tlastMatcbesLength = matches[0].length;\n\t\t\t\tresolvedRoute = route;\n\t\t\t}\n\t\t}\n\t\tlet urlAfterRedirects: string = initialUrl;\n\t\tif (resolvedRoute && resolvedRoute.redirectTo) {\n\t\t\t// const routePath: RoutePath = RouterService.getPath(resolvedRoute.redirectTo);\n\t\t\t// urlAfterRedirects = routePath.url;\n\t\t\turlAfterRedirects = resolvedRoute.redirectTo;\n\t\t\tresolvedRoute = this.findRouteByUrl(urlAfterRedirects);\n\t\t}\n\t\t// console.log('RouterService.findRouteByUrl', resolvedRoute);\n\t\treturn resolvedRoute;\n\t}\n\tstatic getPath(routerLink: RouterLink = []): RoutePath {\n\t\tconst lastPath: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.locationStrategy.encodeParams(x);\n\t\t}).join('/');\n\t\tconst segments: RouteSegment[] = [];\n\t\tconst routes: (Route | RouteSnapshot)[] = [];\n\t\tconst route: Route | null = this.findRouteByUrl(lastPath);\n\t\tif (route) {\n\t\t\tlet r: Route | RouteSnapshot | undefined | null = route?.parent;\n\t\t\twhile (r) {\n\t\t\t\tsegments.unshift.apply(segments, r.segments);\n\t\t\t\troutes.unshift(r instanceof RouteSnapshot ? r : r.snapshot || r);\n\t\t\t\tr = r.parent;\n\t\t\t}\n\t\t\tsegments.push.apply(segments, route?.segments || []);\n\t\t\troutes.push({ path: lastPath } as any);\n\t\t}\n\t\tlet initialUrl: string = routes.map(r => r instanceof RouteSnapshot ? r.extractedUrl : r.path).join('/');\n\t\tinitialUrl = this.locationStrategy.getPath(initialUrl);\n\t\t// console.log('RouterService.getPath', initialUrl);\n\t\tconst routePath: RoutePath = new RoutePath(initialUrl, segments, route || undefined, this.locationStrategy);\n\t\treturn routePath;\n\t}\n\tprivate static locationStrategy_: ILocationStrategy;\n\tstatic get locationStrategy(): ILocationStrategy {\n\t\tif (this.locationStrategy_) {\n\t\t\treturn this.locationStrategy_;\n\t\t} else {\n\t\t\treturn this.locationStrategy_ = new LocationStrategyPath();\n\t\t}\n\t}\n\tstatic useLocationStrategy(locationStrategyFactory: typeof LocationStrategy): void {\n\t\tthis.locationStrategy_ = new locationStrategyFactory();\n\t}\n}\nfunction getFlatRoutes_(routes: Routes): Routes {\n\tconst reduceRoutes: (routes: Route[]) => Route[] = (routes: Route[]): Route[] => {\n\t\treturn routes.reduce<Routes>((p: Route[], c: Route) => {\n\t\t\tp.push(c);\n\t\t\tp.push.apply(p, reduceRoutes(c.children || []));\n\t\t\treturn p;\n\t\t}, []);\n\t}\n\treturn reduceRoutes(routes);\n}\nfunction getFlatSnapshots_(currentSnapshot: RouteSnapshot): RouteSnapshot[] {\n\tlet snapshots: RouteSnapshot[] = [currentSnapshot];\n\tlet childRoute: RouteSnapshot | undefined = currentSnapshot.childRoute;\n\twhile (childRoute) {\n\t\tsnapshots.push(childRoute)\n\t\tchildRoute = childRoute.childRoute;\n\t}\n\treturn snapshots;\n}\nfunction clearRoutes_(routes: Routes, currentSnapshot: RouteSnapshot): void {\n\tlet snapshots: RouteSnapshot[] = getFlatSnapshots_(currentSnapshot);\n\tconst flatRoutes: Routes = getFlatRoutes_(routes);\n\tflatRoutes.forEach((route: Route) => {\n\t\tif (route.snapshot && snapshots.indexOf(route.snapshot) === -1) {\n\t\t\troute.snapshot = undefined;\n\t\t}/* else {\n\t\t\tconsole.log(route);\n\t\t}*/\n\t});\n}\nfunction resolveRoutes_(routes: Routes, childRoutes: Routes, initialUrl: string, previousRoute?: RouteSnapshot): RouteSnapshot | undefined {\n\tlet resolvedSnapshot: RouteSnapshot | undefined;\n\tfor (let route of childRoutes) {\n\t\tconst snapshot: RouteSnapshot | undefined = resolveRoute_(routes, route, initialUrl, previousRoute);\n\t\tif (snapshot) {\n\t\t\tif (resolvedSnapshot) {\n\t\t\t\t/*\n\t\t\t\tif (snapshot.remainUrl.length < resolvedSnapshot.remainUrl.length) {\n\t\t\t\t\t// console.log('RouterService.resolveRoutes_', snapshot.remainUrl.length, '<', resolvedSnapshot.remainUrl.length, snapshot.path, snapshot.remainUrl);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tresolvedSnapshot = snapshot.remainUrl.length < resolvedSnapshot.remainUrl.length ? snapshot : resolvedSnapshot;\n\t\t\t} else {\n\t\t\t\tresolvedSnapshot = snapshot;\n\t\t\t}\n\t\t}\n\t}\n\treturn resolvedSnapshot;\n\t// return childRoutes.reduce<RouteSnapshot | undefined>((p, route) => p || resolveRoute_(routes, route, initialUrl), undefined);\n}\nfunction resolveRoute_(routes: Routes, route: Route, initialUrl: string, previousRoute?: RouteSnapshot): RouteSnapshot | undefined {\n\t// console.log('resolveRoute_', initialUrl);\n\tlet urlAfterRedirects!: string;\n\tlet extractedUrl: string = '';\n\tlet remainUrl: string = initialUrl;\n\tconst match: RegExpMatchArray | null = initialUrl.match(route.matcher);\n\t// console.log('RouterService.resolveRoute_', route.matcher, match?.length, initialUrl, '=>', route.path);\n\tif (!match) {\n\t\t// console.log('RouterService.resolveRoute_', initialUrl, '=>', route.path);\n\t\treturn undefined;\n\t}\n\tif (route.redirectTo) {\n\t\t// console.log('RouterService.resolveRoute_', 'match', initialUrl, '=>', route.redirectTo, match);\n\t\tconst routePath: RoutePath = RouterService.getPath(route.redirectTo);\n\t\treturn resolveRoutes_(routes, routes, routePath.url, previousRoute);\n\t}/* else {\n\t\t// console.log('RouterService.resolveRoute_', 'match', initialUrl, '=>', route.path, match);\n\t}*/\n\textractedUrl = match[0];\n\tremainUrl = initialUrl.substring(match[0].length, initialUrl.length);\n\tconst routePath: RoutePath = new RoutePath(extractedUrl, route.segments, undefined, RouterService.locationStrategy);\n\tlet params: RouterKeyValue = routePath.params;\n\tconst snapshot: RouteSnapshot = new RouteSnapshot({ ...route, initialUrl, urlAfterRedirects, extractedUrl, remainUrl, params });\n\tsnapshot.previousRoute = previousRoute;\n\troute.snapshot = snapshot;\n\tif (snapshot && snapshot.remainUrl.length && route.children?.length) {\n\t\tconst childSnapshot: RouteSnapshot | undefined = resolveRoutes_(routes, route.children, snapshot.remainUrl, previousRoute);\n\t\tsnapshot.childRoute = childSnapshot;\n\t\tif (childSnapshot) {\n\t\t\tchildSnapshot.parent = snapshot;\n\t\t\tsnapshot.remainUrl = childSnapshot.remainUrl;\n\t\t}\n\t}\n\t// console.log('RouterService.resolveRoute_', snapshot.path, snapshot.extractedUrl, snapshot.remainUrl);\n\treturn snapshot;\n}\nfunction makeActivatorResponse$_(event: RouterEvent, activators: Observable<boolean | RouteComponent[]>[]): Observable<RouterEvent> {\n\t// console.log('makeActivatorResponse$_', event);\n\treturn combineLatest(...activators).pipe(\n\t\tmap((values: (boolean | RouteComponent[])[]) => {\n\t\t\tconst canActivate: boolean | RouteComponent[] = values.reduce<boolean | RouteComponent[]>((p: boolean | RouteComponent[], c: boolean | RouteComponent[]) => {\n\t\t\t\treturn p === true ? (c === true ? true : c) : p;\n\t\t\t}, true);\n\t\t\tif (canActivate === true) {\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tconst cancelEvent: IRouterEvent = { ...event, reason: 'An activation guard has dismissed navigation to the route.' };\n\t\t\t\tif (canActivate !== false) {\n\t\t\t\t\tconst routePath: RoutePath = RouterService.getPath(canActivate);\n\t\t\t\t\tcancelEvent.redirectTo = [routePath.url];\n\t\t\t\t}\n\t\t\t\treturn new NavigationCancel(cancelEvent);\n\t\t\t}\n\t\t})\n\t);\n}\nfunction makeCanDeactivateResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart, currentRoute?: RouteSnapshot): Observable<RouterEvent> {\n\t// console.log('makeCanDeactivateResponse$_', event);\n\tif (event.route.canDeactivate && event.route.canDeactivate.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\tconst instance: Component = getContextByNode(event.route.element!)!.instance;\n\t\treturn makeActivatorResponse$_(event, route.canDeactivate.map(x => x(instance, currentRoute!)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanLoadResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanLoadResponse$_', event);\n\tif (event.route.canLoad && event.route.canLoad.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canLoad.map(x => x(route, route.segments)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateChildResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateChildResponse$_', event, event.route.childRoute);\n\tconst reduceChildRouteActivators_ = (route: RouteSnapshot, activators: Observable<boolean | RouteComponent[]>[]): Observable<boolean | RouteComponent[]>[] => {\n\t\t// console.log('reduceChildRouteActivators_', route.canActivateChild, route.childRoute);\n\t\twhile (route != null && route.canActivateChild && route.canActivateChild.length && route.childRoute) {\n\t\t\tconst routeActivators: Observable<boolean | RouteComponent[]>[] = route.canActivateChild.map(x => x(route.childRoute!));\n\t\t\tArray.prototype.push.apply(activators, routeActivators);\n\t\t\troute = route.childRoute;\n\t\t}\n\t\treturn activators;\n\t}\n\tconst activators: Observable<boolean | RouteComponent[]>[] = reduceChildRouteActivators_(event.route, []);\n\t// console.log('makeCanActivateChildResponse$_', activators);\n\tif (activators.length) {\n\t\treturn makeActivatorResponse$_(event, activators);\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateResponse$_(events$: ReplaySubject<RouterEvent>, event: ChildActivationStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateResponse$_', event);\n\tif (event.route.canActivate && event.route.canActivate.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canActivate.map(x => x(route)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { INavigationExtras } from '../route/route';\r\nimport { RoutePath } from '../route/route-path';\r\nimport { RouteSegment } from '../route/route-segment';\r\nimport { RouteComponent, RouterLink } from '../router.types';\r\nimport RouterService from './router.service';\r\n\r\nexport default class RouterLinkDirective extends Directive {\r\n\tpath!: RoutePath;\r\n\tsegments!: RouteSegment[];\r\n\tprivate routerLink_!: RouteComponent[];\r\n\tget routerLink(): RouterLink {\r\n\t\treturn this.routerLink_;\r\n\t}\r\n\tset routerLink(routerLink: RouterLink) {\r\n\t\tthis.routerLink_ = Array.isArray(routerLink) ? routerLink : [routerLink];\r\n\t\tthis.segments = this.getSegments(this.routerLink_);\r\n\t}\r\n\tgetSegments(routerLink: RouteComponent[]): RouteSegment[] {\r\n\t\t// console.log('RouterLinkDirective.getSegments', routerLink);\r\n\t\tconst segments: RouteSegment[] = [];\r\n\t\trouterLink.forEach(item => {\r\n\t\t\tif (typeof item === 'string') {\r\n\t\t\t\tconst regExp: RegExp = /([^:]+)|\\:([^\\/]+)/g;\r\n\t\t\t\tconst matches = item.matchAll(regExp);\r\n\t\t\t\tconst components = [];\r\n\t\t\t\tfor (let match of matches) {\r\n\t\t\t\t\tconst g1 = match[1];\r\n\t\t\t\t\tconst g2 = match[2];\r\n\t\t\t\t\tif (g1) {\r\n\t\t\t\t\t\tcomponents.push(g1);\r\n\t\t\t\t\t} else if (g2) {\r\n\t\t\t\t\t\tconst param: { [key: string]: any } = {};\r\n\t\t\t\t\t\tparam[g2] = null;\r\n\t\t\t\t\t\tcomponents.push(param);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsegments.push(new RouteSegment('', {}));\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn segments;\r\n\t}\r\n\tonInit() {\r\n\t\t// const { node, module } = getContext(this);\r\n\t\t// console.log('RouterLinkDirective.onInit', this.routerLink, node, module);\r\n\t\tthis.routerLink$().pipe(\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe();\r\n\t}\r\n\trouterLink$(): Observable<boolean> {\r\n\t\tconst { node } = getContext(this);\r\n\t\treturn fromEvent<Event>(node, 'click').pipe(\r\n\t\t\tmap((event) => {\r\n\t\t\t\t// console.log('RouterLinkDirective', event, this.routerLink);\r\n\t\t\t\t// !!! skipLocationChange\r\n\t\t\t\tconst navigationExtras: INavigationExtras = {\r\n\t\t\t\t\tskipLocationChange: this.skipLocationChange,\r\n\t\t\t\t\treplaceUrl: this.replaceUrl,\r\n\t\t\t\t\tstate: this.state,\r\n\t\t\t\t};\r\n\t\t\t\tRouterService.setRouterLink(this.routerLink, navigationExtras);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tonChanges() {\r\n\t\tconst { node } = getContext(this);\r\n\t\tconst routePath: RoutePath = RouterService.getPath(this.routerLink_);\r\n\t\t// console.log('RouterLinkDirective.routePath', routePath);\r\n\t\tnode.setAttribute('href', routePath.url);\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[routerLink]',\r\n\t\tinputs: ['routerLink'],\r\n\t};\r\n}\r\n\r\n/*\r\nget urlTree(): UrlTree {\r\n    return RouterService.createUrlTree(this.routerLink, {\r\n        relativeTo: this.route,\r\n        queryParams: this.queryParams,\r\n        fragment: this.fragment,\r\n        preserveQueryParams: this.preserve,\r\n        queryParamsHandling: this.queryParamsHandling,\r\n        preserveFragment: this.preserveFragment,\r\n    });\r\n}\r\n*/\r\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\nimport { RoutePath } from '../route/route-path';\nimport RouterLinkDirective from './router-link.directive';\nimport RouterService from './router.service';\n\nexport default class RouterLinkActiveDirective extends Directive {\n\trouterLinkActive!: { [key: string]: string } | string;\n\tkeys: string[] = [];\n\tonChanges() {\n\t\t// console.log('RouterLinkActive.onChanges');\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.remove.apply(node.classList, this.keys);\n\t\tlet keys: string[] = [];\n\t\tconst active = this.isActive();\n\t\tif (active) {\n\t\t\tconst object = this.routerLinkActive;\n\t\t\tif (typeof object === 'object') {\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tif (object[key]) {\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof object === 'string') {\n\t\t\t\tkeys = object.split(' ').filter(x => x.length);\n\t\t\t}\n\t\t}\n\t\tnode.classList.add.apply(node.classList, keys);\n\t\tthis.keys = keys;\n\t\t// console.log('RouterLinkActive.onChanges', active, keys);\n\t}\n\tisActive(): boolean {\n\t\tconst path: RoutePath = RouterService.getPath(this.host.routerLink);\n\t\tconst isActive: boolean = path.route?.snapshot != null;\n\t\t// console.log('RouterLinkActive.isActive', isActive, path.route);\n\t\treturn isActive;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[routerLinkActive],[[routerLinkActive]]',\n\t\thosts: { host: RouterLinkDirective },\n\t\tinputs: ['routerLinkActive'],\n\t};\n}\n","import { isPlatformBrowser, WINDOW } from 'rxcomp';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\n// !!! change boolean to void\r\nexport function transition$(callback: (complete: (result: boolean) => void) => void) {\r\n\treturn Observable.create(function (observer: Observer<boolean>) {\r\n\t\t// let subscription: Subscription;\r\n\t\ttry {\r\n\t\t\tif (isPlatformBrowser) {\r\n\t\t\t\tcallback((result: boolean) => {\r\n\t\t\t\t\tobserver.next(result);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tobserver.next(true);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tobserver.error(error);\r\n\t\t}\r\n        /*\r\n        return () => {\r\n            if (subscription) {\r\n                subscription.unsubscribe();\r\n            }\r\n        }\r\n        */\r\n\t});\r\n}\r\n// !!! should make transition specific?\r\nexport function transitionOnce() {\r\n\tsessionStorageSet_('rxcomp_transition_once_', true);\r\n}\r\nexport function transitionOnced() {\r\n\treturn sessionStorageGet_('rxcomp_transition_once_');\r\n}\r\nconst MEMORY: { [key: string]: any } = {};\r\nfunction sessionStorageGet_(key: string): any {\r\n\tlet value: any;\r\n\ttry {\r\n\t\tconst storage = WINDOW.sessionStorage;\r\n\t\tvalue = storage.getItem(key) || null;\r\n\t} catch (error) {\r\n\t\tvalue = MEMORY[key];\r\n\t}\r\n\treturn value;\r\n}\r\nfunction sessionStorageSet_(key: string, value: any): void {\r\n\ttry {\r\n\t\tconst storage = WINDOW.sessionStorage;\r\n\t\tstorage.setItem(key, value);\r\n\t} catch (error) {\r\n\t\tMEMORY[key] = value;\r\n\t}\r\n}\r\n","import { Component, Factory, getContext, IComment, IElement, IFactoryMeta, Structure } from 'rxcomp';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport View, { EnterTransition, LeaveTransition, OnceTransition, Transition } from '../core/view';\nimport { asObservable } from '../observable/observable';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { transitionOnce, transitionOnced } from '../transition/transition';\nimport RouterService from './router.service';\n\nexport default class RouterOutletStructure extends Structure {\n\tprivate route$_: ReplaySubject<RouteSnapshot | undefined> = new ReplaySubject<RouteSnapshot | undefined>(1);\n\tprivate route_?: RouteSnapshot;\n\tprivate factory_?: typeof Component;\n\tget route(): RouteSnapshot | undefined {\n\t\treturn this.route_;\n\t}\n\thost?: RouterOutletStructure;\n\toutlet!: IComment;\n\telement?: IElement;\n\tinstance?: Component;\n\tonInit() {\n\t\tthis.route$().pipe(\n\t\t\tswitchMap(snapshot => this.factory$(snapshot)),\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(() => {\n\t\t\t// console.log(`RouterOutletStructure ActivatedRoutes: [\"${RouterService.flatRoutes.filter(x => x.snapshot).map(x => x.snapshot?.extractedUrl).join('\", \"')}\"]`);\n\t\t});\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\tonChanges() {\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\troute$(): Observable<RouteSnapshot | undefined> {\n\t\tconst source: Observable<RouteSnapshot | undefined> = this.host ? this.route$_ : RouterService.route$;\n\t\treturn source.pipe(\n\t\t\tfilter((snapshot: RouteSnapshot | undefined) => {\n\t\t\t\tthis.route_ = snapshot; // !!!\n\t\t\t\tif (this.snapshot_ && snapshot && this.snapshot_.component === snapshot.component) {\n\t\t\t\t\tthis.snapshot_.next(snapshot);\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapshot_ = snapshot;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tfactory$(snapshot: RouteSnapshot | undefined): Observable<void> {\n\t\tconst { module, node } = getContext(this);\n\t\tconst factory: typeof Component | undefined = snapshot?.component;\n\t\tif (this.factory_ !== factory) {\n\t\t\tthis.factory_ = factory;\n\t\t\treturn this.onLeave$_(snapshot, this.element, this.instance).pipe(\n\t\t\t\ttap(() => {\n\t\t\t\t\tif (this.element) {\n\t\t\t\t\t\tthis.element.parentNode!.removeChild(this.element);\n\t\t\t\t\t\tmodule.remove(this.element, this);\n\t\t\t\t\t\tthis.element = undefined;\n\t\t\t\t\t\tthis.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\tif (snapshot && factory && factory.meta.template) {\n\t\t\t\t\t\tlet element: IElement = document.createElement('div');\n\t\t\t\t\t\telement.innerHTML = factory.meta.template;\n\t\t\t\t\t\tif (element.children.length === 1) {\n\t\t\t\t\t\t\telement = element.firstElementChild as IElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.appendChild(element);\n\t\t\t\t\t\tconst instance: Factory | undefined = module.makeInstance(element, factory, factory.meta.selector!, this, undefined, { route: snapshot });\n\t\t\t\t\t\tmodule.compile(element, instance);\n\t\t\t\t\t\tthis.instance = instance;\n\t\t\t\t\t\tthis.element = element;\n\t\t\t\t\t\tsnapshot.element = element;\n\t\t\t\t\t\treturn this.onOnce$_(snapshot, element, instance).pipe(\n\t\t\t\t\t\t\tswitchMap(() => {\n\t\t\t\t\t\t\t\treturn this.onEnter$_(snapshot, element, instance);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(void 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(void 0);\n\t\t}\n\t}\n\t/*\n\tprivate onEnter$__(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (instance instanceof View && element) {\n\t\t\treturn asObservable([element], instance.onEnter);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\tprivate onLeave$__(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (instance instanceof View && element) {\n\t\t\treturn asObservable([element], instance.onLeave);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\t*/\n\tprivate onOnce$_(snapshot: RouteSnapshot, element?: IElement, instance?: Component): Observable<void> {\n\t\tif (!transitionOnced() && instance instanceof View && element) {\n\t\t\ttransitionOnce();\n\t\t\tconst factory = instance.constructor as unknown as View;\n\t\t\tconst transition: OnceTransition = factory.transitions.find((x: Transition) => x instanceof OnceTransition && x.matcher(snapshot.previousRoute?.path));\n\t\t\treturn transition ? asObservable<void>([element, snapshot.previousRoute], transition.callback.bind(instance)) : of(void 0);\n\t\t} else {\n\t\t\treturn of(void 0);\n\t\t}\n\t}\n\tprivate onEnter$_(snapshot: RouteSnapshot, element?: IElement, instance?: Component): Observable<void> {\n\t\tif (instance instanceof View && element) {\n\t\t\tconst factory = instance.constructor as unknown as View;\n\t\t\tconst transition: EnterTransition = factory.transitions.find((x: Transition) => x instanceof EnterTransition && x.matcher(snapshot.previousRoute?.path));\n\t\t\treturn transition ? asObservable<void>([element, snapshot.previousRoute], transition.callback.bind(instance)) : of(void 0);\n\t\t} else {\n\t\t\treturn of(void 0);\n\t\t}\n\t}\n\tprivate onLeave$_(snapshot?: RouteSnapshot, element?: IElement, instance?: Component): Observable<void> {\n\t\tif (instance instanceof View && element) {\n\t\t\tconst factory = instance.constructor as unknown as View;\n\t\t\tconst transition: LeaveTransition = factory.transitions.find((x: Transition) => x instanceof LeaveTransition && x.matcher(snapshot?.path));\n\t\t\treturn transition ? asObservable<void>([element, snapshot], transition.callback.bind(instance)) : of(void 0);\n\t\t} else {\n\t\t\treturn of(void 0);\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'router-outlet,[router-outlet]',\n\t\thosts: { host: RouterOutletStructure },\n\t};\n}\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { LocationStrategy } from './location/location.strategy';\r\nimport { IRoute } from './route/route';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, RouterEvent } from './router/router-events';\r\nimport RouterLinkActiveDirective from './router/router-link-active.directive';\r\nimport RouterLinkDirective from './router/router-link.directive';\r\nimport RouterOutletStructure from './router/router-outlet.structure';\r\nimport RouterService from './router/router.service';\r\n\r\nconst factories: typeof Factory[] = [\r\n\tRouterOutletStructure,\r\n\tRouterLinkDirective,\r\n\tRouterLinkActiveDirective,\r\n];\r\nconst pipes: typeof Pipe[] = [\r\n];\r\n/**\r\n *  RouterModule Class.\r\n * @example\r\n * export default class AppModule extends Module {}\r\n *\r\n * AppModule.meta = {\r\n *  imports: [\r\n *   CoreModule,\r\n *   RouterModule.forRoot([\r\n *    { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n *    { path: 'index', component: IndexComponent, data: { title: 'Index' } }\r\n *   ])\r\n *  ],\r\n *  declarations: [\r\n *   IndexComponent\r\n *  ],\r\n *  bootstrap: AppComponent,\r\n * };\r\n * @extends Module\r\n */\r\nexport default class RouterModule extends Module {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t// console.log('RouterModule');\r\n\t\tRouterService.observe$.pipe(\r\n\t\t\ttap((event: RouterEvent) => {\r\n\t\t\t\tif (event instanceof NavigationEnd\r\n\t\t\t\t\t|| event instanceof NavigationCancel\r\n\t\t\t\t\t|| event instanceof NavigationError) {\r\n\t\t\t\t\tif (this.instances?.length) {\r\n\t\t\t\t\t\tconst root = this.instances[0];\r\n\t\t\t\t\t\troot.pushChanges();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe();\r\n\t\tRouterService.navigate(`${location.pathname === '' ? '/' : location.pathname}${location.search}${location.hash}`);\r\n\t}\r\n\tstatic meta: IModuleMeta = {\r\n\t\tdeclarations: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t],\r\n\t\texports: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t]\r\n\t};\r\n\tstatic forRoot(routes: IRoute[]): typeof RouterModule {\r\n\t\tRouterService.setRoutes(routes);\r\n\t\treturn this;\r\n\t}\r\n\tstatic useStrategy(locationStrategyType: typeof LocationStrategy): typeof RouterModule {\r\n\t\tRouterService.useLocationStrategy(locationStrategyType);\r\n\t\treturn this;\r\n\t}\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport enum RouteLocationStrategy {\r\n\tPath = 'path',\r\n\tHash = 'hash',\r\n}\r\nexport type RouteComponent = string | number | { [key: string]: any; };\r\nexport type RouterLink = string | RouteComponent[];\r\nexport type RouterActivator = Observable<boolean> | (() => boolean) | boolean;\r\nexport type RouterActivatorResult = Observable<boolean | RouteComponent[]> | Promise<boolean | RouteComponent[]> | boolean | RouteComponent[];\r\nexport type RouterKeyValue = { [key: string]: RouterKeyValue | string | null };\r\nexport type Params = { [key: string]: any; };\r\nexport type Data = { [key: string]: any; };\r\n","import { Component, errors$, getContext, IFactoryMeta } from 'rxcomp';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nexport default class AppComponent extends Component {\r\n\terror: any = null;\r\n\tonInit() {\r\n\t\t// console.log('AppComponent.onInit', this);\r\n\t\tconst { node } = getContext(this);\r\n\t\tnode.classList.add('init');\r\n\t\terrors$.pipe(\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe(error => {\r\n\t\t\tthis.error = error;\r\n\t\t\tthis.pushChanges();\r\n\t\t});\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[app-component]',\r\n\t};\r\n}\r\n","import { Component } from 'rxcomp';\r\nimport { ICanActivate, ICanActivateChild, ICanDeactivate, ICanLoad, RouterActivatorResult, RouteSegment, RouteSnapshot } from '../../../../src/rxcomp-router';\r\n\r\nexport class CustomActivator implements ICanActivate, ICanDeactivate<Component>, ICanActivateChild, ICanLoad {\r\n\tcanDeactivate<T>(component: T, currentRoute: RouteSnapshot): RouterActivatorResult {\r\n\t\t// console.log('canDeactivate', component, currentRoute);\r\n\t\treturn true;\r\n\t}\r\n\tcanLoad(route: RouteSnapshot, segments: RouteSegment[]): RouterActivatorResult {\r\n\t\t// console.log('canLoad', route, segments);\r\n\t\treturn true;\r\n\t}\r\n\tcanActivate(route: RouteSnapshot): RouterActivatorResult {\r\n\t\t// console.log('canActivate', route);\r\n\t\treturn ['/dashboard'];\r\n\t}\r\n\tcanActivateChild(childRoute: RouteSnapshot): RouterActivatorResult {\r\n\t\t// console.log('canActivateChild', childRoute);\r\n\t\treturn childRoute.path === 'media' ? ['files'] : true;\r\n\t}\r\n}\r\nexport const customActivator: CustomActivator = new CustomActivator();\r\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\r\n\r\nexport default class ContactsComponent extends Component {\r\n\thost!: RouterOutletStructure;\r\n\tonInit() {\r\n\t\tconst route = this.host.route;\r\n\t\tif (route) {\r\n\t\t\troute.data$.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe((data: RouterKeyValue) => {\r\n\t\t\t\tconst title = this.title = data.title as string;\r\n\t\t\t\tdocument.title = title;\r\n\t\t\t\t// this.pushChanges(); // !!not needed;\r\n\t\t\t\t// console.log('ContactsComponent', data);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[contacts-component]',\r\n\t\thosts: { host: RouterOutletStructure },\r\n\t\ttemplate: /* html */`\r\n        <div class=\"page-contacts\">\r\n            <div class=\"title\">{{title}}</div>\r\n        </div>\r\n        `,\r\n\t};\r\n}\r\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class DataComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\tcombineLatest([route.data$, route.params$]).pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((datas: RouterKeyValue[]) => {\n\t\t\t\tconst title = this.title = datas[0].title as string;\n\t\t\t\tdocument.title = title;\n\t\t\t\tthis.params = datas[1];\n\t\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t\t// console.log('DataComponent', datas);\n\t\t\t});\n\t\t}\n        /*\n        this.host.route?.data$.pipe(\n            takeUntil(this.unsubscribe$),\n        ).subscribe((data) => this.title = data.title);\n        this.host.route?.params$.pipe(\n            takeUntil(this.unsubscribe$),\n        ).subscribe((params) => this.params = params);\n        */\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[data-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-data\">\n            <div class=\"title\">{{title}}</div>\n            <div class=\"params\">{{params | json}}</div>\n        </div>\n        `,\n\t};\n}\n","import 'gsap';\nimport { IElement } from 'rxcomp';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IViewMeta, RouterKeyValue, transition$, View } from '../../../../src/rxcomp-router';\n\nexport default class DetailComponent extends View {\n\tonInit() {\n\t\t// console.log('DetailComponent.onInit', this.route);\n\t\tcombineLatest([this.route.data$, this.route.params$]).pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe((datas: RouterKeyValue[]) => {\n\t\t\tconst title = this.title = datas[0].title as string;\n\t\t\tdocument.title = title;\n\t\t\tthis.detailId = datas[1].detailId;\n\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t// console.log('DetailComponent', datas);\n\t\t});\n\t}\n\t/*\n\tonEnter(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 0 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: 1,\n\t\t\t\tease: Power3.easeInOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tonLeave(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 1 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: 1,\n\t\t\t\tease: Power3.easeInOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t*/\n\tstatic meta: IViewMeta = {\n\t\tselector: '[detail-component]',\n\t\ttemplate: /* html */`\n        <div class=\"page-detail\">\n            <div class=\"title\">Detail {{detailId}}</div>\n            <ul class=\"nav--menu\">\n                <li><a routerLink=\"media\" routerLinkActive=\"active\">Media</a></li>\n                <li><a routerLink=\"files\" routerLinkActive=\"active\">Files</a></li>\n            </ul>\n            <router-outlet></router-outlet>\n        </div>\n\t\t`,\n\t\ttransitions: {\n\t\t\t'once:': (node: IElement) => transition$(complete => {\n\t\t\t\tgsap.set(node, { opacity: 0, scale: 0.1 });\n\t\t\t\tgsap.to(node, {\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tscale: 1,\n\t\t\t\t\tduration: 1,\n\t\t\t\t\tease: Power3.easeInOut,\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tcomplete(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t\t'from:dashboard': (node: IElement) => transition$(complete => {\n\t\t\t\tgsap.set(node, { opacity: 0, rotate: '-180deg' });\n\t\t\t\tgsap.to(node, {\n\t\t\t\t\topacity: 1,\n\t\t\t\t\trotate: 0,\n\t\t\t\t\tduration: 1,\n\t\t\t\t\tease: Power3.easeInOut,\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tcomplete(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t\t'enter:': (node: IElement) => transition$(complete => {\n\t\t\t\tgsap.set(node, { opacity: 0 });\n\t\t\t\tgsap.to(node, {\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: 1,\n\t\t\t\t\tease: Power3.easeInOut,\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tcomplete(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t\t'leave:': (node: IElement) => transition$(complete => {\n\t\t\t\tgsap.set(node, { opacity: 1 });\n\t\t\t\tgsap.to(node, {\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tduration: 1,\n\t\t\t\t\tease: Power3.easeInOut,\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tcomplete(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\t};\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\r\n\r\nexport default class IndexComponent extends Component {\r\n\thost!: RouterOutletStructure;\r\n\tonInit() {\r\n\t\tconst route = this.host.route;\r\n\t\tif (route) {\r\n\t\t\troute.data$.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe((data: RouterKeyValue) => {\r\n\t\t\t\tconst title = this.title = data.title as string;\r\n\t\t\t\tdocument.title = title;\r\n\t\t\t\t// this.pushChanges(); // !!not needed;\r\n\t\t\t\t// console.log('IndexComponent', data);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[index-component]',\r\n\t\thosts: { host: RouterOutletStructure },\r\n\t\ttemplate: /* html */`\r\n        <div class=\"page-index\">\r\n            <div class=\"title\">{{title}}</div>\r\n        </div>\r\n        `,\r\n\t};\r\n}\r\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { RouterOutletStructure } from '../../../../src/rxcomp-router';\r\n\r\nexport default class NotFoundComponent extends Component {\r\n\thost!: RouterOutletStructure;\r\n\tonInit() {\r\n\t\t// console.log('NotFoundComponent.onInit');\r\n\t\tdocument.title = 'Page Not Found';\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[not-found-component]',\r\n\t\ttemplate: /* html */`\r\n        <div class=\"page-not-found\">\r\n            <div class=\"title\">Not Found</div>\r\n        </div>\r\n        `,\r\n\t};\r\n}\r\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\r\n\r\nexport default class SubComponent extends Component {\r\n\thost!: RouterOutletStructure;\r\n\tonInit() {\r\n\t\tconst route = this.host.route;\r\n\t\tif (route) {\r\n\t\t\troute.data$.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe((data: RouterKeyValue) => {\r\n\t\t\t\tconst title = this.title = data.title as string;\r\n\t\t\t\tdocument.title = title;\r\n\t\t\t\t// this.pushChanges(); // !!not needed;\r\n\t\t\t\t// console.log('SubComponent', data);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[sub-component]',\r\n\t\thosts: { host: RouterOutletStructure },\r\n\t\ttemplate: /* html */`\r\n        <div class=\"page-sub\">\r\n            <div class=\"title\">{{title}}</div>\r\n        </div>\r\n        `,\r\n\t};\r\n}\r\n","import { CoreModule, IModuleMeta, Module } from 'rxcomp';\r\nimport { LocationStrategyHash, RouterModule } from '../../../src/rxcomp-router';\r\nimport AppComponent from './app.component';\r\nimport { customActivator } from './custom-activator/custom-activator';\r\nimport ContactsComponent from './pages/contacts.component';\r\nimport DataComponent from './pages/data.component';\r\nimport DetailComponent from './pages/detail.component';\r\nimport IndexComponent from './pages/index.component';\r\nimport NotFoundComponent from './pages/not-found.component';\r\nimport SubComponent from './pages/sub.component';\r\n\r\nexport default class AppModule extends Module {\r\n\tstatic meta: IModuleMeta = {\r\n\t\timports: [\r\n\t\t\tCoreModule,\r\n\t\t\tRouterModule.forRoot([\r\n\t\t\t\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n\t\t\t\t{ path: 'dashboard', component: IndexComponent, data: { title: 'Dashboard' } },\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: 'dashboard/:detailId', component: DetailComponent, data: { title: 'Detail' },\r\n\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t{ path: 'media', component: SubComponent, data: { title: 'Media' } },\r\n\t\t\t\t\t\t{ path: 'files', component: SubComponent, data: { title: 'Files' } }\r\n\t\t\t\t\t],\r\n\t\t\t\t\tcanActivateChild: [customActivator],\r\n\t\t\t\t},\r\n\t\t\t\t{ path: 'data/:data', component: DataComponent, data: { title: 'Data' } },\r\n\t\t\t\t{ path: 'contacts', component: ContactsComponent, data: { title: 'Contacts' }, canActivate: [customActivator] },\r\n\t\t\t\t{ path: '**', component: NotFoundComponent },\r\n\t\t\t]).useStrategy(LocationStrategyHash),\r\n\t\t],\r\n\t\tdeclarations: [\r\n\t\t\tIndexComponent,\r\n\t\t\tDataComponent,\r\n\t\t\tDetailComponent,\r\n\t\t\tContactsComponent,\r\n\t\t],\r\n\t\tbootstrap: AppComponent,\r\n\t};\r\n}\r\n","import { Browser } from 'rxcomp';\r\nimport AppModule from './app.module';\r\n\r\nBrowser.bootstrap(AppModule);\r\n"]}