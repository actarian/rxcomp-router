{"version":3,"sources":["www/browser/src/main.browser.ts","../../src/core/view.ts","../../src/location/location.strategy.ts","../../src/route/route-activators.ts","../../src/route/route-segment.ts","../../src/route/route.ts","../../src/route/route-path.ts","../../src/route/route-snapshot.ts","../../src/router/router-events.ts","../../src/router/router.service.ts","../../src/router/router-link.directive.ts","../../src/router/router-link-active.directive.ts","../../src/router/router-outlet.structure.ts","../../src/router.module.ts","../../src/router.types.ts","../../src/transition/transition.ts","../../www/browser/src/app.component.ts","../../www/browser/src/custom-activator/custom-activator.ts","../../www/browser/src/pages/contacts.component.ts","../../www/browser/src/pages/data.component.ts","../../www/browser/src/pages/detail.component.ts","../../www/browser/src/pages/index.component.ts","../../www/browser/src/pages/not-found.component.ts","../../www/browser/src/pages/sub.component.ts","../../www/browser/src/app.module.ts","../../www/browser/src/main.browser.ts"],"names":["rxcomp","rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","toString","call","slice","name","from","test","_unsupportedIterableToArray","done","TypeError","next","bind","View","_Component","this","_proto","onEnter","node","of","onExit","Component","LocationStrategy","serializeLink","routerLink","_this","url","map","x","encodeParams","join","serializeUrl","serialize","routePath","prefix","path","search","hash","resolve","segments","params","_step","query","_iterator","matchAll","match","g1","g2","g3","substring","split","resolveParams","routeSegments","_this2","segment","index","decodeParams","encoded","decoded","indexOf","json","window","atob","JSON","parse","error","Number","Serializer","encode","encodeJson","btoa","console","log","decodeSegment","s","decodeString","replace","encodeSegment","encodeString","decodeURIComponent","encodeURIComponent","getPath","getUrl","setHistory","popped","isPlatformBrowser","history","pushState","title","document","replaceState","undefined","LocationStrategyPath","_LocationStrategy","_proto2","_step2","_iterator2","LocationStrategyHash","_LocationStrategy2","_proto3","_this3","_step3","_iterator3","isPromise","Promise","makeObserver$_","callback","Observable","observer","subscription","result","isObservable","subscribe","complete","then","Error","unsubscribe","RouteSegment","Route","options","pathMatch","relative","canDeactivate","canLoad","canActivate","canActivateChild","assign","activator","component","currentRoute","route","childRoute","children","iRoute","parent","matcher","RegExp","matchers","param","regexp","RoutePath","snapshot","locationStrategy","get","url_","set","routeSegments_","RouteSnapshot","data$","ReplaySubject","params$","queryParams$","data","queryParams","RouterEvent","NavigationStart","_RouterEvent","RoutesRecognized","_RouterEvent2","GuardsCheckStart","_RouterEvent3","ChildActivationStart","_RouterEvent4","ActivationStart","_RouterEvent5","GuardsCheckEnd","_RouterEvent6","ResolveStart","_RouterEvent7","ResolveEnd","_RouterEvent8","ActivationEnd","_RouterEvent9","ChildActivationEnd","_RouterEvent10","RouteConfigLoadStart","_RouterEvent11","RouteConfigLoadEnd","_RouterEvent12","NavigationEnd","_RouterEvent13","NavigationCancel","_RouterEvent14","NavigationError","_RouterEvent15","RouterService","setRoutes","routes","observe$","makeObserve$_","route$","events$","setRouterLink","extras","trigger","navigate","findRoute","initialUrl","findRouteByUrl","resolvedRoute","getFlatRoutes_","find","urlAfterRedirects","redirectTo","lastPath","r","unshift","extractedUrl","useLocationStrategy","locationStrategyType","locationStrategy_","reduceRoutes","reduce","p","c","resolveRoutes_","childRoutes","resolveRoute_","_route$children","remainUrl","makeActivatorResponse$_","event","activators","combineLatest","pipe","values","cancelEvent","reason","stateEvents$","merge","fromEvent","location","pathname","shareReplay","switchMap","instance","makeCanDeactivateResponse$_","nextEvent","makeCanLoadResponse$_","routeActivators","reduceChildRouteActivators_","makeCanActivateChildResponse$_","makeCanActivateResponse$_","tap","_currentRoute$childre","_source$extractedUrl","_source$remainUrl","currentSnapshot","snapshots","getFlatSnapshots_","clearRoutes_","catchError","RouterLinkDirective","_Directive","getSegments","item","components","onInit","getContext","takeUntil","unsubscribe$","navigationExtras","skipLocationChange","replaceUrl","state","preventDefault","onChanges","routerLink_","setAttribute","Directive","selector","inputs","RouterLinkActiveDirective","classList","remove","isActive","routerLinkActive","add","_path$route","host","hosts","RouterOutletStructure","_Structure","route$_","_this$host$route","factory$","_this$host$route2","route_","snapshot_","_this4","_getContext","module","factory","factory_","onExit$_","element","parentNode","removeChild","meta","template","createElement","innerHTML","firstElementChild","appendChild","makeInstance","compile","onEnter$_","asObservable_","Structure","args","RouteLocationStrategy","factories","pipes","RouterModule","_Module","_this$instances","instances","pushChanges","forRoot","useStrategy","Module","transition$","declarations","concat","exports","AppComponent","errors$","customActivator","CustomActivator","ContactsComponent","DataComponent","datas","DetailComponent","_View","detailId","gsap","opacity","to","duration","ease","Power3","easeInOut","onComplete","IndexComponent","NotFoundComponent","SubComponent","AppModule","imports","CoreModule","bootstrap","Browser"],"mappings":"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","file":"docs\\js\\main.min.js","sourcesContent":[null,"\nimport { Component, IElement } from 'rxcomp';\nimport { Observable, of } from 'rxjs';\nimport { RouteSnapshot } from '../route/route-snapshot';\n\nexport default class View extends Component {\n\troute!: RouteSnapshot;\n\tonEnter(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n\tonExit(node: IElement): Observable<boolean> | Promise<boolean> | (() => boolean) | boolean { return of(true); }\n}\n","import { encodeJson, isPlatformBrowser, Serializer } from 'rxcomp';\nimport { IRoutePath } from '../route/route-path';\nimport { RouterKeyValue, RouterLink } from '../router.types';\nimport { RouteSegment } from '../rxcomp-router';\n\nexport interface ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string;\n\tserializeUrl(url: string): string;\n\tserialize(routePath: IRoutePath): string;\n\tresolve(url: string, target: IRoutePath): IRoutePath;\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any };\n\tdecodeParams(encoded: string | null): any | null;\n\tencodeParams(value: any): string | null;\n\tdecodeSegment(s: string): string;\n\tencodeSegment(s: string): string;\n\tdecodeString(s: string): string;\n\tencodeString(s: string): string;\n\tgetPath(url: string): string;\n\tgetUrl(url: string, params?: URLSearchParams): string;\n\tsetHistory(url: string, params?: URLSearchParams, popped?: boolean): void;\n}\n\nexport class LocationStrategy implements ILocationStrategy {\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\treturn url;\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tresolveParams(path: string, routeSegments: RouteSegment[]): { [key: string]: any } {\n\t\tconst segments: string[] = path.split('/').filter(x => x !== '');\n\t\tconst params: RouterKeyValue = {};\n\t\trouteSegments.forEach((segment: RouteSegment, index: number) => {\n\t\t\t// console.log('segment.params', segment.params);\n\t\t\tconst keys: string[] = Object.keys(segment.params);\n\t\t\tif (keys.length) {\n\t\t\t\tparams[keys[0]] = this.decodeParams(segments[index]);\n\t\t\t}\n\t\t});\n\t\treturn params;\n\t}\n\tdecodeParams(encoded: string | null = null): any | null {\n\t\tlet decoded: any | null = encoded;\n\t\tif (encoded) {\n\t\t\tif (encoded.indexOf(';') === 0) {\n\t\t\t\ttry {\n\t\t\t\t\tconst json = window.atob(encoded.substring(1, encoded.length));\n\t\t\t\t\t// const json = encoded;\n\t\t\t\t\tdecoded = JSON.parse(json);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// console.log('decodeParam_.error', error);\n\t\t\t\t\tdecoded = encoded;\n\t\t\t\t}\n\t\t\t} else if (Number(encoded).toString() === encoded) {\n\t\t\t\tdecoded = Number(encoded);\n\t\t\t}\n\t\t}\n\t\treturn decoded;\n\t}\n\tencodeParams(value: any): string | null {\n\t\tlet encoded: string | null = null;\n\t\ttry {\n\t\t\tif (typeof value === 'object') {\n\t\t\t\t// const json = JSON.stringify(value);\n\t\t\t\tconst json = Serializer.encode<string>(value, [encodeJson]) || '';\n\t\t\t\tencoded = ';' + window.btoa(json);\n\t\t\t\t// encoded = json;\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tencoded = value.toString();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('encodeParam__.error', error);\n\t\t}\n\t\treturn encoded;\n\t}\n\tdecodeSegment(s: string): string {\n\t\treturn this.decodeString(s.replace(/%28/g, '(').replace(/%29/g, ')').replace(/\\&/gi, '%26'));\n\t}\n\tencodeSegment(s: string): string {\n\t\treturn this.encodeString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n\t}\n\tdecodeString(s: string): string {\n\t\treturn decodeURIComponent(s.replace(/\\@/g, '%40').replace(/\\:/gi, '%3A').replace(/\\$/g, '%24').replace(/\\,/gi, '%2C'));\n\t}\n\tencodeString(s: string): string {\n\t\treturn encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n\t}\n\tgetPath(url: string): string {\n\t\treturn url;\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${url}${params ? '?' + params.toString() : ''}`;\n\t}\n\tsetHistory(url: string, params?: URLSearchParams, popped?: boolean): void {\n\t\tif (isPlatformBrowser && window.history && window.history.pushState) {\n\t\t\tconst title = document.title;\n\t\t\turl = this.getUrl(url, params);\n\t\t\t// !!!\n\t\t\t// const state = params ? params.toString() : '';\n\t\t\t// console.log(state);\n\t\t\tif (popped) {\n\t\t\t\twindow.history.replaceState(undefined, title, url);\n\t\t\t} else {\n\t\t\t\twindow.history.pushState(undefined, title, url);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class LocationStrategyPath extends LocationStrategy implements ILocationStrategy {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.path}${routePath.search}${routePath.hash}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tpath = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\thash = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path;\n\t\tquery = query;\n\t\thash = hash.substring(1, hash.length);\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n}\n\nexport class LocationStrategyHash extends LocationStrategy implements ILocationStrategy {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tserializeLink(routerLink: RouterLink): string {\n\t\tconst url: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.encodeParams(x);\n\t\t}).join('/');\n\t\treturn this.serializeUrl(url);\n\t}\n\tserializeUrl(url: string): string {\n\t\tconst path: IRoutePath = this.resolve(url, {});\n\t\treturn this.serialize(path);\n\t}\n\tserialize(routePath: IRoutePath): string {\n\t\treturn `${routePath.prefix}${routePath.search}${routePath.hash}${routePath.path}`;\n\t}\n\tresolve(url: string, target: IRoutePath = {}): IRoutePath {\n\t\tlet prefix: string = '';\n\t\tlet path: string = '';\n\t\tlet query: string = '';\n\t\tlet search: string = '';\n\t\tlet hash: string = '#';\n\t\tlet segments: string[];\n\t\tlet params: { [key: string]: any };\n\t\tconst regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#.*)$/gm;\n\t\tconst matches = url.matchAll(regExp);\n\t\tfor (let match of matches) {\n\t\t\tconst g1 = match[1];\n\t\t\tconst g2 = match[2];\n\t\t\tconst g3 = match[3];\n\t\t\tif (g1) {\n\t\t\t\tprefix = g1;\n\t\t\t}\n\t\t\tif (g2) {\n\t\t\t\tquery = g2;\n\t\t\t}\n\t\t\tif (g3) {\n\t\t\t\tpath = g3;\n\t\t\t}\n\t\t}\n\t\tprefix = prefix;\n\t\tpath = path.substring(1, path.length);\n\t\thash = hash;\n\t\tsearch = query.substring(1, query.length);\n\t\tsegments = path.split('/').filter(x => x !== '');\n\t\tparams = {};\n\t\ttarget.prefix = prefix;\n\t\ttarget.path = path;\n\t\ttarget.query = query;\n\t\ttarget.hash = hash;\n\t\ttarget.search = search;\n\t\ttarget.segments = segments;\n\t\ttarget.params = params;\n\t\t// console.log('resolvePath_', url, prefix, path, query, search, hash, segments, params);\n\t\treturn target;\n\t}\n\tgetPath(url: string): string {\n\t\tif (url.indexOf(`/#`) === -1) {\n\t\t\treturn `/#${url}`;\n\t\t} else {\n\t\t\treturn url;\n\t\t}\n\t}\n\tgetUrl(url: string, params?: URLSearchParams): string {\n\t\treturn `${params ? '?' + params.toString() : ''}${this.getPath(url)}`;\n\t}\n}\n","import { isObservable, Observable, Observer, Subscription } from 'rxjs';\nimport { RouteComponent, RouterActivatorResult } from '../router.types';\nimport { RouteSegment } from './route-segment';\nimport { RouteSnapshot } from './route-snapshot';\n\nexport interface ICanDeactivate<T> {\n\tcanDeactivate(component: T, currentRoute: RouteSnapshot): RouterActivatorResult\n}\n\nexport interface ICanLoad {\n\tcanLoad(route: RouteSnapshot, segments: RouteSegment[]): RouterActivatorResult\n}\n\nexport interface ICanActivate {\n\tcanActivate(route: RouteSnapshot): RouterActivatorResult\n}\n\nexport interface ICanActivateChild {\n\tcanActivateChild(childRoute: RouteSnapshot): RouterActivatorResult\n}\n\nexport function mapCanDeactivate$_<T>(activator: ICanDeactivate<T>): (component: T, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canDeactivate$(component: T, currentRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canDeactivate(component, currentRoute));\n\t};\n}\nexport function mapCanLoad$_(activator: ICanLoad): (route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]> {\n\treturn function canLoad$$(route: RouteSnapshot, segments: RouteSegment[]): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canLoad(route, segments));\n\t};\n}\nexport function mapCanActivate$_(activator: ICanActivate): (route: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canActivate$(route: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canActivate(route));\n\t};\n}\nexport function mapCanActivateChild$_(activator: ICanActivateChild): (childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]> {\n\treturn function canActivateChild$(childRoute: RouteSnapshot): Observable<boolean | RouteComponent[]> {\n\t\treturn makeObserver$_(() => activator.canActivateChild(childRoute));\n\t};\n}\nexport function isPromise<T>(object: any): object is Promise<T> {\n\treturn object instanceof Promise || (typeof object === 'object' && 'then' in object && typeof object['then'] === 'function');\n}\n\nfunction makeObserver$_(callback: () => RouterActivatorResult) {\n\treturn Observable.create(function (observer: Observer<boolean | RouteComponent[]>) {\n\t\tlet subscription: Subscription;\n\t\ttry {\n\t\t\tlet result: RouterActivatorResult = callback();\n\t\t\tif (isObservable(result)) {\n\t\t\t\tsubscription = result.subscribe(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (isPromise<boolean | RouteComponent[]>(result)) {\n\t\t\t\t(result as Promise<boolean | RouteComponent[]>).then(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (typeof result === 'boolean' || Array.isArray(result)) {\n\t\t\t\tobserver.next(result);\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tobserver.error(new Error('invalid value'));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n\t\treturn () => {\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t}\n\t\t}\n\t});\n}\n\n","import { RouterKeyValue } from '../router.types';\n\nexport class RouteSegment {\n\tpath: string;\n\tparams: any;\n\tconstructor(path: string, params: RouterKeyValue = {}) {\n\t\tthis.path = path;\n\t\tthis.params = params;\n\t}\n    /*\n    toString(): string {\n        return `${encodeSegment_(this.path)}${encodeParams_(this.params)}`;\n    }\n    */\n}\n/*\nexport function encodeParams_(params: RouterKeyValue): string {\n    // !!! array?\n    return Object.keys(params).map(key => `;${encodeSegment_(key)}=${typeof params[key] === 'string' ? encodeSegment_(params[key] as string) : encodeParams_(params[key] as RouterKeyValue)}`).join('');\n}\nexport function encodeSegment_(s: string): string {\n    return encodeString_(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nexport function encodeString_(s: string): string {\n    return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\nexport function decodeParams_(encodedParams: string): RouterKeyValue {\n    const params: RouterKeyValue = {} as RouterKeyValue;\n    const keyValues = encodedParams.split(';');\n    keyValues.forEach((x: string) => {\n        const kvs: string[] = x.split('=');\n        if (kvs.length === 2) {\n            params[kvs[0]] = kvs[1];\n        }\n    });\n    return params;\n}\nexport function decodeParams__<T>(encoded: string | null = null): T | null {\n    let decoded = null;\n    if (encoded) {\n        try {\n            const json = window.atob(encoded);\n            decoded = JSON.parse(json) as T;\n        } catch (error) {\n            console.log('decodeParam_.error', error);\n        }\n    }\n    return decoded;\n}\nexport function encodeParams__(value: any): string | null {\n    let encoded = null;\n    try {\n        const json = JSON.stringify(value);\n        encoded = window.btoa(json);\n    } catch (error) {\n        console.log('encodeParam__.error', error);\n    }\n    return encoded;\n}\nexport function resolveParams__(url: string, routeSegments: RouteSegment[]): RouterKeyValue {\n    // console.log('resolveParams__.resolvedRoute.routeSegments', routeSegments);\n    const path: string = url.split('?')[0];\n    const query: string = url.substring(path.length, url.length);\n    const search: string = query.split('#')[0];\n    const hash: string = query.substring(search.length, query.length);\n    const segments: string[] = path.split('/').filter(x => x !== '');\n    const params: RouterKeyValue = {};\n    routeSegments.forEach((segment: RouteSegment, index: number) => {\n        // console.log('segment.params', segment.params);\n        const keys: string[] = Object.keys(segment.params);\n        if (keys.length) {\n            params[keys[0]] = decodeParams_(segments[index]);\n        }\n    });\n    return params;\n}\n*/\n","import { Component, Factory } from 'rxcomp';\nimport { Observable } from 'rxjs';\nimport { Data, RouteComponent, RouterKeyValue } from '../router.types';\nimport { ICanActivate, ICanActivateChild, ICanDeactivate, ICanLoad, mapCanActivate$_, mapCanActivateChild$_, mapCanDeactivate$_, mapCanLoad$_ } from './route-activators';\nimport { RouteSegment } from './route-segment';\nimport { RouteSnapshot } from './route-snapshot';\n\nexport type IRoutes = IRoute[];\nexport type Routes = Route[];\n\nexport interface INavigationExtras {\n\trelativeTo?: RouteSnapshot | null;\n\tqueryParams?: RouterKeyValue; // Params | null;\n\tfragment?: string;\n\tpreserveQueryParams?: boolean;\n\tqueryParamsHandling?: any; // QueryParamsHandling | null;\n\tpreserveFragment?: boolean;\n\tskipLocationChange?: boolean;\n\treplaceUrl?: boolean;\n\tstate?: { [key: string]: any };\n}\n\nexport interface IBaseRoute {\n\tpath?: string;\n\tpathMatch?: 'prefix' | 'full';\n\tcomponent?: typeof Component;\n\t// matcher?: UrlMatcher;\n\tmatcher?: RegExp;\n\tredirectTo?: string;\n\toutlet?: string;\n\tchildren?: IRoutes | Routes;\n\t// children?: IRoute[];\n\tinitialUrl?: string;\n\turlAfterRedirects?: string;\n\textractedUrl?: string;\n\tremainUrl?: string;\n\t// resolve?: ResolveData;\n\t// loadChildren?: LoadChildren;\n\t// runGuardsAndResolvers?: RunGuardsAndResolvers;\n\tdata?: Data;\n\tparams?: RouterKeyValue;\n\tqueryParams?: RouterKeyValue;\n}\n\nexport interface IRoute extends IBaseRoute {\n\tcanActivate?: ICanActivate[];\n\tcanActivateChild?: ICanActivateChild[];\n\tcanDeactivate?: ICanDeactivate<Component>[];\n\tcanLoad?: ICanLoad[];\n}\n\nexport class Route implements IBaseRoute {\n\tpath!: string;\n\tpathMatch: 'prefix' | 'full' = 'prefix';\n\tcomponent!: typeof Component; // import !!!\n\tmatcher: RegExp;\n\tredirectTo?: string;\n\tsegments: RouteSegment[];\n\trelative: boolean = true;\n\tchildren?: Routes;\n\tparent?: Route;\n\tsnapshot?: RouteSnapshot;\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tconstructor(options?: IRoute) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.canDeactivate = options.canDeactivate ? options.canDeactivate.map(x => mapCanDeactivate$_<Component>(x)) : [];\n\t\t\tthis.canLoad = options.canLoad ? options.canLoad.map(x => mapCanLoad$_(x)) : [];\n\t\t\tthis.canActivate = options.canActivate ? options.canActivate.map(x => mapCanActivate$_(x)) : [];\n\t\t\tthis.canActivateChild = options.canActivateChild ? options.canActivateChild.map(x => mapCanActivateChild$_(x)) : [];\n\t\t}\n\t\tif (this.children) {\n\t\t\tthis.children = this.children.map((iRoute: IBaseRoute) => {\n\t\t\t\tconst route = new Route(iRoute);\n\t\t\t\troute.parent = this;\n\t\t\t\treturn route;\n\t\t\t});\n\t\t}\n\t\tconst segments: RouteSegment[] = [];\n\t\tif (this.path === '**') {\n\t\t\tsegments.push(new RouteSegment(this.path));\n\t\t\tthis.matcher = new RegExp('^.*$');\n\t\t} else {\n\t\t\tconst matchers: string[] = [`^(\\.\\.\\/|\\.\\/|\\/\\/|\\/)?`];\n\t\t\tconst regExp: RegExp = /(^\\.\\.\\/|\\.\\/|\\/\\/|\\/)|([^:|\\/]+)\\/?|\\:([^\\/]+)\\/?/g;\n\t\t\tconst matches = this.path.matchAll(regExp);\n\t\t\tfor (let match of matches) {\n\t\t\t\tconst g1 = match[1];\n\t\t\t\tconst g2 = match[2];\n\t\t\t\tconst g3 = match[3];\n\t\t\t\tif (g1) {\n\t\t\t\t\tthis.relative = !(g1 === '//' || g1 === '/');\n\t\t\t\t} else if (g2) {\n\t\t\t\t\tmatchers.push(g2);\n\t\t\t\t\tsegments.push(new RouteSegment(g2));\n\t\t\t\t} else if (g3) {\n\t\t\t\t\tmatchers.push('(\\/[^\\/]+)');\n\t\t\t\t\tconst param: { [key: string]: any } = {};\n\t\t\t\t\tparam[g3] = null;\n\t\t\t\t\tsegments.push(new RouteSegment('', param));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.pathMatch === 'full') {\n\t\t\t\tmatchers.push('$');\n\t\t\t}\n\t\t\tconst regexp: string = matchers.join('');\n\t\t\tthis.matcher = new RegExp(regexp);\n\t\t}\n\t\tthis.segments = segments;\n\t}\n}\n","import { encodeJson, Serializer } from 'rxcomp';\nimport { ILocationStrategy, LocationStrategy } from '../location/location.strategy';\nimport { RouterKeyValue } from '../router.types';\nimport { Route } from './route';\nimport { RouteSegment } from './route-segment';\n\nexport interface IRoutePath {\n\turl?: string;\n\tprefix?: string;\n\tpath?: string;\n\tquery?: string;\n\tsearch?: any;\n\thash?: any;\n\tparams?: { [key: string]: any };\n\tsegments?: string[];\n}\n\nexport class RoutePath implements IRoutePath {\n\tprivate url_!: string;\n\tget url(): string {\n\t\treturn this.url_;\n\t}\n\tset url(url: string) {\n\t\t// console.log(this.url_, url);\n\t\tif (this.url_ !== url) {\n\t\t\tthis.locationStrategy.resolve(url, this);\n\t\t\t// resolvePath_(url, this, this.locationStrategy);\n\t\t\tthis.url_ = this.locationStrategy.serialize(this);\n\t\t\t// serializeUrl_(this, this.locationStrategy);\n\t\t\t// this.url_ = url; // !!! serialize url;\n\t\t\t// console.log('url_', this.url_);\n\t\t}\n\t}\n\tprivate routeSegments_!: RouteSegment[];\n\tget routeSegments(): RouteSegment[] {\n\t\treturn this.routeSegments_;\n\t}\n\tset routeSegments(routeSegments: RouteSegment[]) {\n\t\tif (this.routeSegments_ !== routeSegments) {\n\t\t\tthis.routeSegments_ = routeSegments;\n\t\t\t// !!! const path: string = this.locationStrategy === RouteLocationStrategy.Hash ? this.hash : this.path;\n\t\t\t// this.params = resolveParams_(this.path, routeSegments);\n\t\t\tthis.params = this.locationStrategy.resolveParams(this.path, routeSegments);\n\t\t}\n\t}\n\tget remainUrl(): string {\n\t\treturn this.query + this.hash;\n\t}\n\tprefix: string = '';\n\tpath: string = '';\n\tquery: string = '';\n\tsearch: string = '';\n\thash: string = '';\n\tparams!: { [key: string]: any };\n\tsegments!: string[];\n\troute?: Route;\n\tlocationStrategy: ILocationStrategy;\n\tconstructor(url: string = '', routeSegments: RouteSegment[] = [], snapshot?: Route, locationStrategy?: ILocationStrategy) {\n\t\tthis.locationStrategy = locationStrategy || new LocationStrategy();\n\t\tthis.url = url;\n\t\tthis.routeSegments = routeSegments;\n\t\tthis.route = snapshot;\n\t}\n    /*\n    toString(): string {\n        return this.url_;\n        // return `${encodeSegment_(this.path)}${encodeParams_(this.params)}`;\n    }\n    */\n}\n\n/*\n\nexport function serializeUrl_(target: IRoutePath, locationStrategy: ILocationStrategy): string {\n    // return `${target.path!}${target.search}${target.hash}`;\n    return locationStrategy.serialize(target);\n}\n\n// !!! todo: resolvePath_ in LocationStrategy interface\n\nexport function resolvePath_(url: string, target: IRoutePath = {}, locationStrategy: ILocationStrategy): IRoutePath {\n    return locationStrategy.resolve(url, target);\n}\n\nexport function resolveStrategyPath_(url: string, target: IRoutePath = {}): IRoutePath {\n    let path: string = '';\n    let query: string = '';\n    let hash: string = '';\n    const regExp: RegExp = /^([^\\?|\\#]*)?(\\?[^\\#]*)?(\\#[^\\#]*?)?$/gm;\n    const matches = url.matchAll(regExp);\n    for (let match of matches) {\n        const g1 = match[1];\n        const g2 = match[2];\n        const g3 = match[3];\n        if (g1) {\n            path = g1;\n        }\n        if (g2) {\n            query = g2;\n        }\n        if (g3) {\n            hash = g3;\n        }\n    }\n    target.path = path;\n    target.query = query;\n    target.hash = hash.substring(1, hash.length);\n    target.search = query.substring(1, query.length);\n    // let search: string = target.search = query.substring(1, query.length);\n    // const path: string = target.path = url.split('?')[0];\n    // const query: string = target.query = url.substring(path.length, url.length);\n    // const search: string = target.search = query.split('#')[0];\n    // const hash: string = target.hash = query.substring(search.length, query.length);\n    target.segments = path.split('/').filter(x => x !== '');\n    target.params = {};\n    // console.log('resolvePath_', url, path, query, target.search, hash, target.segments, target.params);\n    return target;\n}\nexport function resolveStrategyHash_(url: string, target: IRoutePath = {}): IRoutePath {\n    let path: string = '';\n    let query: string = '';\n    let hash: string = '';\n    const regExp: RegExp = /^(\\/)?(\\?[^\\#]*)?(\\#.*)$/gm;\n    const matches = url.matchAll(regExp);\n    for (let match of matches) {\n        const g1 = match[1];\n        const g2 = match[2];\n        const g3 = match[3];\n        if (g1) {\n            path = g1;\n        }\n        if (g2) {\n            query = g2;\n        }\n        if (g3) {\n            hash = g3;\n        }\n    }\n    target.path = path;\n    target.query = query;\n    target.hash = hash.substring(1, hash.length);\n    target.search = query.substring(1, query.length);\n    // let search: string = target.search = query.substring(1, query.length);\n    // const path: string = target.path = url.split('?')[0];\n    // const query: string = target.query = url.substring(path.length, url.length);\n    // const search: string = target.search = query.split('#')[0];\n    // const hash: string = target.hash = query.substring(search.length, query.length);\n    target.segments = hash.split('/').filter(x => x !== '');\n    target.params = {};\n    // console.log('resolvePath_', url, path, query, search, hash, segments, params);\n    return target;\n}\n*/\n\nexport function resolveParams_(path: string, routeSegments: RouteSegment[]): { [key: string]: any } {\n\tconst segments: string[] = path.split('/').filter(x => x !== '');\n\tconst params: RouterKeyValue = {};\n\trouteSegments.forEach((segment: RouteSegment, index: number) => {\n\t\t// console.log('segment.params', segment.params);\n\t\tconst keys: string[] = Object.keys(segment.params);\n\t\tif (keys.length) {\n\t\t\tparams[keys[0]] = decodeParams_(segments[index]);\n\t\t}\n\t});\n\treturn params;\n}\nexport function decodeParams_(encoded: string | null = null): any | null {\n\tlet decoded: any | null = encoded;\n\tif (encoded) {\n\t\tif (encoded.indexOf(';') === 0) {\n\t\t\ttry {\n\t\t\t\tconst json = window.atob(encoded.substring(1, encoded.length));\n\t\t\t\t// const json = encoded;\n\t\t\t\tdecoded = JSON.parse(json);\n\t\t\t} catch (error) {\n\t\t\t\t// console.log('decodeParam_.error', error);\n\t\t\t\tdecoded = encoded;\n\t\t\t}\n\t\t} else if (Number(encoded).toString() === encoded) {\n\t\t\tdecoded = Number(encoded);\n\t\t}\n\t}\n\treturn decoded;\n}\nexport function encodeParams_(value: any): string | null {\n\tlet encoded: string | null = null;\n\ttry {\n\t\tif (typeof value === 'object') {\n\t\t\t// const json = JSON.stringify(value);\n\t\t\tconst json = Serializer.encode<string>(value, [encodeJson]) || '';\n\t\t\tencoded = ';' + window.btoa(json);\n\t\t\t// encoded = json;\n\t\t} else if (typeof value === 'number') {\n\t\t\tencoded = value.toString();\n\t\t}\n\t} catch (error) {\n\t\tconsole.log('encodeParam__.error', error);\n\t}\n\treturn encoded;\n}\nexport function decodeSegment_(s: string): string {\n\treturn decodeString_(s.replace(/%28/g, '(').replace(/%29/g, ')').replace(/\\&/gi, '%26'));\n}\nexport function encodeSegment_(s: string): string {\n\treturn encodeString_(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nexport function decodeString_(s: string): string {\n\treturn decodeURIComponent(s.replace(/\\@/g, '%40').replace(/\\:/gi, '%3A').replace(/\\$/g, '%24').replace(/\\,/gi, '%2C'));\n}\nexport function encodeString_(s: string): string {\n\treturn encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/*\nexport function encodeParams_(params: RouterKeyValue): string {\n    // !!! array?\n    return Object.keys(params).map(key => `;${encodeSegment_(key)}=${typeof params[key] === 'string' ? encodeSegment_(params[key] as string) : encodeParams_(params[key] as RouterKeyValue)}`).join('');\n}\nexport function decodeParams_(encodedParams: string): RouterKeyValue {\n    const params: RouterKeyValue = {} as RouterKeyValue;\n    const keyValues = encodedParams.split(';');\n    keyValues.forEach((x: string) => {\n        const kvs: string[] = x.split('=');\n        if (kvs.length === 2) {\n            params[kvs[0]] = kvs[1];\n        }\n    });\n    return params;\n}\nexport function resolvePath___(url: string, routeSegments: RouteSegment[]): { path: string, search: string, hash: string, segments: any[] } {\n    // console.log('resolvePath_.resolvedRoute.routeSegments', routeSegments);\n    const path: string = url.split('?')[0];\n    const query: string = url.substring(path.length, url.length);\n    const search: string = query.split('#')[0];\n    const hash: string = query.substring(search.length, query.length);\n    const segments: string[] = path.split('/').filter(x => x !== '');\n    const params: RouterKeyValue = {};\n    routeSegments.forEach((segment: RouteSegment, index: number) => {\n        // console.log('segment.params', segment.params);\n        const keys: string[] = Object.keys(segment.params);\n        if (keys.length) {\n            params[keys[0]] = decodeParams_(segments[index]);\n        }\n    });\n    return { path, search, hash, segments };\n}\n*/\n","import { Component, Factory } from 'rxcomp';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { RouteComponent, RouterKeyValue } from '../router.types';\nimport { IBaseRoute, Route } from './route';\nimport { RouteSegment } from './route-segment';\n\nexport class RouteSnapshot implements IBaseRoute {\n\tpath!: string;\n\tpathMatch: 'prefix' | 'full' = 'prefix';\n\tcomponent!: typeof Component; // import !!!\n\tredirectTo?: string;\n\tsegments!: RouteSegment[];\n\trelative: boolean = true;\n\tchildren?: Route[];\n\tchildRoute?: RouteSnapshot;\n\tparent?: RouteSnapshot | undefined;\n\tinitialUrl?: string;\n\turlAfterRedirects?: string;\n\textractedUrl?: string;\n\tremainUrl?: string;\n\tdata!: RouterKeyValue;\n\tparams!: RouterKeyValue;\n\tqueryParams!: RouterKeyValue;\n\tdata$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tparams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tqueryParams$: ReplaySubject<RouterKeyValue> = new ReplaySubject<RouterKeyValue>(1);\n\tcanDeactivate: ((component: Factory, currentRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanLoad: ((route: RouteSnapshot, segments: RouteSegment[]) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivate: ((route: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tcanActivateChild: ((childRoute: RouteSnapshot) => Observable<boolean | RouteComponent[]>)[] = [];\n\tinstance?: Component;\n\tconstructor(options?: IBaseRoute) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tthis.data$.next(this.data);\n\t\tthis.params$.next(this.params);\n\t\tthis.queryParams$.next(this.queryParams);\n\t}\n\tnext(snapshot: RouteSnapshot): void {\n\t\tthis.childRoute = snapshot.childRoute;\n\t\tif (snapshot.childRoute) {\n\t\t\tsnapshot.childRoute.parent = this;\n\t\t}\n\t\tconst data = this.data = Object.assign({}, snapshot.data);\n\t\tthis.data$.next(data);\n\t\tconst params = this.params = Object.assign({}, snapshot.params);\n\t\tthis.params$.next(params);\n\t\tconst queryParams = this.queryParams = Object.assign({}, snapshot.queryParams);\n\t\tthis.queryParams$.next(queryParams);\n\t}\n}\n","import { Route } from '../route/route';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouteComponent, RouterLink } from '../router.types';\n\nexport interface IRouterEvent {\n\tid?: number;\n\trouterLink?: RouterLink;\n\turl?: string; // The target URL passed into the `Router#navigateByUrl()` call before navigation. This is the value before the router has parsed or applied redirects to it.\n\tinitialUrl?: any; // string | UrlTree; // The initial target URL after being parsed with `UrlSerializer.extract()`.\n\turlAfterRedirects?: string;\n\textractedUrl?: any; // UrlTree; // The extracted URL after redirects have been applied.\n\tremainUrl?: string;\n\tfinalUrl?: any; // UrlTree;\n\ttrigger?: 'imperative' | 'popstate' | 'hashchange';\n\textras?: any; // NavigationExtras;\n\tpreviousNavigation?: IRouterEvent | null;\n\troute?: Route | RouteSnapshot;\n\treason?: string;\n\tredirectTo?: RouteComponent[];\n\terror?: any;\n}\nexport class RouterEvent implements IRouterEvent {\n\turl!: string;\n\trouterLink!: RouterLink;\n\ttrigger!: 'imperative' | 'popstate' | 'hashchange';\n\tconstructor(options?: IRouterEvent) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tif (this.routerLink) {\n\t\t\tthis.url = Array.isArray(this.routerLink) ? this.routerLink.join('') : this.routerLink;\n\t\t}\n\t}\n}\n// An event triggered when navigation starts.\nexport class NavigationStart extends RouterEvent {\n\tnavigationTrigger!: 'imperative' | 'popstate' | 'hashchange';\n\trestoredState?: { [key: string]: any };\n}\n// An event triggered when the Router parses the URL and the routes are recognized.\nexport class RoutesRecognized extends RouterEvent {\n\troute!: RouteSnapshot; // ???\n\t// state!: RouterStateSnapshot;\n}\n// An event triggered at the start of the Guard phase of routing.\nexport class GuardsCheckStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the start of the child-activation part of the Resolve phase of routing.\nexport class ChildActivationStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the start of the activation part of the Resolve phase of routing.\nexport class ActivationStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the Guard phase of routing.\nexport class GuardsCheckEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the the start of the Resolve phase of routing.\nexport class ResolveStart extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the Resolve phase of routing.\nexport class ResolveEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the activation part of the Resolve phase of routing.\nexport class ActivationEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered at the end of the child-activation part of the Resolve phase of routing.\nexport class ChildActivationEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered before the Router lazy loads a route configuration.\nexport class RouteConfigLoadStart extends RouterEvent {\n\troute!: RouteSnapshot;\n\turlAfterRedirects!: string;\n}\n// An event triggered after a route has been lazy loaded.\nexport class RouteConfigLoadEnd extends RouterEvent {\n\troute!: RouteSnapshot;\n}\n// An event triggered when navigation ends successfully.\nexport class NavigationEnd extends RouterEvent {\n\turlAfterRedirects!: string;\n\troute!: RouteSnapshot;\n}\n// An event triggered when navigation is canceled. This is due to a Route Guard returning false during navigation.\nexport class NavigationCancel extends RouterEvent {\n\treason!: string;\n\tredirectTo?: RouteComponent[];\n}\n// An event triggered when navigation fails due to an unexpected error.\nexport class NavigationError extends RouterEvent {\n\terror!: any;\n}\n\n/*\nNavigationStart {id: 1, url: '/test-a', navigationTrigger: 'imperative', restoredState: null, constructor: Object}\nRoutesRecognized {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nGuardsCheckStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nChildActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\nActivationStart {snapshot: ActivatedRouteSnapshot, constructor: Object}\nGuardsCheckEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, shouldActivate: true…}\nResolveStart {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nResolveEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', state: RouterStateSnapshot, constructor: Object}\nActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\nChildActivationEnd {snapshot: ActivatedRouteSnapshot, constructor: Object}\nNavigationEnd {id: 1, url: '/test-a', urlAfterRedirects: '/test-a', constructor: Object}\nScroll {routerEvent: NavigationEnd, position: null, anchor: null, constructor: Object}\n*/\n","import { combineLatest, fromEvent, merge, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { ILocationStrategy, LocationStrategy, LocationStrategyPath } from '../location/location.strategy';\nimport { INavigationExtras, IRoute, IRoutes, Route, Routes } from '../route/route';\nimport { RoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport { RouteComponent, RouterKeyValue, RouterLink } from '../router.types';\nimport { ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, IRouterEvent, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized } from './router-events';\n\n// !!! todo: hash navigation strategy\n\nexport default class RouterService {\n\tstatic routes: Routes = [];\n\tstatic route$: ReplaySubject<RouteSnapshot> = new ReplaySubject<RouteSnapshot>(1);\n\tstatic events$: ReplaySubject<RouterEvent> = new ReplaySubject<RouterEvent>(1);\n\tstatic observe$: Observable<RouterEvent>;\n\tstatic get flatRoutes(): Routes {\n\t\treturn getFlatRoutes_(this.routes);\n\t}\n\tstatic setRoutes(routes: IRoutes): RouterService {\n\t\tthis.routes = routes.map((x: IRoute) => new Route(x));\n\t\tthis.observe$ = makeObserve$_(this.routes, this.route$, this.events$, this.locationStrategy);\n\t\treturn this;\n\t}\n\tstatic setRouterLink(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// ['/hero', hero.id];\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic navigate(routerLink: RouterLink, extras: INavigationExtras = { skipLocationChange: false }): void {\n\t\t// navigate(['items'], { relativeTo: this.route });\n\t\t// navigate(['/heroes', { id: heroId }]);\n\t\tthis.events$.next(new NavigationStart({ routerLink, trigger: 'imperative' }));\n\t}\n\tstatic findRoute(routerLink: RouterLink): Route | null {\n\t\tconst initialUrl: string = this.locationStrategy.serializeLink(routerLink);\n\t\treturn this.findRouteByUrl(initialUrl);\n\t}\n\tstatic findRouteByUrl(initialUrl: string): Route | null {\n\t\tconst routes: Routes = getFlatRoutes_(this.routes);\n\t\tlet resolvedRoute: Route | null = routes.find(route => initialUrl.match(route.matcher)) || null;\n\t\tlet urlAfterRedirects: string = initialUrl;\n\t\tif (resolvedRoute && resolvedRoute.redirectTo) {\n\t\t\turlAfterRedirects = resolvedRoute.redirectTo;\n\t\t\tresolvedRoute = this.findRouteByUrl(urlAfterRedirects);\n\t\t}\n\t\treturn resolvedRoute;\n\t}\n\tstatic getPath(routerLink: RouterLink = []): RoutePath {\n\t\tconst lastPath: string = (Array.isArray(routerLink) ? routerLink : [routerLink]).map(x => {\n\t\t\treturn typeof x === 'string' ? x : this.locationStrategy.encodeParams(x);\n\t\t}).join('/');\n\t\tconst segments: RouteSegment[] = [];\n\t\tconst routes: (Route | RouteSnapshot)[] = [];\n\t\tconst route: Route | null = this.findRouteByUrl(lastPath);\n\t\tif (route) {\n\t\t\tlet r: Route | RouteSnapshot | undefined | null = route?.parent;\n\t\t\twhile (r) {\n\t\t\t\tsegments.unshift.apply(segments, r.segments);\n\t\t\t\troutes.unshift(r instanceof RouteSnapshot ? r : r.snapshot || r);\n\t\t\t\tr = r.parent;\n\t\t\t}\n\t\t\tsegments.push.apply(segments, route?.segments || []);\n\t\t\troutes.push({ path: lastPath } as any);\n\t\t}\n\t\tlet initialUrl: string = routes.map(r => r instanceof RouteSnapshot ? r.extractedUrl : r.path).join('/');\n\t\tinitialUrl = this.locationStrategy.getPath(initialUrl);\n\t\t// console.log('RouterService.getPath', initialUrl);\n\t\tconst routePath: RoutePath = new RoutePath(initialUrl, segments, route || undefined, this.locationStrategy);\n\t\treturn routePath;\n\t}\n\tprivate static locationStrategy_: ILocationStrategy;\n\tstatic get locationStrategy(): ILocationStrategy {\n\t\tif (this.locationStrategy_) {\n\t\t\treturn this.locationStrategy_;\n\t\t} else {\n\t\t\treturn this.locationStrategy_ = new LocationStrategyPath();\n\t\t}\n\t}\n\tstatic useLocationStrategy(locationStrategyType: typeof LocationStrategy): void {\n\t\tthis.locationStrategy_ = new locationStrategyType();\n\t}\n}\n/*\nfunction setHistory_(locationStrategy: ILocationStrategy, url: string, params?: URLSearchParams, popped?: boolean): void {\n    if (isPlatformBrowser && window.history && window.history.pushState) {\n        const title = document.title;\n        url = locationStrategy.getUrl(url, params);\n        // !!!\n        // const state = params ? params.toString() : '';\n        // console.log(state);\n        if (popped) {\n            window.history.replaceState(undefined, title, url);\n        } else {\n            window.history.pushState(undefined, title, url);\n        }\n    }\n}\n*/\nfunction getFlatRoutes_(routes: Routes): Routes {\n\tconst reduceRoutes: (routes: Route[]) => Route[] = (routes: Route[]): Route[] => {\n\t\treturn routes.reduce<Routes>((p: Route[], c: Route) => {\n\t\t\tp.push(c);\n\t\t\tp.push.apply(p, reduceRoutes(c.children || []));\n\t\t\treturn p;\n\t\t}, []);\n\t}\n\treturn reduceRoutes(routes);\n}\nfunction getFlatSnapshots_(currentSnapshot: RouteSnapshot): RouteSnapshot[] {\n\tlet snapshots: RouteSnapshot[] = [currentSnapshot];\n\tlet childRoute: RouteSnapshot | undefined = currentSnapshot.childRoute;\n\twhile (childRoute) {\n\t\tsnapshots.push(childRoute)\n\t\tchildRoute = childRoute.childRoute;\n\t}\n\treturn snapshots;\n}\nfunction clearRoutes_(routes: Routes, currentSnapshot: RouteSnapshot): void {\n\tlet snapshots: RouteSnapshot[] = getFlatSnapshots_(currentSnapshot);\n\tconst flatRoutes: Routes = getFlatRoutes_(routes);\n\tflatRoutes.forEach((route: Route) => {\n\t\tif (route.snapshot && snapshots.indexOf(route.snapshot) === -1) {\n\t\t\troute.snapshot = undefined;\n\t\t}\n\t});\n}\nfunction resolveRoutes_(routes: Routes, childRoutes: Routes, initialUrl: string): RouteSnapshot | undefined {\n\tlet resolvedRoute: RouteSnapshot | undefined;\n\tfor (let route of childRoutes) {\n\t\tresolvedRoute = resolveRoute_(routes, route, initialUrl);\n\t\tif (resolvedRoute) {\n\t\t\treturn resolvedRoute;\n\t\t}\n\t}\n\treturn resolvedRoute;\n\t// return childRoutes.reduce<RouteSnapshot | undefined>((p, route) => p || resolveRoute_(routes, route, initialUrl), undefined);\n}\nfunction resolveRoute_(routes: Routes, route: Route, initialUrl: string): RouteSnapshot | undefined {\n\t// console.log('resolveRoute_', initialUrl);\n\tlet urlAfterRedirects!: string;\n\tlet extractedUrl: string = '';\n\tlet remainUrl: string = initialUrl;\n\tconst match: RegExpMatchArray | null = initialUrl.match(route.matcher);\n\t// console.log(route.matcher, match?.length, initialUrl, '=>', route.path);\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\tif (route.redirectTo) {\n\t\t// console.log('match', initialUrl, '=>', route.redirectTo, match);\n\t\treturn resolveRoutes_(routes, routes, route.redirectTo);\n\t}/* else {\n        // console.log('match', initialUrl, match);\n    }*/\n\textractedUrl = match[0];\n\tremainUrl = initialUrl.substring(match[0].length, initialUrl.length);\n\tconst routePath: RoutePath = new RoutePath(extractedUrl, route.segments, undefined, RouterService.locationStrategy);\n\tlet params: RouterKeyValue = routePath.params;\n\tconst snapshot: RouteSnapshot = new RouteSnapshot({ ...route, initialUrl, urlAfterRedirects, extractedUrl, remainUrl, params });\n\troute.snapshot = snapshot;\n\tif (route.children?.length && remainUrl.length) {\n\t\tconst childRoute: RouteSnapshot | undefined = resolveRoutes_(routes, route.children, remainUrl);\n\t\tsnapshot.childRoute = childRoute;\n\t\tif (childRoute) {\n\t\t\tchildRoute.parent = snapshot;\n\t\t}\n\t}\n\t// console.log('RouteSnapshot', snapshot.path, snapshot.extractedUrl, snapshot.remainUrl);\n\treturn snapshot;\n}\nfunction makeActivatorResponse$_(event: RouterEvent, activators: Observable<boolean | RouteComponent[]>[]): Observable<RouterEvent> {\n\t// console.log('makeActivatorResponse$_', event);\n\treturn combineLatest(...activators).pipe(\n\t\tmap((values: (boolean | RouteComponent[])[]) => {\n\t\t\tconst canActivate: boolean | RouteComponent[] = values.reduce<boolean | RouteComponent[]>((p: boolean | RouteComponent[], c: boolean | RouteComponent[]) => {\n\t\t\t\treturn p === true ? (c === true ? true : c) : p;\n\t\t\t}, true);\n\t\t\tif (canActivate === true) {\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tconst cancelEvent: IRouterEvent = { ...event, reason: 'An activation guard has dismissed navigation to the route.' };\n\t\t\t\tif (canActivate !== false) {\n\t\t\t\t\tcancelEvent.redirectTo = canActivate;\n\t\t\t\t}\n\t\t\t\treturn new NavigationCancel(cancelEvent);\n\t\t\t}\n\t\t})\n\t);\n}\nfunction makeCanDeactivateResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart, currentRoute?: RouteSnapshot): Observable<RouterEvent> {\n\t// console.log('makeCanDeactivateResponse$_', event);\n\tif (event.route.canDeactivate && event.route.canDeactivate.length && currentRoute?.instance) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canDeactivate.map(x => x(currentRoute.instance!, currentRoute)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanLoadResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanLoadResponse$_', event);\n\tif (event.route.canLoad && event.route.canLoad.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canLoad.map(x => x(route, route.segments)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateChildResponse$_(events$: ReplaySubject<RouterEvent>, event: GuardsCheckStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateChildResponse$_', event, event.route.childRoute);\n\tconst reduceChildRouteActivators_ = (route: RouteSnapshot, activators: Observable<boolean | RouteComponent[]>[]): Observable<boolean | RouteComponent[]>[] => {\n\t\t// console.log('reduceChildRouteActivators_', route.canActivateChild, route.childRoute);\n\t\twhile (route != null && route.canActivateChild && route.canActivateChild.length && route.childRoute) {\n\t\t\tconst routeActivators: Observable<boolean | RouteComponent[]>[] = route.canActivateChild.map(x => x(route.childRoute!));\n\t\t\tArray.prototype.push.apply(activators, routeActivators);\n\t\t\troute = route.childRoute;\n\t\t}\n\t\treturn activators;\n\t}\n\tconst activators: Observable<boolean | RouteComponent[]>[] = reduceChildRouteActivators_(event.route, []);\n\t// console.log('makeCanActivateChildResponse$_', activators);\n\tif (activators.length) {\n\t\treturn makeActivatorResponse$_(event, activators);\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeCanActivateResponse$_(events$: ReplaySubject<RouterEvent>, event: ChildActivationStart): Observable<RouterEvent> {\n\t// console.log('makeCanActivateResponse$_', event);\n\tif (event.route.canActivate && event.route.canActivate.length) {\n\t\tconst route: RouteSnapshot = event.route;\n\t\treturn makeActivatorResponse$_(event, route.canActivate.map(x => x(route)));\n\t} else {\n\t\treturn of(event);\n\t}\n}\nfunction makeObserve$_(routes: Routes, route$: ReplaySubject<RouteSnapshot>, events$: ReplaySubject<RouterEvent>, locationStrategy: ILocationStrategy): Observable<RouterEvent> {\n\tlet currentRoute: RouteSnapshot | undefined;\n\tconst stateEvents$ = merge(fromEvent<PopStateEvent>(window, 'popstate')).pipe(\n        /*\n        tap((event: PopStateEvent) => {\n            // console.log('location', document.location.pathname, 'state', event.state);\n        }),\n        */\n\t\tmap(event => new NavigationStart({ routerLink: document.location.pathname, trigger: 'popstate' })),\n\t\tshareReplay(1),\n\t);\n\treturn merge(stateEvents$, events$).pipe(\n\t\tswitchMap((event: RouterEvent) => {\n\t\t\tif (event instanceof GuardsCheckStart) {\n\t\t\t\treturn makeCanDeactivateResponse$_(events$, event, currentRoute).pipe(\n\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn makeCanLoadResponse$_(events$, event).pipe(\n\t\t\t\t\t\t\t\tswitchMap((nextEvent: RouterEvent) => {\n\t\t\t\t\t\t\t\t\tif (nextEvent instanceof NavigationCancel) {\n\t\t\t\t\t\t\t\t\t\treturn of(nextEvent);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn makeCanActivateChildResponse$_(events$, event);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\treturn makeCanActivateResponse$_(events$, event);\n\t\t\t} else {\n\t\t\t\treturn of(event);\n\t\t\t}\n\t\t}),\n\t\ttap((event: RouterEvent) => {\n\t\t\tif (event instanceof NavigationStart) {\n\t\t\t\t// console.log('NavigationStart', event.routerLink);\n\t\t\t\tconst routerLink = event.routerLink;\n\t\t\t\t// console.log('routerLink', routerLink);\n\t\t\t\tlet snapshot: RouteSnapshot | undefined;\n\t\t\t\tlet initialUrl: string;\n\t\t\t\tconst routePath: RoutePath = RouterService.getPath(routerLink);\n\t\t\t\t// console.log(routePath, routePath.url);\n\t\t\t\tinitialUrl = routePath.url;\n\t\t\t\t// console.log('initialUrl', initialUrl);\n\t\t\t\tconst isRelative: boolean = initialUrl.indexOf('/') !== 0;\n\t\t\t\tif (isRelative && currentRoute && currentRoute.children?.length) {\n\t\t\t\t\tsnapshot = resolveRoutes_(routes, currentRoute.children, initialUrl);\n\t\t\t\t\tif (snapshot) {\n\t\t\t\t\t\tcurrentRoute.childRoute = snapshot;\n\t\t\t\t\t\tsnapshot.parent = currentRoute;\n\t\t\t\t\t\tsnapshot = currentRoute;\n\t\t\t\t\t}\n\t\t\t\t\t// console.log('relative', currentRoute, snapshot, initialUrl);\n\t\t\t\t} else {\n\t\t\t\t\tsnapshot = resolveRoutes_(routes, routes, initialUrl);\n\t\t\t\t\t// console.log('absolute');\n\t\t\t\t}\n\t\t\t\tif (snapshot) {\n\t\t\t\t\t// console.log(routes);\n\t\t\t\t\tcurrentRoute = snapshot;\n\t\t\t\t\tevents$.next(new RoutesRecognized({ ...event, route: snapshot }));\n\t\t\t\t} else {\n\t\t\t\t\tevents$.next(new NavigationError({ ...event, error: new Error('unknown route') }));\n\t\t\t\t}\n\t\t\t} else if (event instanceof RoutesRecognized) {\n\t\t\t\t// console.log('RoutesRecognized', event);\n\t\t\t\tevents$.next(new GuardsCheckStart({ ...event }));\n\t\t\t} else if (event instanceof GuardsCheckStart) {\n\t\t\t\t// console.log('GuardsCheckStart', event);\n\t\t\t\tevents$.next(new ChildActivationStart({ ...event }));\n\t\t\t} else if (event instanceof ChildActivationStart) {\n\t\t\t\t// console.log('ChildActivationStart', event);\n\t\t\t\tevents$.next(new ActivationStart({ ...event }));\n\t\t\t} else if (event instanceof ActivationStart) {\n\t\t\t\t// console.log('ActivationStart', event);\n\t\t\t\tevents$.next(new GuardsCheckEnd({ ...event }));\n\t\t\t} else if (event instanceof GuardsCheckEnd) {\n\t\t\t\t// console.log('GuardsCheckEnd', event);\n\t\t\t\tevents$.next(new ResolveStart({ ...event }));\n\t\t\t} else if (event instanceof ResolveStart) {\n\t\t\t\t// console.log('ResolveStart', event);\n\t\t\t\tevents$.next(new ResolveEnd({ ...event }));\n\t\t\t} else if (event instanceof ResolveEnd) {\n\t\t\t\t// console.log('ResolveEnd', event);\n\t\t\t\tevents$.next(new ActivationEnd({ ...event }));\n\t\t\t} else if (event instanceof ActivationEnd) {\n\t\t\t\t// console.log('ActivationEnd', event);\n\t\t\t\tevents$.next(new ChildActivationEnd({ ...event }));\n\t\t\t} else if (event instanceof ChildActivationEnd) {\n\t\t\t\t// console.log('ChildActivationEnd', event);\n\t\t\t\tevents$.next(new RouteConfigLoadStart({ ...event }));\n\t\t\t} else if (event instanceof RouteConfigLoadStart) {\n\t\t\t\t// console.log('RouteConfigLoadStart', event);\n\t\t\t\tevents$.next(new RouteConfigLoadEnd({ ...event }));\n\t\t\t} else if (event instanceof RouteConfigLoadEnd) {\n\t\t\t\t// console.log('RouteConfigLoadEnd', event);\n\t\t\t\tevents$.next(new NavigationEnd({ ...event }));\n\t\t\t} else if (event instanceof NavigationEnd) {\n\t\t\t\tconst segments: string[] = [];\n\t\t\t\tlet source: RouteSnapshot | undefined = event.route;\n\t\t\t\twhile (source != null) {\n\t\t\t\t\t// console.log(source.params, source.data);\n\t\t\t\t\tif (source.extractedUrl?.length) {\n\t\t\t\t\t\tsegments.push(source.extractedUrl);\n\t\t\t\t\t}\n\t\t\t\t\tif (source.childRoute) {\n\t\t\t\t\t\tsource = source.childRoute;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (source.remainUrl?.length) {\n\t\t\t\t\t\t\tsegments[segments.length - 1] = segments[segments.length - 1] + source.remainUrl;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsource = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst extractedUrl: string = segments.join('/').replace(/\\/\\//g, '/');\n\t\t\t\tconsole.log('NavigationEnd', event);\n\t\t\t\tclearRoutes_(routes, event.route);\n\t\t\t\tlocationStrategy.setHistory(extractedUrl, undefined, event.trigger === 'popstate');\n\t\t\t\t// setHistory_(locationStrategy, extractedUrl, undefined, event.trigger === 'popstate');\n\t\t\t\troute$.next(event.route);\n\t\t\t} else if (event instanceof NavigationCancel) {\n\t\t\t\tconsole.log('NavigationCancel', event);\n\t\t\t\tif (event.redirectTo) {\n\t\t\t\t\tevents$.next(new NavigationStart({ routerLink: event.redirectTo, trigger: 'imperative' }));\n\t\t\t\t}\n\t\t\t} else if (event instanceof NavigationError) {\n\t\t\t\tconsole.log('NavigationError', event);\n\t\t\t}\n\t\t}),\n\t\tcatchError((error: Error) => of(new NavigationError({ ...event, error }))),\n\t\tshareReplay(1),\n\t);\n}\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\nimport { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport { INavigationExtras } from '../route/route';\nimport { RoutePath } from '../route/route-path';\nimport { RouteSegment } from '../route/route-segment';\nimport { RouteComponent, RouterLink } from '../router.types';\nimport RouterService from './router.service';\n\nexport default class RouterLinkDirective extends Directive {\n\tpath!: RoutePath;\n\tsegments!: RouteSegment[];\n\tprivate routerLink_!: RouteComponent[];\n\tget routerLink(): RouterLink {\n\t\treturn this.routerLink_;\n\t}\n\tset routerLink(routerLink: RouterLink) {\n\t\tthis.routerLink_ = Array.isArray(routerLink) ? routerLink : [routerLink];\n\t\tthis.segments = this.getSegments(this.routerLink_);\n\t}\n\n\tgetSegments(routerLink: RouteComponent[]): RouteSegment[] {\n\t\t// console.log('RouterLinkDirective.getSegments', routerLink);\n\t\tconst segments: RouteSegment[] = [];\n\t\trouterLink.forEach(item => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\tconst regExp: RegExp = /([^:]+)|\\:([^\\/]+)/g;\n\t\t\t\tconst matches = item.matchAll(regExp);\n\t\t\t\tconst components = [];\n\t\t\t\tfor (let match of matches) {\n\t\t\t\t\tconst g1 = match[1];\n\t\t\t\t\tconst g2 = match[2];\n\t\t\t\t\tif (g1) {\n\t\t\t\t\t\tcomponents.push(g1);\n\t\t\t\t\t} else if (g2) {\n\t\t\t\t\t\tconst param: { [key: string]: any } = {};\n\t\t\t\t\t\tparam[g2] = null;\n\t\t\t\t\t\tcomponents.push(param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegments.push(new RouteSegment('', {}));\n\t\t\t}\n\t\t});\n\t\treturn segments;\n\t}\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, 'click').pipe(shareReplay(1));\n\t\tevent$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(event => {\n\t\t\t// console.log('RouterLinkDirective', event, this.routerLink);\n\t\t\t// !!! skipLocationChange\n\t\t\tconst navigationExtras: INavigationExtras = {\n\t\t\t\tskipLocationChange: this.skipLocationChange,\n\t\t\t\treplaceUrl: this.replaceUrl,\n\t\t\t\tstate: this.state,\n\t\t\t};\n\t\t\tRouterService.setRouterLink(this.routerLink, navigationExtras);\n\t\t\tevent.preventDefault();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst routePath: RoutePath = RouterService.getPath(this.routerLink_);\n\t\t// console.log('RouterLinkDirective.routePath', routePath);\n\t\tnode.setAttribute('href', routePath.url);\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[routerLink],[[routerLink]]',\n\t\tinputs: ['routerLink'],\n\t};\n}\n\n/*\nget urlTree(): UrlTree {\n    return RouterService.createUrlTree(this.routerLink, {\n        relativeTo: this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        preserveQueryParams: this.preserve,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment,\n    });\n}\n*/\n","import { Directive, getContext, IFactoryMeta } from 'rxcomp';\nimport { RoutePath } from '../route/route-path';\nimport RouterLinkDirective from './router-link.directive';\nimport RouterService from './router.service';\n\nexport default class RouterLinkActiveDirective extends Directive {\n\trouterLinkActive!: { [key: string]: string } | string;\n\tkeys: string[] = [];\n\tonChanges() {\n\t\t// console.log('RouterLinkActive.onChanges');\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.remove.apply(node.classList, this.keys);\n\t\tlet keys: string[] = [];\n\t\tconst active = this.isActive();\n\t\tif (active) {\n\t\t\tconst object = this.routerLinkActive;\n\t\t\tif (typeof object === 'object') {\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tif (object[key]) {\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof object === 'string') {\n\t\t\t\tkeys = object.split(' ').filter(x => x.length);\n\t\t\t}\n\t\t}\n\t\tnode.classList.add.apply(node.classList, keys);\n\t\tthis.keys = keys;\n\t\t// console.log('RouterLinkActive.onChanges', active, keys);\n\t}\n\tisActive(): boolean {\n\t\tconst path: RoutePath = RouterService.getPath(this.host.routerLink);\n\t\tconst isActive: boolean = path.route?.snapshot != null;\n\t\t// console.log('RouterLinkActive.isActive', isActive);\n\t\treturn isActive;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[routerLinkActive],[[routerLinkActive]]',\n\t\thosts: { host: RouterLinkDirective },\n\t\tinputs: ['routerLinkActive'],\n\t};\n}\n","import { Component, Factory, getContext, IComment, IElement, IFactoryMeta, Structure } from 'rxcomp';\nimport { isObservable, Observable, Observer, of, ReplaySubject, Subscription } from 'rxjs';\nimport { filter, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport View from '../core/view';\nimport { isPromise } from '../route/route-activators';\nimport { RouteSnapshot } from '../route/route-snapshot';\nimport RouterService from './router.service';\n\nexport default class RouterOutletStructure extends Structure {\n\tprivate route$_: ReplaySubject<RouteSnapshot | undefined> = new ReplaySubject<RouteSnapshot | undefined>(1);\n\tprivate route_?: RouteSnapshot;\n\tprivate factory_?: typeof Component;\n\tget route(): RouteSnapshot | undefined {\n\t\treturn this.route_;\n\t}\n\thost?: RouterOutletStructure;\n\toutlet!: IComment;\n\telement?: IElement;\n\tinstance?: Component;\n\tonInit() {\n\t\tthis.route$().pipe(\n\t\t\tswitchMap(snapshot => this.factory$(snapshot)),\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(() => {\n\t\t\t// console.log(`RouterOutletStructure ActivatedRoutes: [\"${RouterService.flatRoutes.filter(x => x.snapshot).map(x => x.snapshot?.extractedUrl).join('\", \"')}\"]`);\n\t\t});\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\tonChanges() {\n\t\tif (this.host) {\n\t\t\tthis.route$_.next(this.host.route?.childRoute);\n\t\t}\n\t}\n\troute$(): Observable<RouteSnapshot | undefined> {\n\t\tconst source: Observable<RouteSnapshot | undefined> = this.host ? this.route$_ : RouterService.route$;\n\t\treturn source.pipe(\n\t\t\tfilter((snapshot: RouteSnapshot | undefined) => {\n\t\t\t\tthis.route_ = snapshot; // !!!\n\t\t\t\tif (this.snapshot_ && snapshot && this.snapshot_.component === snapshot.component) {\n\t\t\t\t\tthis.snapshot_.next(snapshot);\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapshot_ = snapshot;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tfactory$(snapshot: RouteSnapshot | undefined): Observable<boolean> {\n\t\tconst { module, node } = getContext(this);\n\t\tconst factory: typeof Component | undefined = snapshot?.component;\n\t\tif (this.factory_ !== factory) {\n\t\t\tthis.factory_ = factory;\n\t\t\treturn this.onExit$_(this.element, this.instance).pipe(\n\t\t\t\ttap(() => {\n\t\t\t\t\tif (this.element) {\n\t\t\t\t\t\tthis.element.parentNode!.removeChild(this.element);\n\t\t\t\t\t\tmodule.remove(this.element, this);\n\t\t\t\t\t\tthis.element = undefined;\n\t\t\t\t\t\tthis.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\tif (snapshot && factory && factory.meta.template) {\n\t\t\t\t\t\tlet element: IElement = document.createElement('div');\n\t\t\t\t\t\telement.innerHTML = factory.meta.template;\n\t\t\t\t\t\tif (element.children.length === 1) {\n\t\t\t\t\t\t\telement = element.firstElementChild as IElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.appendChild(element);\n\t\t\t\t\t\tconst instance: Factory | undefined = module.makeInstance(element, factory, factory.meta.selector!, this, undefined, { route: snapshot });\n\t\t\t\t\t\tmodule.compile(element, instance);\n\t\t\t\t\t\tthis.instance = instance;\n\t\t\t\t\t\tthis.element = element;\n\t\t\t\t\t\tsnapshot.instance = instance;\n\t\t\t\t\t\treturn this.onEnter$_(element, instance);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(false);\n\t\t}\n\t}\n\tprivate onEnter$_(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (element && instance && instance instanceof View) {\n\t\t\treturn asObservable_([element], instance.onEnter);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\tprivate onExit$_(element?: IElement, instance?: Component): Observable<boolean> {\n\t\tif (element && instance && instance instanceof View) {\n\t\t\treturn asObservable_([element], instance.onExit);\n\t\t} else {\n\t\t\treturn of(true);\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'router-outlet,[router-outlet]',\n\t\thosts: { host: RouterOutletStructure },\n\t};\n}\n\nfunction asObservable_<T>(args: any[], callback: (...args: any[]) => Observable<T> | Promise<T> | (() => T) | T): Observable<T> {\n\treturn Observable.create(function (observer: Observer<T>) {\n\t\tlet subscription: Subscription;\n\t\ttry {\n\t\t\tlet result: Observable<T> | Promise<T> | (() => T) | T = callback(...args);\n\t\t\tif (isObservable(result)) {\n\t\t\t\tsubscription = result.subscribe(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (isPromise<T>(result)) {\n\t\t\t\t(result as Promise<T>).then(result => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else if (typeof result === 'function') {\n\t\t\t\tobserver.next((result as (() => T))() as T);\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tobserver.next(result);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n\t\treturn () => {\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t}\n\t\t}\n\t});\n}\n\n/*\nset route(route: RouteSnapshot | undefined) {\n    if (this.route_ && route && this.route_.component === route.component) {\n        this.route_.next(route);\n    } else {\n        this.route_ = route;\n        if (route) {\n            this.factory = route.component;\n            route.instance = this.instance;\n        } else {\n            this.factory = undefined;\n        }\n    }\n}\nget factory(): typeof Component | undefined {\n    return this.factory_;\n}\nset factory(factory: typeof Component | undefined) {\n    const { module, node } = getContext(this);\n    if (this.factory_ !== factory) {\n        this.factory_ = factory;\n        if (this.element) {\n            if (this.instance && this.instance instanceof View) {\n                asObservable_([this.element], this.instance.onExit);\n            }\n            this.element.parentNode!.removeChild(this.element);\n            module.remove(this.element, this);\n            this.element = undefined;\n            this.instance = undefined;\n        }\n        if (factory && factory.meta.template) {\n            let element: IElement = document.createElement('div');\n            element.innerHTML = factory.meta.template;\n            if (element.children.length === 1) {\n                element = element.firstElementChild as IElement;\n            }\n            node.appendChild(element);\n            const instance: Factory | undefined = module.makeInstance(element, factory, factory.meta.selector!, this);\n            module.compile(element, instance);\n            this.instance = instance;\n            this.element = element;\n        }\n    }\n}\n*/\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { LocationStrategy } from './location/location.strategy';\nimport { IRoute } from './route/route';\nimport { NavigationCancel, NavigationEnd, NavigationError, RouterEvent } from './router/router-events';\nimport RouterLinkActiveDirective from './router/router-link-active.directive';\nimport RouterLinkDirective from './router/router-link.directive';\nimport RouterOutletStructure from './router/router-outlet.structure';\nimport RouterService from './router/router.service';\n\nconst factories: typeof Factory[] = [\n\tRouterOutletStructure,\n\tRouterLinkDirective,\n\tRouterLinkActiveDirective,\n];\n\nconst pipes: typeof Pipe[] = [\n];\n\n/**\n *  RouterModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *   RouterModule.forRoot([\n *    { path: '', redirectTo: '/index', pathMatch: 'full' },\n *    { path: 'index', component: IndexComponent, data: { title: 'Index' } }\n *   ])\n *  ],\n *  declarations: [\n *   IndexComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class RouterModule extends Module {\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log('RouterModule');\n\t\tRouterService.observe$.pipe(\n\t\t\ttap((event: RouterEvent) => {\n\t\t\t\tif (event instanceof NavigationEnd\n\t\t\t\t\t|| event instanceof NavigationCancel\n\t\t\t\t\t|| event instanceof NavigationError) {\n\t\t\t\t\tif (this.instances?.length) {\n\t\t\t\t\t\tconst root = this.instances[0];\n\t\t\t\t\t\troot.pushChanges();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe();\n\t\tRouterService.navigate(`${window.location.pathname}${window.location.search}${window.location.hash}`);\n\t}\n\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n\tstatic forRoot(routes: IRoute[]): typeof RouterModule {\n\t\tRouterService.setRoutes(routes);\n\t\treturn RouterModule;\n\t}\n\n\tstatic useStrategy(locationStrategyType: typeof LocationStrategy): typeof RouterModule {\n\t\tRouterService.useLocationStrategy(locationStrategyType);\n\t\treturn this;\n\t}\n}\n","import { Observable } from 'rxjs';\n\nexport enum RouteLocationStrategy {\n\tPath = 'path',\n\tHash = 'hash',\n}\nexport type RouteComponent = string | number | { [key: string]: any; };\nexport type RouterLink = string | RouteComponent[];\nexport type RouterActivator = Observable<boolean> | (() => boolean) | boolean;\nexport type RouterActivatorResult = Observable<boolean | RouteComponent[]> | Promise<boolean | RouteComponent[]> | boolean | RouteComponent[];\nexport type RouterKeyValue = { [key: string]: RouterKeyValue | string | null };\nexport type Params = { [key: string]: any; };\nexport type Data = { [key: string]: any; };\n\n","import { isPlatformBrowser } from 'rxcomp';\nimport { Observable, Observer } from 'rxjs';\n\nexport function transition$(callback: (complete: (result: boolean) => void) => void) {\n\treturn Observable.create(function (observer: Observer<boolean>) {\n\t\t// let subscription: Subscription;\n\t\ttry {\n\t\t\tif (isPlatformBrowser) {\n\t\t\t\tcallback((result: boolean) => {\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tobserver.next(true);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tobserver.error(error);\n\t\t}\n        /*\n        return () => {\n            if (subscription) {\n                subscription.unsubscribe();\n            }\n        }\n        */\n\t});\n}\n","import { Component, errors$, getContext, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\n\nexport default class AppComponent extends Component {\n\terror: any = null;\n\n\tonInit() {\n\t\t// console.log('AppComponent.onInit', this);\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.add('init');\n\t\terrors$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe(error => {\n\t\t\tthis.error = error;\n\t\t\tthis.pushChanges();\n\t\t});\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[app-component]',\n\t};\n}\n","import { Component } from 'rxcomp';\nimport { ICanActivate, ICanActivateChild, ICanDeactivate, ICanLoad, RouterActivatorResult, RouteSegment, RouteSnapshot } from '../../../../src/rxcomp-router';\n\nexport class CustomActivator implements ICanActivate, ICanDeactivate<Component>, ICanActivateChild, ICanLoad {\n\tcanDeactivate<T>(component: T, currentRoute: RouteSnapshot): RouterActivatorResult {\n\t\t// console.log('canDeactivate', component, currentRoute);\n\t\treturn true;\n\t}\n\tcanLoad(route: RouteSnapshot, segments: RouteSegment[]): RouterActivatorResult {\n\t\t// console.log('canLoad', route, segments);\n\t\treturn true;\n\t}\n\tcanActivate(route: RouteSnapshot): RouterActivatorResult {\n\t\t// console.log('canActivate', route);\n\t\treturn ['/dashboard'];\n\t}\n\tcanActivateChild(childRoute: RouteSnapshot): RouterActivatorResult {\n\t\t// console.log('canActivateChild', childRoute);\n\t\treturn childRoute.path === 'media' ? ['files'] : true;\n\t}\n}\n\nexport const customActivator: CustomActivator = new CustomActivator();\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class ContactsComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\troute.data$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((data: RouterKeyValue) => {\n\t\t\t\tthis.title = data.title;\n\t\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t\t// console.log('ContactsComponent', data);\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[contacts-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-contacts\">\n            <div class=\"title\">{{title}}</div>\n        </div>\n        `,\n\t};\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class DataComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\tcombineLatest(route.data$, route.params$).pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((datas: RouterKeyValue[]) => {\n\t\t\t\tthis.title = datas[0].title;\n\t\t\t\tthis.params = datas[1];\n\t\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t\t// console.log('DataComponent', datas);\n\t\t\t});\n\t\t}\n        /*\n        this.host.route?.data$.pipe(\n            takeUntil(this.unsubscribe$),\n        ).subscribe((data) => this.title = data.title);\n        this.host.route?.params$.pipe(\n            takeUntil(this.unsubscribe$),\n        ).subscribe((params) => this.params = params);\n        */\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[data-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-data\">\n            <div class=\"title\">{{title}}</div>\n            <div class=\"params\">{{params | json}}</div>\n        </div>\n        `,\n\t};\n}\n","import 'gsap';\nimport { IElement, IFactoryMeta } from 'rxcomp';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, transition$, View } from '../../../../src/rxcomp-router';\n\nexport default class DetailComponent extends View {\n\tonInit() {\n\t\tconsole.log('DetailComponent.onInit', this.route);\n\t\tcombineLatest(this.route.data$, this.route.params$).pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe((datas: RouterKeyValue[]) => {\n\t\t\tthis.title = datas[0].title;\n\t\t\tthis.detailId = datas[1].detailId;\n\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t// console.log('DetailComponent', datas);\n\t\t});\n\t}\n\tonEnter(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 0 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: 1,\n\t\t\t\tease: Power3.easeInOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tonExit(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 1 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: 1,\n\t\t\t\tease: Power3.easeInOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[detail-component]',\n\t\ttemplate: /* html */`\n        <div class=\"page-detail\">\n            <div class=\"title\">Detail {{detailId}}</div>\n            <ul class=\"nav--menu\">\n                <li><a routerLink=\"media\" routerLinkActive=\"active\">Media</a></li>\n                <li><a routerLink=\"files\" routerLinkActive=\"active\">Files</a></li>\n            </ul>\n            <router-outlet></router-outlet>\n        </div>\n        `,\n\t};\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class IndexComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\troute.data$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((data: RouterKeyValue) => {\n\t\t\t\tthis.title = data.title;\n\t\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t\t// console.log('IndexComponent', data);\n\t\t\t});\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[index-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-index\">\n            <div class=\"title\">{{title}}</div>\n        </div>\n        `,\n\t};\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class NotFoundComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\t// console.log('NotFoundComponent.onInit');\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[not-found-component]',\n\t\ttemplate: /* html */`\n        <div class=\"page-not-found\">\n            <div class=\"title\">Not Found</div>\n        </div>\n        `,\n\t};\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterKeyValue, RouterOutletStructure } from '../../../../src/rxcomp-router';\n\nexport default class SubComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\troute.data$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((data: RouterKeyValue) => {\n\t\t\t\tthis.title = data.title;\n\t\t\t\t// this.pushChanges(); // !!not needed;\n\t\t\t\t// console.log('SubComponent', data);\n\t\t\t});\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[sub-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-sub\">\n            <div class=\"title\">{{title}}</div>\n        </div>\n        `,\n\t};\n}\n","import { CoreModule, IModuleMeta, Module } from 'rxcomp';\nimport { LocationStrategyHash, RouterModule } from '../../../src/rxcomp-router';\nimport AppComponent from './app.component';\nimport { customActivator } from './custom-activator/custom-activator';\nimport ContactsComponent from './pages/contacts.component';\nimport DataComponent from './pages/data.component';\nimport DetailComponent from './pages/detail.component';\nimport IndexComponent from './pages/index.component';\nimport NotFoundComponent from './pages/not-found.component';\nimport SubComponent from './pages/sub.component';\n\nexport default class AppModule extends Module {\n\tstatic meta: IModuleMeta = {\n\t\timports: [\n\t\t\tCoreModule,\n\t\t\tRouterModule.forRoot([\n\t\t\t\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n\t\t\t\t{ path: 'dashboard', component: IndexComponent, data: { title: 'Dashboard' } },\n\t\t\t\t{\n\t\t\t\t\tpath: 'detail/:detailId', component: DetailComponent, data: { title: 'Detail' },\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{ path: 'media', component: SubComponent, data: { title: 'Media' } },\n\t\t\t\t\t\t{ path: 'files', component: SubComponent, data: { title: 'Files' } }\n\t\t\t\t\t],\n\t\t\t\t\tcanActivateChild: [customActivator],\n\t\t\t\t},\n\t\t\t\t{ path: 'data/:data', component: DataComponent, data: { title: 'Data' } },\n\t\t\t\t{ path: 'contacts', component: ContactsComponent, data: { title: 'Contacts' }, canActivate: [customActivator] },\n\t\t\t\t{ path: '**', component: NotFoundComponent },\n\t\t\t]).useStrategy(LocationStrategyHash),\n\t\t],\n\t\tdeclarations: [\n\t\t\tIndexComponent,\n\t\t\tDataComponent,\n\t\t\tDetailComponent,\n\t\t\tContactsComponent,\n\t\t],\n\t\tbootstrap: AppComponent,\n\t};\n\n}\n","import { Browser } from 'rxcomp';\nimport AppModule from './app.module';\n\nBrowser.bootstrap(AppModule);\n"]}